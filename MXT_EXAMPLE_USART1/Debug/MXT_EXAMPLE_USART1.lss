
MXT_EXAMPLE_USART1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00010bcc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00410bcc  00410bcc  00020bcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20400000  00410bd4  00030000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000006ac  204009c0  00411594  000309c0  2**2
                  ALLOC
  4 .stack        00002004  2040106c  00411c40  000309c0  2**0
                  ALLOC
  5 .heap         00000200  20403070  00413c44  000309c0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000309c0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000309ee  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001e502  00000000  00000000  00030a47  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000040bc  00000000  00000000  0004ef49  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00008c2d  00000000  00000000  00053005  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000dc0  00000000  00000000  0005bc32  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000f20  00000000  00000000  0005c9f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00023068  00000000  00000000  0005d912  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00010110  00000000  00000000  0008097a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009543f  00000000  00000000  00090a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00003434  00000000  00000000  00125ecc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	70 30 40 20 d5 1c 40 00 d3 1c 40 00 d3 1c 40 00     p0@ ..@...@...@.
  400010:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	d3 1c 40 00 d3 1c 40 00 00 00 00 00 d3 1c 40 00     ..@...@.......@.
  40003c:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  40004c:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  40005c:	d3 1c 40 00 d3 1c 40 00 00 00 00 00 4d 16 40 00     ..@...@.....M.@.
  40006c:	61 16 40 00 75 16 40 00 d3 1c 40 00 d3 1c 40 00     a.@.u.@...@...@.
  40007c:	d3 1c 40 00 89 16 40 00 9d 16 40 00 d3 1c 40 00     ..@...@...@...@.
  40008c:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  40009c:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  4000ac:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  4000bc:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  4000cc:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  4000dc:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  4000ec:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  4000fc:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  40010c:	d3 1c 40 00 d3 1c 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ......@...@...@.
  40012c:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  40013c:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  40014c:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00 d3 1c 40 00     ..@...@...@...@.
  40015c:	d3 1c 40 00 d3 1c 40 00 d3 1c 40 00                 ..@...@...@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204009c0 	.word	0x204009c0
  400184:	00000000 	.word	0x00000000
  400188:	00410bd4 	.word	0x00410bd4

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	00410bd4 	.word	0x00410bd4
  4001c8:	204009c4 	.word	0x204009c4
  4001cc:	00410bd4 	.word	0x00410bd4
  4001d0:	00000000 	.word	0x00000000

004001d4 <mxt_init_device>:
 * \param chgpin IOPORT pin instance attached to the maXTouch device's /CHG pin
 * \return Operation result status code
 */
status_code_t mxt_init_device(struct mxt_device *device,
		twihs_master_t interface, uint8_t chip_adr, uint32_t chgpin)
{
  4001d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4001d6:	b087      	sub	sp, #28
  4001d8:	4604      	mov	r4, r0
  4001da:	460e      	mov	r6, r1
  4001dc:	4617      	mov	r7, r2
	int8_t status;

	/* Set TWI interface, TWI address and CHG-pin of the maXTouch device. */
	device->interface = interface;
  4001de:	6081      	str	r1, [r0, #8]
	device->mxt_chip_adr = chip_adr;
  4001e0:	7302      	strb	r2, [r0, #12]
	device->chgpin = chgpin;
  4001e2:	6183      	str	r3, [r0, #24]
	device->handler = NULL;
  4001e4:	2500      	movs	r5, #0
  4001e6:	6105      	str	r5, [r0, #16]
			malloc(sizeof(struct mxt_info_object));
  4001e8:	2007      	movs	r0, #7
  4001ea:	4b9d      	ldr	r3, [pc, #628]	; (400460 <mxt_init_device+0x28c>)
  4001ec:	4798      	blx	r3
	device->info_object = (struct mxt_info_object *)
  4001ee:	6020      	str	r0, [r4, #0]
	twihs_package_t packet = {
  4001f0:	9501      	str	r5, [sp, #4]
  4001f2:	9505      	str	r5, [sp, #20]
  4001f4:	2302      	movs	r3, #2
  4001f6:	9302      	str	r3, [sp, #8]
  4001f8:	9003      	str	r0, [sp, #12]
  4001fa:	2307      	movs	r3, #7
  4001fc:	9304      	str	r3, [sp, #16]
  4001fe:	f88d 7014 	strb.w	r7, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  400202:	a901      	add	r1, sp, #4
  400204:	4630      	mov	r0, r6
  400206:	4b97      	ldr	r3, [pc, #604]	; (400464 <mxt_init_device+0x290>)
  400208:	4798      	blx	r3
  40020a:	1b40      	subs	r0, r0, r5
  40020c:	bf18      	it	ne
  40020e:	2001      	movne	r0, #1
  400210:	4240      	negs	r0, r0
	if ((status = mxt_read_id_block(device)) != STATUS_OK) {
  400212:	b108      	cbz	r0, 400218 <mxt_init_device+0x44>
	}

	device->multitouch_report_offset = status;

	return STATUS_OK;
}
  400214:	b007      	add	sp, #28
  400216:	bdf0      	pop	{r4, r5, r6, r7, pc}
			malloc(device->info_object->obj_count *
  400218:	6825      	ldr	r5, [r4, #0]
  40021a:	79a8      	ldrb	r0, [r5, #6]
  40021c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
  400220:	0040      	lsls	r0, r0, #1
  400222:	4b8f      	ldr	r3, [pc, #572]	; (400460 <mxt_init_device+0x28c>)
  400224:	4798      	blx	r3
	device->object_list = (struct mxt_object *)
  400226:	6060      	str	r0, [r4, #4]
	twihs_package_t packet = {
  400228:	2300      	movs	r3, #0
  40022a:	9301      	str	r3, [sp, #4]
  40022c:	9304      	str	r3, [sp, #16]
  40022e:	9305      	str	r3, [sp, #20]
  400230:	2307      	movs	r3, #7
  400232:	f88d 3004 	strb.w	r3, [sp, #4]
  400236:	2302      	movs	r3, #2
  400238:	9302      	str	r3, [sp, #8]
  40023a:	9003      	str	r0, [sp, #12]
		.length       = device->info_object->obj_count *
  40023c:	79ab      	ldrb	r3, [r5, #6]
  40023e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  400242:	005b      	lsls	r3, r3, #1
	twihs_package_t packet = {
  400244:	9304      	str	r3, [sp, #16]
  400246:	7b23      	ldrb	r3, [r4, #12]
  400248:	f88d 3014 	strb.w	r3, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  40024c:	a901      	add	r1, sp, #4
  40024e:	68a0      	ldr	r0, [r4, #8]
  400250:	4b84      	ldr	r3, [pc, #528]	; (400464 <mxt_init_device+0x290>)
  400252:	4798      	blx	r3
  400254:	3000      	adds	r0, #0
  400256:	bf18      	it	ne
  400258:	2001      	movne	r0, #1
  40025a:	4240      	negs	r0, r0
	if (status != STATUS_OK) {
  40025c:	2800      	cmp	r0, #0
  40025e:	d1d9      	bne.n	400214 <mxt_init_device+0x40>
	uint8_t *id_pointer = (uint8_t *)device->info_object;
  400260:	6827      	ldr	r7, [r4, #0]
	uint8_t *objects_pointer = (uint8_t *)device->object_list;
  400262:	6860      	ldr	r0, [r4, #4]
			(device->info_object->obj_count *
  400264:	79bb      	ldrb	r3, [r7, #6]
  400266:	eb03 0643 	add.w	r6, r3, r3, lsl #1
  40026a:	0076      	lsls	r6, r6, #1
	crc_area_size = MXT_ID_BLOCK_SIZE +
  40026c:	3607      	adds	r6, #7
  40026e:	b2b6      	uxth	r6, r6
  400270:	463a      	mov	r2, r7
  400272:	3706      	adds	r7, #6
	uint32_t crc_tmp = 0;
  400274:	2100      	movs	r1, #0
		result ^= crcpoly;
  400276:	f8df c1f0 	ldr.w	ip, [pc, #496]	; 400468 <mxt_init_device+0x294>
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  40027a:	f892 e001 	ldrb.w	lr, [r2, #1]
  40027e:	7815      	ldrb	r5, [r2, #0]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  400280:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
  400284:	ea85 0141 	eor.w	r1, r5, r1, lsl #1
	if (result & 0x1000000) {
  400288:	f011 7f80 	tst.w	r1, #16777216	; 0x1000000
		result ^= crcpoly;
  40028c:	bf18      	it	ne
  40028e:	ea81 010c 	eorne.w	r1, r1, ip
  400292:	3202      	adds	r2, #2
	for (i = 0; i < MXT_ID_BLOCK_SIZE - 1; i += 2) {
  400294:	42ba      	cmp	r2, r7
  400296:	d1f0      	bne.n	40027a <mxt_init_device+0xa6>
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  400298:	7802      	ldrb	r2, [r0, #0]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  40029a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  40029e:	ea83 0241 	eor.w	r2, r3, r1, lsl #1
	if (result & 0x1000000) {
  4002a2:	f012 7f80 	tst.w	r2, #16777216	; 0x1000000
  4002a6:	d003      	beq.n	4002b0 <mxt_init_device+0xdc>
		result ^= crcpoly;
  4002a8:	f482 0200 	eor.w	r2, r2, #8388608	; 0x800000
  4002ac:	f082 021b 	eor.w	r2, r2, #27
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  4002b0:	f1a6 0708 	sub.w	r7, r6, #8
  4002b4:	2f01      	cmp	r7, #1
  4002b6:	dd12      	ble.n	4002de <mxt_init_device+0x10a>
  4002b8:	2301      	movs	r3, #1
		result ^= crcpoly;
  4002ba:	f8df e1ac 	ldr.w	lr, [pc, #428]	; 400468 <mxt_init_device+0x294>
		crc_tmp = mxt_crc_24(crc_tmp, objects_pointer[i],
  4002be:	18c1      	adds	r1, r0, r3
	data_word = (uint16_t)((uint16_t)(byte2 << 8u) | byte1);
  4002c0:	784d      	ldrb	r5, [r1, #1]
  4002c2:	5cc1      	ldrb	r1, [r0, r3]
	result = ((crc << 1u) ^ (uint32_t)data_word);
  4002c4:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
  4002c8:	ea81 0242 	eor.w	r2, r1, r2, lsl #1
	if (result & 0x1000000) {
  4002cc:	f012 7f80 	tst.w	r2, #16777216	; 0x1000000
		result ^= crcpoly;
  4002d0:	bf18      	it	ne
  4002d2:	ea82 020e 	eorne.w	r2, r2, lr
	for (i = 1; i < (crc_area_size - MXT_ID_BLOCK_SIZE - 1); i += 2) {
  4002d6:	3302      	adds	r3, #2
  4002d8:	b29b      	uxth	r3, r3
  4002da:	42bb      	cmp	r3, r7
  4002dc:	dbef      	blt.n	4002be <mxt_init_device+0xea>
	crc_tmp = mxt_crc_24(crc_tmp,
  4002de:	4430      	add	r0, r6
	result = ((crc << 1u) ^ (uint32_t)data_word);
  4002e0:	f810 3c08 	ldrb.w	r3, [r0, #-8]
  4002e4:	ea83 0242 	eor.w	r2, r3, r2, lsl #1
	if (result & 0x1000000) {
  4002e8:	f012 7f80 	tst.w	r2, #16777216	; 0x1000000
  4002ec:	d003      	beq.n	4002f6 <mxt_init_device+0x122>
		result ^= crcpoly;
  4002ee:	f482 0200 	eor.w	r2, r2, #8388608	; 0x800000
  4002f2:	f082 021b 	eor.w	r2, r2, #27
	*crc = (crc_tmp & 0x00FFFFFF);
  4002f6:	f022 457f 	bic.w	r5, r2, #4278190080	; 0xff000000
	twihs_package_t packet = {
  4002fa:	2300      	movs	r3, #0
  4002fc:	9301      	str	r3, [sp, #4]
  4002fe:	9305      	str	r3, [sp, #20]
  400300:	f88d 6004 	strb.w	r6, [sp, #4]
  400304:	0a36      	lsrs	r6, r6, #8
  400306:	f88d 6005 	strb.w	r6, [sp, #5]
  40030a:	2302      	movs	r3, #2
  40030c:	9302      	str	r3, [sp, #8]
  40030e:	f8cd d00c 	str.w	sp, [sp, #12]
  400312:	2303      	movs	r3, #3
  400314:	9304      	str	r3, [sp, #16]
  400316:	7b23      	ldrb	r3, [r4, #12]
  400318:	f88d 3014 	strb.w	r3, [sp, #20]
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  40031c:	a901      	add	r1, sp, #4
  40031e:	68a0      	ldr	r0, [r4, #8]
  400320:	4b50      	ldr	r3, [pc, #320]	; (400464 <mxt_init_device+0x290>)
  400322:	4798      	blx	r3
  400324:	b328      	cbz	r0, 400372 <mxt_init_device+0x19e>
		return ERR_IO_ERROR;
  400326:	f04f 33ff 	mov.w	r3, #4294967295
	if (crc_calculated != crc_read) {
  40032a:	42ab      	cmp	r3, r5
  40032c:	f040 808b 	bne.w	400446 <mxt_init_device+0x272>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  400330:	6825      	ldr	r5, [r4, #0]
  400332:	79a8      	ldrb	r0, [r5, #6]
  400334:	b198      	cbz	r0, 40035e <mxt_init_device+0x18a>
  400336:	2300      	movs	r3, #0
  400338:	3301      	adds	r3, #1
  40033a:	b2da      	uxtb	r2, r3
  40033c:	4290      	cmp	r0, r2
  40033e:	d8fb      	bhi.n	400338 <mxt_init_device+0x164>
		tot_report_ids += (device->object_list[i].num_report_ids);
  400340:	6862      	ldr	r2, [r4, #4]
  400342:	1e43      	subs	r3, r0, #1
  400344:	b2db      	uxtb	r3, r3
  400346:	3301      	adds	r3, #1
  400348:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  40034c:	eb02 0143 	add.w	r1, r2, r3, lsl #1
  400350:	2000      	movs	r0, #0
  400352:	7953      	ldrb	r3, [r2, #5]
  400354:	4418      	add	r0, r3
  400356:	b2c0      	uxtb	r0, r0
  400358:	3206      	adds	r2, #6
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40035a:	4291      	cmp	r1, r2
  40035c:	d1f9      	bne.n	400352 <mxt_init_device+0x17e>
			malloc(sizeof(struct mxt_report_id_map) *
  40035e:	0040      	lsls	r0, r0, #1
  400360:	4b3f      	ldr	r3, [pc, #252]	; (400460 <mxt_init_device+0x28c>)
  400362:	4798      	blx	r3
	device->report_id_map = (struct mxt_report_id_map *)
  400364:	6160      	str	r0, [r4, #20]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  400366:	79ab      	ldrb	r3, [r5, #6]
  400368:	b173      	cbz	r3, 400388 <mxt_init_device+0x1b4>
  40036a:	2700      	movs	r7, #0
  40036c:	2601      	movs	r6, #1
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  40036e:	46be      	mov	lr, r7
  400370:	e037      	b.n	4003e2 <mxt_init_device+0x20e>
		return ((uint32_t)crc[2] << 16) | ((uint16_t)crc[1] << 8) | crc[0];
  400372:	f89d 2002 	ldrb.w	r2, [sp, #2]
  400376:	f89d 3000 	ldrb.w	r3, [sp]
  40037a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40037e:	f89d 2001 	ldrb.w	r2, [sp, #1]
  400382:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400386:	e7d0      	b.n	40032a <mxt_init_device+0x156>
		return ERR_BAD_DATA;
  400388:	f06f 0003 	mvn.w	r0, #3
  40038c:	e742      	b.n	400214 <mxt_init_device+0x40>
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  40038e:	3001      	adds	r0, #1
  400390:	b2c0      	uxtb	r0, r0
  400392:	6862      	ldr	r2, [r4, #4]
  400394:	1953      	adds	r3, r2, r5
  400396:	7919      	ldrb	r1, [r3, #4]
  400398:	4281      	cmp	r1, r0
  40039a:	d31c      	bcc.n	4003d6 <mxt_init_device+0x202>
			if (device->object_list[i].num_report_ids != 0) {
  40039c:	795b      	ldrb	r3, [r3, #5]
  40039e:	2b00      	cmp	r3, #0
  4003a0:	d0f5      	beq.n	40038e <mxt_init_device+0x1ba>
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  4003a2:	6862      	ldr	r2, [r4, #4]
  4003a4:	442a      	add	r2, r5
  4003a6:	7953      	ldrb	r3, [r2, #5]
  4003a8:	2b00      	cmp	r3, #0
  4003aa:	d0f0      	beq.n	40038e <mxt_init_device+0x1ba>
  4003ac:	4633      	mov	r3, r6
							device->object_list[i].type;
  4003ae:	7811      	ldrb	r1, [r2, #0]
					device->report_id_map[id_index].object_type =
  4003b0:	6962      	ldr	r2, [r4, #20]
  4003b2:	f802 1013 	strb.w	r1, [r2, r3, lsl #1]
					device->report_id_map[id_index].instance = j;
  4003b6:	6962      	ldr	r2, [r4, #20]
  4003b8:	eb02 0243 	add.w	r2, r2, r3, lsl #1
  4003bc:	7050      	strb	r0, [r2, #1]
					id_index++;
  4003be:	3301      	adds	r3, #1
  4003c0:	b2db      	uxtb	r3, r3
				for (k = 0; k < device->object_list[i].num_report_ids; ++k) {
  4003c2:	6862      	ldr	r2, [r4, #4]
  4003c4:	442a      	add	r2, r5
  4003c6:	1b99      	subs	r1, r3, r6
  4003c8:	f892 c005 	ldrb.w	ip, [r2, #5]
  4003cc:	b2c9      	uxtb	r1, r1
  4003ce:	458c      	cmp	ip, r1
  4003d0:	d8ed      	bhi.n	4003ae <mxt_init_device+0x1da>
					id_index++;
  4003d2:	461e      	mov	r6, r3
  4003d4:	e7db      	b.n	40038e <mxt_init_device+0x1ba>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4003d6:	3701      	adds	r7, #1
  4003d8:	b2ff      	uxtb	r7, r7
  4003da:	6823      	ldr	r3, [r4, #0]
  4003dc:	799b      	ldrb	r3, [r3, #6]
  4003de:	429f      	cmp	r7, r3
  4003e0:	d207      	bcs.n	4003f2 <mxt_init_device+0x21e>
		for (j = 0; j <= device->object_list[i].instances; ++j) {
  4003e2:	eb07 0347 	add.w	r3, r7, r7, lsl #1
  4003e6:	005a      	lsls	r2, r3, #1
  4003e8:	4615      	mov	r5, r2
  4003ea:	6863      	ldr	r3, [r4, #4]
  4003ec:	4413      	add	r3, r2
  4003ee:	4670      	mov	r0, lr
  4003f0:	e7d4      	b.n	40039c <mxt_init_device+0x1c8>
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4003f2:	b35b      	cbz	r3, 40044c <mxt_init_device+0x278>
  4003f4:	4610      	mov	r0, r2
  4003f6:	3b01      	subs	r3, #1
  4003f8:	b2db      	uxtb	r3, r3
  4003fa:	3301      	adds	r3, #1
  4003fc:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  400400:	eb02 0243 	add.w	r2, r2, r3, lsl #1
  400404:	2100      	movs	r1, #0
		tot_report_ids += (device->object_list[i].num_report_ids);
  400406:	7943      	ldrb	r3, [r0, #5]
  400408:	4419      	add	r1, r3
  40040a:	b2c9      	uxtb	r1, r1
  40040c:	3006      	adds	r0, #6
	for (i = 0; i < device->info_object->obj_count; ++i) {
  40040e:	4282      	cmp	r2, r0
  400410:	d1f9      	bne.n	400406 <mxt_init_device+0x232>
	for (i = 0; i < tot_rpt_id; ++i) {
  400412:	b1f1      	cbz	r1, 400452 <mxt_init_device+0x27e>
		if (device->report_id_map[i].object_type == object_type) {
  400414:	6962      	ldr	r2, [r4, #20]
  400416:	7813      	ldrb	r3, [r2, #0]
  400418:	2b09      	cmp	r3, #9
  40041a:	d00f      	beq.n	40043c <mxt_init_device+0x268>
  40041c:	2300      	movs	r3, #0
	for (i = 0; i < tot_rpt_id; ++i) {
  40041e:	3301      	adds	r3, #1
  400420:	b2db      	uxtb	r3, r3
  400422:	428b      	cmp	r3, r1
  400424:	d00c      	beq.n	400440 <mxt_init_device+0x26c>
		if (device->report_id_map[i].object_type == object_type) {
  400426:	f812 0f02 	ldrb.w	r0, [r2, #2]!
  40042a:	2809      	cmp	r0, #9
  40042c:	d1f7      	bne.n	40041e <mxt_init_device+0x24a>
			return i;
  40042e:	b25b      	sxtb	r3, r3
	if (status == -1) {
  400430:	f1b3 3fff 	cmp.w	r3, #4294967295
  400434:	d010      	beq.n	400458 <mxt_init_device+0x284>
	device->multitouch_report_offset = status;
  400436:	7723      	strb	r3, [r4, #28]
	return STATUS_OK;
  400438:	2000      	movs	r0, #0
  40043a:	e6eb      	b.n	400214 <mxt_init_device+0x40>
		if (device->report_id_map[i].object_type == object_type) {
  40043c:	2300      	movs	r3, #0
  40043e:	e7f6      	b.n	40042e <mxt_init_device+0x25a>
		return ERR_BAD_DATA;
  400440:	f06f 0003 	mvn.w	r0, #3
  400444:	e6e6      	b.n	400214 <mxt_init_device+0x40>
		return ERR_BAD_DATA;
  400446:	f06f 0003 	mvn.w	r0, #3
  40044a:	e6e3      	b.n	400214 <mxt_init_device+0x40>
		return ERR_BAD_DATA;
  40044c:	f06f 0003 	mvn.w	r0, #3
  400450:	e6e0      	b.n	400214 <mxt_init_device+0x40>
  400452:	f06f 0003 	mvn.w	r0, #3
  400456:	e6dd      	b.n	400214 <mxt_init_device+0x40>
  400458:	f06f 0003 	mvn.w	r0, #3
  40045c:	e6da      	b.n	400214 <mxt_init_device+0x40>
  40045e:	bf00      	nop
  400460:	00402699 	.word	0x00402699
  400464:	00401a51 	.word	0x00401a51
  400468:	0080001b 	.word	0x0080001b

0040046c <mxt_get_object_address>:
uint16_t mxt_get_object_address(struct mxt_device *device, uint8_t object_id,
		uint8_t instance)
{
	uint8_t i;

	for (i = 0; i < device->info_object->obj_count; i++) {
  40046c:	6803      	ldr	r3, [r0, #0]
  40046e:	799a      	ldrb	r2, [r3, #6]
  400470:	b1d2      	cbz	r2, 4004a8 <mxt_get_object_address+0x3c>
{
  400472:	b410      	push	{r4}
		if (object_id == device->object_list[i].type) {
  400474:	6844      	ldr	r4, [r0, #4]
  400476:	7823      	ldrb	r3, [r4, #0]
  400478:	428b      	cmp	r3, r1
  40047a:	d00e      	beq.n	40049a <mxt_get_object_address+0x2e>
  40047c:	1da3      	adds	r3, r4, #6
  40047e:	3a01      	subs	r2, #1
  400480:	b2d2      	uxtb	r2, r2
  400482:	3201      	adds	r2, #1
  400484:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  400488:	eb04 0242 	add.w	r2, r4, r2, lsl #1
	for (i = 0; i < device->info_object->obj_count; i++) {
  40048c:	4293      	cmp	r3, r2
  40048e:	d009      	beq.n	4004a4 <mxt_get_object_address+0x38>
		if (object_id == device->object_list[i].type) {
  400490:	461c      	mov	r4, r3
  400492:	f813 0b06 	ldrb.w	r0, [r3], #6
  400496:	4288      	cmp	r0, r1
  400498:	d1f8      	bne.n	40048c <mxt_get_object_address+0x20>
			return device->object_list[i].start_address;
  40049a:	f8b4 0001 	ldrh.w	r0, [r4, #1]
		}
	}

	return 0;
}
  40049e:	f85d 4b04 	ldr.w	r4, [sp], #4
  4004a2:	4770      	bx	lr
	return 0;
  4004a4:	2000      	movs	r0, #0
  4004a6:	e7fa      	b.n	40049e <mxt_get_object_address+0x32>
  4004a8:	2000      	movs	r0, #0
  4004aa:	4770      	bx	lr

004004ac <mxt_write_config_object>:
 * \param *obj_data Pointer to memory buffer containing object data
 * \result Operation result status code
 */
status_code_t mxt_write_config_object(struct mxt_device *device,
		mxt_memory_adr memory_adr, void *obj_data)
{
  4004ac:	b530      	push	{r4, r5, lr}
  4004ae:	b087      	sub	sp, #28
	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  4004b0:	2300      	movs	r3, #0
  4004b2:	9301      	str	r3, [sp, #4]
  4004b4:	9304      	str	r3, [sp, #16]
  4004b6:	9305      	str	r3, [sp, #20]
  4004b8:	f88d 1004 	strb.w	r1, [sp, #4]
  4004bc:	0a0b      	lsrs	r3, r1, #8
  4004be:	f88d 3005 	strb.w	r3, [sp, #5]
  4004c2:	2302      	movs	r3, #2
  4004c4:	9302      	str	r3, [sp, #8]
  4004c6:	9203      	str	r2, [sp, #12]
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4004c8:	6803      	ldr	r3, [r0, #0]
  4004ca:	799a      	ldrb	r2, [r3, #6]
  4004cc:	b1ba      	cbz	r2, 4004fe <mxt_write_config_object+0x52>
		if (device->object_list[i].start_address == mem_adr) {
  4004ce:	6844      	ldr	r4, [r0, #4]
  4004d0:	f8b4 3001 	ldrh.w	r3, [r4, #1]
  4004d4:	428b      	cmp	r3, r1
  4004d6:	d00f      	beq.n	4004f8 <mxt_write_config_object+0x4c>
  4004d8:	1da3      	adds	r3, r4, #6
  4004da:	3a01      	subs	r2, #1
  4004dc:	b2d2      	uxtb	r2, r2
  4004de:	3201      	adds	r2, #1
  4004e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  4004e4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
	for (i = 0; i < device->info_object->obj_count; ++i) {
  4004e8:	4293      	cmp	r3, r2
  4004ea:	d016      	beq.n	40051a <mxt_write_config_object+0x6e>
		if (device->object_list[i].start_address == mem_adr) {
  4004ec:	461c      	mov	r4, r3
  4004ee:	3306      	adds	r3, #6
  4004f0:	f8b4 5001 	ldrh.w	r5, [r4, #1]
  4004f4:	428d      	cmp	r5, r1
  4004f6:	d1f7      	bne.n	4004e8 <mxt_write_config_object+0x3c>
			return (device->object_list[i].size + 1);
  4004f8:	78e2      	ldrb	r2, [r4, #3]
  4004fa:	3201      	adds	r2, #1
  4004fc:	b2d2      	uxtb	r2, r2
		.addr[0]      = memory_adr,
		.addr[1]      = memory_adr >> 8,
		.addr_length  = sizeof(mxt_memory_adr),
		.chip         = device->mxt_chip_adr,
		.buffer       = obj_data,
		.length       = mxt_get_object_size(device, memory_adr)
  4004fe:	9204      	str	r2, [sp, #16]
	twihs_package_t packet = {
  400500:	7b03      	ldrb	r3, [r0, #12]
  400502:	f88d 3014 	strb.w	r3, [sp, #20]
	};

	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  400506:	a901      	add	r1, sp, #4
  400508:	6880      	ldr	r0, [r0, #8]
  40050a:	4b05      	ldr	r3, [pc, #20]	; (400520 <mxt_write_config_object+0x74>)
  40050c:	4798      	blx	r3
  40050e:	3000      	adds	r0, #0
  400510:	bf18      	it	ne
  400512:	2001      	movne	r0, #1
		return ERR_IO_ERROR;
	} else {
		return STATUS_OK;
	}

}
  400514:	4240      	negs	r0, r0
  400516:	b007      	add	sp, #28
  400518:	bd30      	pop	{r4, r5, pc}
	return 0;
  40051a:	2200      	movs	r2, #0
  40051c:	e7ef      	b.n	4004fe <mxt_write_config_object+0x52>
  40051e:	bf00      	nop
  400520:	00401afd 	.word	0x00401afd

00400524 <mxt_write_config_reg>:
 * \param value Value to be written to register
 * \result Operation result status code
 */
status_code_t mxt_write_config_reg(struct mxt_device *device,
		mxt_memory_adr memory_adr, uint8_t value)
{
  400524:	b500      	push	{lr}
  400526:	b089      	sub	sp, #36	; 0x24
  400528:	f88d 2007 	strb.w	r2, [sp, #7]
	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  40052c:	2300      	movs	r3, #0
  40052e:	9303      	str	r3, [sp, #12]
  400530:	9307      	str	r3, [sp, #28]
  400532:	f88d 100c 	strb.w	r1, [sp, #12]
  400536:	0a09      	lsrs	r1, r1, #8
  400538:	f88d 100d 	strb.w	r1, [sp, #13]
  40053c:	2302      	movs	r3, #2
  40053e:	9304      	str	r3, [sp, #16]
  400540:	f10d 0307 	add.w	r3, sp, #7
  400544:	9305      	str	r3, [sp, #20]
  400546:	2301      	movs	r3, #1
  400548:	9306      	str	r3, [sp, #24]
  40054a:	7b03      	ldrb	r3, [r0, #12]
  40054c:	f88d 301c 	strb.w	r3, [sp, #28]
		.chip         = device->mxt_chip_adr,
		.buffer       = &value,
		.length       = sizeof(value)
	};

	if (twihs_master_write(device->interface, &packet) != STATUS_OK) {
  400550:	a903      	add	r1, sp, #12
  400552:	6880      	ldr	r0, [r0, #8]
  400554:	4b04      	ldr	r3, [pc, #16]	; (400568 <mxt_write_config_reg+0x44>)
  400556:	4798      	blx	r3
  400558:	3000      	adds	r0, #0
  40055a:	bf18      	it	ne
  40055c:	2001      	movne	r0, #1
		return ERR_IO_ERROR;
	} else {
		return STATUS_OK;
	}
}
  40055e:	4240      	negs	r0, r0
  400560:	b009      	add	sp, #36	; 0x24
  400562:	f85d fb04 	ldr.w	pc, [sp], #4
  400566:	bf00      	nop
  400568:	00401afd 	.word	0x00401afd

0040056c <mxt_is_message_pending>:
 * \param *device Pointer to mxt_device instance
 * \return Return /CHG pin status
 */
bool mxt_is_message_pending(struct mxt_device *device)
{
	if (ioport_get_pin_level(device->chgpin) == false) {
  40056c:	6982      	ldr	r2, [r0, #24]
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  40056e:	4b07      	ldr	r3, [pc, #28]	; (40058c <mxt_is_message_pending+0x20>)
  400570:	eb03 1352 	add.w	r3, r3, r2, lsr #5
  400574:	025b      	lsls	r3, r3, #9
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  400576:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
	return 1U << (pin & 0x1F);
  400578:	f002 021f 	and.w	r2, r2, #31
  40057c:	2301      	movs	r3, #1
  40057e:	fa03 f202 	lsl.w	r2, r3, r2
  400582:	420a      	tst	r2, r1
		return true;
	} else {
		return false;
	}
}
  400584:	bf0c      	ite	eq
  400586:	4618      	moveq	r0, r3
  400588:	2000      	movne	r0, #0
  40058a:	4770      	bx	lr
  40058c:	00200707 	.word	0x00200707

00400590 <mxt_read_message>:
 * \param *message Pointer to mxt_message instance
 * \return Operation result status code
 */
status_code_t mxt_read_message(struct mxt_device *device,
		struct mxt_conf_messageprocessor_t5 *message)
{
  400590:	b530      	push	{r4, r5, lr}
  400592:	b087      	sub	sp, #28
  400594:	4604      	mov	r4, r0
  400596:	460d      	mov	r5, r1
	uint16_t obj_adr = mxt_get_object_address(device,
  400598:	2200      	movs	r2, #0
  40059a:	2105      	movs	r1, #5
  40059c:	4b0d      	ldr	r3, [pc, #52]	; (4005d4 <mxt_read_message+0x44>)
  40059e:	4798      	blx	r3
			MXT_GEN_MESSAGEPROCESSOR_T5, 0);

	/* Initializing the TWI packet to send to the slave */
	twihs_package_t packet = {
  4005a0:	2300      	movs	r3, #0
  4005a2:	9301      	str	r3, [sp, #4]
  4005a4:	9305      	str	r3, [sp, #20]
  4005a6:	f88d 0004 	strb.w	r0, [sp, #4]
  4005aa:	0a00      	lsrs	r0, r0, #8
  4005ac:	f88d 0005 	strb.w	r0, [sp, #5]
  4005b0:	2302      	movs	r3, #2
  4005b2:	9302      	str	r3, [sp, #8]
  4005b4:	9503      	str	r5, [sp, #12]
  4005b6:	2309      	movs	r3, #9
  4005b8:	9304      	str	r3, [sp, #16]
  4005ba:	7b23      	ldrb	r3, [r4, #12]
  4005bc:	f88d 3014 	strb.w	r3, [sp, #20]
		.buffer       = message,
		.length       = MXT_TWI_MSG_SIZE_T5
	};

	/* Read information from the slave */
	if (twihs_master_read(device->interface, &packet) != STATUS_OK) {
  4005c0:	a901      	add	r1, sp, #4
  4005c2:	68a0      	ldr	r0, [r4, #8]
  4005c4:	4b04      	ldr	r3, [pc, #16]	; (4005d8 <mxt_read_message+0x48>)
  4005c6:	4798      	blx	r3
  4005c8:	3000      	adds	r0, #0
  4005ca:	bf18      	it	ne
  4005cc:	2001      	movne	r0, #1
		return mxt_validate_message(&packet);
#else
		return STATUS_OK;
#endif
	}
}
  4005ce:	4240      	negs	r0, r0
  4005d0:	b007      	add	sp, #28
  4005d2:	bd30      	pop	{r4, r5, pc}
  4005d4:	0040046d 	.word	0x0040046d
  4005d8:	00401a51 	.word	0x00401a51

004005dc <mxt_read_touch_event>:
 * \param *touch_event Pointer to mxt_touch_event instance
 * \return Operation result status code
 */
status_code_t mxt_read_touch_event(struct mxt_device *device,
		struct mxt_touch_event *touch_event)
{
  4005dc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4005de:	b085      	sub	sp, #20
  4005e0:	4604      	mov	r4, r0
  4005e2:	460e      	mov	r6, r1
	uint8_t obj_type, status;
	struct mxt_conf_messageprocessor_t5 message;

	while (mxt_is_message_pending(device)) {
  4005e4:	4d17      	ldr	r5, [pc, #92]	; (400644 <mxt_read_touch_event+0x68>)
		if((status = mxt_read_message(device, &message)) != STATUS_OK) {
  4005e6:	4f18      	ldr	r7, [pc, #96]	; (400648 <mxt_read_touch_event+0x6c>)
	while (mxt_is_message_pending(device)) {
  4005e8:	4620      	mov	r0, r4
  4005ea:	47a8      	blx	r5
  4005ec:	b328      	cbz	r0, 40063a <mxt_read_touch_event+0x5e>
		if((status = mxt_read_message(device, &message)) != STATUS_OK) {
  4005ee:	a901      	add	r1, sp, #4
  4005f0:	4620      	mov	r0, r4
  4005f2:	47b8      	blx	r7
  4005f4:	4603      	mov	r3, r0
  4005f6:	bb10      	cbnz	r0, 40063e <mxt_read_touch_event+0x62>
 * \return Operation
 */
enum mxt_object_type mxt_get_object_type(struct mxt_device *device,
		struct mxt_conf_messageprocessor_t5 *message)
{
	return (enum mxt_object_type)(device->report_id_map[message->reportid].object_type);
  4005f8:	f89d 3004 	ldrb.w	r3, [sp, #4]
  4005fc:	6962      	ldr	r2, [r4, #20]
		if (obj_type == MXT_TOUCH_MULTITOUCHSCREEN_T9) {
  4005fe:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
  400602:	2a09      	cmp	r2, #9
  400604:	d1f0      	bne.n	4005e8 <mxt_read_touch_event+0xc>
			touch_event->id = (message.reportid -
  400606:	7f22      	ldrb	r2, [r4, #28]
  400608:	1a9b      	subs	r3, r3, r2
  40060a:	7033      	strb	r3, [r6, #0]
			touch_event->status = message.message[0];
  40060c:	f89d 3005 	ldrb.w	r3, [sp, #5]
  400610:	7073      	strb	r3, [r6, #1]
					((message.message[3] & 0xf0) >> 4);
  400612:	f89d 3008 	ldrb.w	r3, [sp, #8]
			touch_event->x = (message.message[1] << 4) |
  400616:	f89d 1006 	ldrb.w	r1, [sp, #6]
					((message.message[3] & 0xf0) >> 4);
  40061a:	091a      	lsrs	r2, r3, #4
			touch_event->x = (message.message[1] << 4) |
  40061c:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
  400620:	8072      	strh	r2, [r6, #2]
			touch_event->y = (message.message[2] << 4) |
  400622:	f89d 2007 	ldrb.w	r2, [sp, #7]
					(message.message[3] & 0x0f);
  400626:	f003 030f 	and.w	r3, r3, #15
			touch_event->y = (message.message[2] << 4) |
  40062a:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
  40062e:	80b3      	strh	r3, [r6, #4]
			touch_event->size = message.message[4];
  400630:	f89d 3009 	ldrb.w	r3, [sp, #9]
  400634:	71b3      	strb	r3, [r6, #6]
			return STATUS_OK;
  400636:	2300      	movs	r3, #0
  400638:	e001      	b.n	40063e <mxt_read_touch_event+0x62>
	return ERR_BAD_DATA;
  40063a:	f06f 0303 	mvn.w	r3, #3
}
  40063e:	4618      	mov	r0, r3
  400640:	b005      	add	sp, #20
  400642:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400644:	0040056d 	.word	0x0040056d
  400648:	00400591 	.word	0x00400591

0040064c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  40064c:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40064e:	4810      	ldr	r0, [pc, #64]	; (400690 <sysclk_init+0x44>)
  400650:	4b10      	ldr	r3, [pc, #64]	; (400694 <sysclk_init+0x48>)
  400652:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400654:	213e      	movs	r1, #62	; 0x3e
  400656:	2000      	movs	r0, #0
  400658:	4b0f      	ldr	r3, [pc, #60]	; (400698 <sysclk_init+0x4c>)
  40065a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  40065c:	4c0f      	ldr	r4, [pc, #60]	; (40069c <sysclk_init+0x50>)
  40065e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400660:	2800      	cmp	r0, #0
  400662:	d0fc      	beq.n	40065e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400664:	4b0e      	ldr	r3, [pc, #56]	; (4006a0 <sysclk_init+0x54>)
  400666:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400668:	4a0e      	ldr	r2, [pc, #56]	; (4006a4 <sysclk_init+0x58>)
  40066a:	4b0f      	ldr	r3, [pc, #60]	; (4006a8 <sysclk_init+0x5c>)
  40066c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  40066e:	4c0f      	ldr	r4, [pc, #60]	; (4006ac <sysclk_init+0x60>)
  400670:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400672:	2800      	cmp	r0, #0
  400674:	d0fc      	beq.n	400670 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400676:	2002      	movs	r0, #2
  400678:	4b0d      	ldr	r3, [pc, #52]	; (4006b0 <sysclk_init+0x64>)
  40067a:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40067c:	2000      	movs	r0, #0
  40067e:	4b0d      	ldr	r3, [pc, #52]	; (4006b4 <sysclk_init+0x68>)
  400680:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400682:	4b0d      	ldr	r3, [pc, #52]	; (4006b8 <sysclk_init+0x6c>)
  400684:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400686:	480d      	ldr	r0, [pc, #52]	; (4006bc <sysclk_init+0x70>)
  400688:	4b02      	ldr	r3, [pc, #8]	; (400694 <sysclk_init+0x48>)
  40068a:	4798      	blx	r3
  40068c:	bd10      	pop	{r4, pc}
  40068e:	bf00      	nop
  400690:	07270e00 	.word	0x07270e00
  400694:	00401ea9 	.word	0x00401ea9
  400698:	0040174d 	.word	0x0040174d
  40069c:	004017a1 	.word	0x004017a1
  4006a0:	004017b1 	.word	0x004017b1
  4006a4:	20183f01 	.word	0x20183f01
  4006a8:	400e0600 	.word	0x400e0600
  4006ac:	004017c1 	.word	0x004017c1
  4006b0:	004016b1 	.word	0x004016b1
  4006b4:	004016e9 	.word	0x004016e9
  4006b8:	00401d9d 	.word	0x00401d9d
  4006bc:	11e1a300 	.word	0x11e1a300

004006c0 <usart_serial_write_packet>:
 *
 */
status_code_t usart_serial_write_packet(usart_if usart, const uint8_t *data,
		size_t len)
{
	while (len) {
  4006c0:	2a00      	cmp	r2, #0
  4006c2:	d054      	beq.n	40076e <usart_serial_write_packet+0xae>
{
  4006c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4006c8:	4692      	mov	sl, r2
  4006ca:	4606      	mov	r6, r0
  4006cc:	460f      	mov	r7, r1
  4006ce:	448a      	add	sl, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4006d0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 40078c <usart_serial_write_packet+0xcc>
		while (uart_write((Uart*)p_usart, c)!=0);
  4006d4:	4d27      	ldr	r5, [pc, #156]	; (400774 <usart_serial_write_packet+0xb4>)
		return 1;
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4006d6:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 400790 <usart_serial_write_packet+0xd0>
  4006da:	e006      	b.n	4006ea <usart_serial_write_packet+0x2a>
		while (uart_write((Uart*)p_usart, c)!=0);
  4006dc:	4621      	mov	r1, r4
  4006de:	4640      	mov	r0, r8
  4006e0:	47a8      	blx	r5
  4006e2:	2800      	cmp	r0, #0
  4006e4:	d1fa      	bne.n	4006dc <usart_serial_write_packet+0x1c>
	while (len) {
  4006e6:	45ba      	cmp	sl, r7
  4006e8:	d03e      	beq.n	400768 <usart_serial_write_packet+0xa8>
		usart_serial_putchar(usart, *data);
  4006ea:	f817 4b01 	ldrb.w	r4, [r7], #1
	if (UART0 == (Uart*)p_usart) {
  4006ee:	4546      	cmp	r6, r8
  4006f0:	d0f4      	beq.n	4006dc <usart_serial_write_packet+0x1c>
	if (UART1 == (Uart*)p_usart) {
  4006f2:	454e      	cmp	r6, r9
  4006f4:	d016      	beq.n	400724 <usart_serial_write_packet+0x64>
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  4006f6:	4b20      	ldr	r3, [pc, #128]	; (400778 <usart_serial_write_packet+0xb8>)
  4006f8:	429e      	cmp	r6, r3
  4006fa:	d019      	beq.n	400730 <usart_serial_write_packet+0x70>
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  4006fc:	4b1f      	ldr	r3, [pc, #124]	; (40077c <usart_serial_write_packet+0xbc>)
  4006fe:	429e      	cmp	r6, r3
  400700:	d01c      	beq.n	40073c <usart_serial_write_packet+0x7c>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400702:	4b1f      	ldr	r3, [pc, #124]	; (400780 <usart_serial_write_packet+0xc0>)
  400704:	429e      	cmp	r6, r3
  400706:	d01f      	beq.n	400748 <usart_serial_write_packet+0x88>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400708:	4b1e      	ldr	r3, [pc, #120]	; (400784 <usart_serial_write_packet+0xc4>)
  40070a:	429e      	cmp	r6, r3
  40070c:	d024      	beq.n	400758 <usart_serial_write_packet+0x98>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  40070e:	4b1e      	ldr	r3, [pc, #120]	; (400788 <usart_serial_write_packet+0xc8>)
  400710:	429e      	cmp	r6, r3
  400712:	d1e8      	bne.n	4006e6 <usart_serial_write_packet+0x26>
		while (usart_write(p_usart, c)!=0);
  400714:	f8df b07c 	ldr.w	fp, [pc, #124]	; 400794 <usart_serial_write_packet+0xd4>
  400718:	4621      	mov	r1, r4
  40071a:	481b      	ldr	r0, [pc, #108]	; (400788 <usart_serial_write_packet+0xc8>)
  40071c:	47d8      	blx	fp
  40071e:	2800      	cmp	r0, #0
  400720:	d1fa      	bne.n	400718 <usart_serial_write_packet+0x58>
  400722:	e7e0      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (uart_write((Uart*)p_usart, c)!=0);
  400724:	4621      	mov	r1, r4
  400726:	4648      	mov	r0, r9
  400728:	47a8      	blx	r5
  40072a:	2800      	cmp	r0, #0
  40072c:	d1fa      	bne.n	400724 <usart_serial_write_packet+0x64>
  40072e:	e7da      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (uart_write((Uart*)p_usart, c)!=0);
  400730:	4621      	mov	r1, r4
  400732:	4811      	ldr	r0, [pc, #68]	; (400778 <usart_serial_write_packet+0xb8>)
  400734:	47a8      	blx	r5
  400736:	2800      	cmp	r0, #0
  400738:	d1fa      	bne.n	400730 <usart_serial_write_packet+0x70>
  40073a:	e7d4      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (uart_write((Uart*)p_usart, c)!=0);
  40073c:	4621      	mov	r1, r4
  40073e:	480f      	ldr	r0, [pc, #60]	; (40077c <usart_serial_write_packet+0xbc>)
  400740:	47a8      	blx	r5
  400742:	2800      	cmp	r0, #0
  400744:	d1fa      	bne.n	40073c <usart_serial_write_packet+0x7c>
  400746:	e7ce      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (usart_write(p_usart, c)!=0);
  400748:	f8df b048 	ldr.w	fp, [pc, #72]	; 400794 <usart_serial_write_packet+0xd4>
  40074c:	4621      	mov	r1, r4
  40074e:	480c      	ldr	r0, [pc, #48]	; (400780 <usart_serial_write_packet+0xc0>)
  400750:	47d8      	blx	fp
  400752:	2800      	cmp	r0, #0
  400754:	d1fa      	bne.n	40074c <usart_serial_write_packet+0x8c>
  400756:	e7c6      	b.n	4006e6 <usart_serial_write_packet+0x26>
		while (usart_write(p_usart, c)!=0);
  400758:	f8df b038 	ldr.w	fp, [pc, #56]	; 400794 <usart_serial_write_packet+0xd4>
  40075c:	4621      	mov	r1, r4
  40075e:	4809      	ldr	r0, [pc, #36]	; (400784 <usart_serial_write_packet+0xc4>)
  400760:	47d8      	blx	fp
  400762:	2800      	cmp	r0, #0
  400764:	d1fa      	bne.n	40075c <usart_serial_write_packet+0x9c>
  400766:	e7be      	b.n	4006e6 <usart_serial_write_packet+0x26>
		len--;
		data++;
	}
	return STATUS_OK;
}
  400768:	2000      	movs	r0, #0
  40076a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40076e:	2000      	movs	r0, #0
  400770:	4770      	bx	lr
  400772:	bf00      	nop
  400774:	00401b9d 	.word	0x00401b9d
  400778:	400e1a00 	.word	0x400e1a00
  40077c:	400e1c00 	.word	0x400e1c00
  400780:	40024000 	.word	0x40024000
  400784:	40028000 	.word	0x40028000
  400788:	4002c000 	.word	0x4002c000
  40078c:	400e0800 	.word	0x400e0800
  400790:	400e0a00 	.word	0x400e0a00
  400794:	00401ca5 	.word	0x00401ca5

00400798 <spi_master_init>:
 *
 * \param p_spi  Base address of the SPI instance.
 *
 */
void spi_master_init(Spi *p_spi)
{
  400798:	b510      	push	{r4, lr}
  40079a:	4604      	mov	r4, r0
#if SAMG55
	flexcom_enable(BOARD_FLEXCOM_SPI);
	flexcom_set_opmode(BOARD_FLEXCOM_SPI, FLEXCOM_SPI);
#else
	spi_enable_clock(p_spi);
  40079c:	4b10      	ldr	r3, [pc, #64]	; (4007e0 <spi_master_init+0x48>)
  40079e:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  4007a0:	2380      	movs	r3, #128	; 0x80
  4007a2:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4007a4:	6863      	ldr	r3, [r4, #4]
  4007a6:	f043 0301 	orr.w	r3, r3, #1
  4007aa:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4007ac:	6863      	ldr	r3, [r4, #4]
  4007ae:	f043 0310 	orr.w	r3, r3, #16
  4007b2:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  4007b4:	6863      	ldr	r3, [r4, #4]
  4007b6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4007ba:	6063      	str	r3, [r4, #4]
#endif
	spi_reset(p_spi);
	spi_set_master_mode(p_spi);
	spi_disable_mode_fault_detect(p_spi);
	spi_disable_loopback(p_spi);
	spi_set_peripheral_chip_select_value(p_spi, DEFAULT_CHIP_ID);
  4007bc:	2100      	movs	r1, #0
  4007be:	4620      	mov	r0, r4
  4007c0:	4b08      	ldr	r3, [pc, #32]	; (4007e4 <spi_master_init+0x4c>)
  4007c2:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  4007c4:	6863      	ldr	r3, [r4, #4]
  4007c6:	f023 0302 	bic.w	r3, r3, #2
  4007ca:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR &= (~SPI_MR_PCSDEC);
  4007cc:	6863      	ldr	r3, [r4, #4]
  4007ce:	f023 0304 	bic.w	r3, r3, #4
  4007d2:	6063      	str	r3, [r4, #4]
	spi_set_fixed_peripheral_select(p_spi);
	spi_disable_peripheral_select_decode(p_spi);
	spi_set_delay_between_chip_select(p_spi, CONFIG_SPI_MASTER_DELAY_BCS);
  4007d4:	2100      	movs	r1, #0
  4007d6:	4620      	mov	r0, r4
  4007d8:	4b03      	ldr	r3, [pc, #12]	; (4007e8 <spi_master_init+0x50>)
  4007da:	4798      	blx	r3
  4007dc:	bd10      	pop	{r4, pc}
  4007de:	bf00      	nop
  4007e0:	004017f1 	.word	0x004017f1
  4007e4:	0040181d 	.word	0x0040181d
  4007e8:	00401833 	.word	0x00401833

004007ec <spi_master_setup_device>:
 * \param baud_rate Baud rate for communication with slave device in Hz.
 * \param sel_id    Board specific select id.
 */
void spi_master_setup_device(Spi *p_spi, struct spi_device *device,
		spi_flags_t flags, uint32_t baud_rate, board_spi_select_id_t sel_id)
{
  4007ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4007f0:	4604      	mov	r4, r0
  4007f2:	460d      	mov	r5, r1
  4007f4:	4616      	mov	r6, r2
#if (SAM4L)
    int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_pba_hz());
#else
	int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_peripheral_hz());
  4007f6:	4915      	ldr	r1, [pc, #84]	; (40084c <spi_master_setup_device+0x60>)
  4007f8:	4618      	mov	r0, r3
  4007fa:	4b15      	ldr	r3, [pc, #84]	; (400850 <spi_master_setup_device+0x64>)
  4007fc:	4798      	blx	r3
  4007fe:	4607      	mov	r7, r0
	/* avoid Cppcheck Warning */
	UNUSED(sel_id);
	if (-1 == baud_div) {
		Assert(0 == "Failed to find baudrate divider");
	}
	spi_set_transfer_delay(p_spi, device->id, CONFIG_SPI_MASTER_DELAY_BS,
  400800:	2300      	movs	r3, #0
  400802:	461a      	mov	r2, r3
  400804:	6829      	ldr	r1, [r5, #0]
  400806:	4620      	mov	r0, r4
  400808:	f8df 805c 	ldr.w	r8, [pc, #92]	; 400868 <spi_master_setup_device+0x7c>
  40080c:	47c0      	blx	r8
			CONFIG_SPI_MASTER_DELAY_BCT);
	spi_set_bits_per_transfer(p_spi, device->id,
  40080e:	2208      	movs	r2, #8
  400810:	6829      	ldr	r1, [r5, #0]
  400812:	4620      	mov	r0, r4
  400814:	4b0f      	ldr	r3, [pc, #60]	; (400854 <spi_master_setup_device+0x68>)
  400816:	4798      	blx	r3
			CONFIG_SPI_MASTER_BITS_PER_TRANSFER);
	spi_set_baudrate_div(p_spi, device->id, baud_div);
  400818:	b2fa      	uxtb	r2, r7
  40081a:	6829      	ldr	r1, [r5, #0]
  40081c:	4620      	mov	r0, r4
  40081e:	4b0e      	ldr	r3, [pc, #56]	; (400858 <spi_master_setup_device+0x6c>)
  400820:	4798      	blx	r3
	spi_configure_cs_behavior(p_spi, device->id, SPI_CS_KEEP_LOW);
  400822:	2208      	movs	r2, #8
  400824:	6829      	ldr	r1, [r5, #0]
  400826:	4620      	mov	r0, r4
  400828:	4b0c      	ldr	r3, [pc, #48]	; (40085c <spi_master_setup_device+0x70>)
  40082a:	4798      	blx	r3
	spi_set_clock_polarity(p_spi, device->id, flags >> 1);
  40082c:	0872      	lsrs	r2, r6, #1
  40082e:	6829      	ldr	r1, [r5, #0]
  400830:	4620      	mov	r0, r4
  400832:	4b0b      	ldr	r3, [pc, #44]	; (400860 <spi_master_setup_device+0x74>)
  400834:	4798      	blx	r3
	spi_set_clock_phase(p_spi, device->id, ((flags & 0x1) ^ 0x1));
  400836:	f086 0201 	eor.w	r2, r6, #1
  40083a:	f002 0201 	and.w	r2, r2, #1
  40083e:	6829      	ldr	r1, [r5, #0]
  400840:	4620      	mov	r0, r4
  400842:	4b08      	ldr	r3, [pc, #32]	; (400864 <spi_master_setup_device+0x78>)
  400844:	4798      	blx	r3
  400846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40084a:	bf00      	nop
  40084c:	08f0d180 	.word	0x08f0d180
  400850:	0040190f 	.word	0x0040190f
  400854:	004018fb 	.word	0x004018fb
  400858:	00401925 	.word	0x00401925
  40085c:	004018b5 	.word	0x004018b5
  400860:	00401879 	.word	0x00401879
  400864:	00401897 	.word	0x00401897
  400868:	0040194d 	.word	0x0040194d

0040086c <spi_select_device>:
 * \param p_spi   Base address of the SPI instance.
 * \param device  SPI device.
 *
 */
void spi_select_device(Spi *p_spi, struct spi_device *device)
{
  40086c:	b508      	push	{r3, lr}
	if (p_spi->SPI_MR & SPI_MR_PCSDEC) {
  40086e:	6843      	ldr	r3, [r0, #4]
	if (spi_get_peripheral_select_decode_setting(p_spi)) {
  400870:	f013 0f04 	tst.w	r3, #4
  400874:	d006      	beq.n	400884 <spi_select_device+0x18>
		if (device->id < MAX_NUM_WITH_DECODER) {
  400876:	6809      	ldr	r1, [r1, #0]
  400878:	290f      	cmp	r1, #15
  40087a:	d900      	bls.n	40087e <spi_select_device+0x12>
  40087c:	bd08      	pop	{r3, pc}
			spi_set_peripheral_chip_select_value(p_spi, device->id);
  40087e:	4b06      	ldr	r3, [pc, #24]	; (400898 <spi_select_device+0x2c>)
  400880:	4798      	blx	r3
  400882:	bd08      	pop	{r3, pc}
		}
	} else {
		if (device->id < MAX_NUM_WITHOUT_DECODER) {
  400884:	6809      	ldr	r1, [r1, #0]
  400886:	2903      	cmp	r1, #3
  400888:	d8f8      	bhi.n	40087c <spi_select_device+0x10>
			spi_set_peripheral_chip_select_value(p_spi, (~(1 << device->id)));
  40088a:	2301      	movs	r3, #1
  40088c:	fa03 f101 	lsl.w	r1, r3, r1
  400890:	43c9      	mvns	r1, r1
  400892:	4b01      	ldr	r3, [pc, #4]	; (400898 <spi_select_device+0x2c>)
  400894:	4798      	blx	r3
		}
	}
}
  400896:	e7f1      	b.n	40087c <spi_select_device+0x10>
  400898:	0040181d 	.word	0x0040181d

0040089c <spi_write_packet>:
{
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t i = 0;
	uint8_t val;

	while (len) {
  40089c:	b11a      	cbz	r2, 4008a6 <spi_write_packet+0xa>
{
  40089e:	b410      	push	{r4}
  4008a0:	460c      	mov	r4, r1
  4008a2:	4411      	add	r1, r2
  4008a4:	e006      	b.n	4008b4 <spi_write_packet+0x18>
		spi_write_single(p_spi, val);
		i++;
		len--;
	}

	return STATUS_OK;
  4008a6:	2000      	movs	r0, #0
  4008a8:	4770      	bx	lr
		val = data[i];
  4008aa:	f814 3b01 	ldrb.w	r3, [r4], #1
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(Spi *p_spi, uint16_t data)
{
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  4008ae:	60c3      	str	r3, [r0, #12]
	while (len) {
  4008b0:	42a1      	cmp	r1, r4
  4008b2:	d00c      	beq.n	4008ce <spi_write_packet+0x32>
{
  4008b4:	f643 2399 	movw	r3, #15001	; 0x3a99
 * \retval 1 if transmissions are complete.
 * \retval 0 if transmissions are not complete.
 */
static inline uint32_t spi_is_tx_ready(Spi *p_spi)
{
	if (p_spi->SPI_SR & SPI_SR_TDRE) {
  4008b8:	6902      	ldr	r2, [r0, #16]
		while (!spi_is_tx_ready(p_spi)) {
  4008ba:	f012 0f02 	tst.w	r2, #2
  4008be:	d1f4      	bne.n	4008aa <spi_write_packet+0xe>
			if (!timeout--) {
  4008c0:	3b01      	subs	r3, #1
  4008c2:	d1f9      	bne.n	4008b8 <spi_write_packet+0x1c>
				return ERR_TIMEOUT;
  4008c4:	f06f 0002 	mvn.w	r0, #2
}
  4008c8:	f85d 4b04 	ldr.w	r4, [sp], #4
  4008cc:	4770      	bx	lr
	return STATUS_OK;
  4008ce:	2000      	movs	r0, #0
  4008d0:	e7fa      	b.n	4008c8 <spi_write_packet+0x2c>

004008d2 <spi_read_packet>:
{
	uint32_t timeout = SPI_TIMEOUT;
	uint8_t val;
	uint32_t i = 0;

	while (len) {
  4008d2:	b13a      	cbz	r2, 4008e4 <spi_read_packet+0x12>
{
  4008d4:	b470      	push	{r4, r5, r6}
  4008d6:	4615      	mov	r5, r2
  4008d8:	460c      	mov	r4, r1
  4008da:	440d      	add	r5, r1
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  4008dc:	26ff      	movs	r6, #255	; 0xff
 *
 * \return 1 if the SPI Receiver is ready, otherwise 0.
 */
static inline uint32_t spi_is_rx_ready(Spi *p_spi)
{
	if ((p_spi->SPI_SR & (SPI_SR_RDRF | SPI_SR_TXEMPTY))
  4008de:	f240 2101 	movw	r1, #513	; 0x201
  4008e2:	e012      	b.n	40090a <spi_read_packet+0x38>
		data[i] = val;
		i++;
		len--;
	}

	return STATUS_OK;
  4008e4:	2000      	movs	r0, #0
  4008e6:	4770      	bx	lr
	p_spi->SPI_TDR = SPI_TDR_TD(data);
  4008e8:	60c6      	str	r6, [r0, #12]
		while (!spi_is_rx_ready(p_spi)) {
  4008ea:	f643 2399 	movw	r3, #15001	; 0x3a99
	if ((p_spi->SPI_SR & (SPI_SR_RDRF | SPI_SR_TXEMPTY))
  4008ee:	6902      	ldr	r2, [r0, #16]
  4008f0:	ea31 0202 	bics.w	r2, r1, r2
  4008f4:	d004      	beq.n	400900 <spi_read_packet+0x2e>
			if (!timeout--) {
  4008f6:	3b01      	subs	r3, #1
  4008f8:	d1f9      	bne.n	4008ee <spi_read_packet+0x1c>
				return ERR_TIMEOUT;
  4008fa:	f06f 0002 	mvn.w	r0, #2
  4008fe:	e00e      	b.n	40091e <spi_read_packet+0x4c>
	return (p_spi->SPI_RDR & SPI_RDR_RD_Msk);
  400900:	6883      	ldr	r3, [r0, #8]
 * \param data      Data to read.
 *
 */
static inline void spi_read_single(Spi *p_spi, uint8_t *data)
{
	*data = (uint8_t)spi_get(p_spi);
  400902:	f804 3b01 	strb.w	r3, [r4], #1
	while (len) {
  400906:	42a5      	cmp	r5, r4
  400908:	d00b      	beq.n	400922 <spi_read_packet+0x50>
{
  40090a:	f643 2399 	movw	r3, #15001	; 0x3a99
	if (p_spi->SPI_SR & SPI_SR_TDRE) {
  40090e:	6902      	ldr	r2, [r0, #16]
		while (!spi_is_tx_ready(p_spi)) {
  400910:	f012 0f02 	tst.w	r2, #2
  400914:	d1e8      	bne.n	4008e8 <spi_read_packet+0x16>
			if (!timeout--) {
  400916:	3b01      	subs	r3, #1
  400918:	d1f9      	bne.n	40090e <spi_read_packet+0x3c>
				return ERR_TIMEOUT;
  40091a:	f06f 0002 	mvn.w	r0, #2
}
  40091e:	bc70      	pop	{r4, r5, r6}
  400920:	4770      	bx	lr
	return STATUS_OK;
  400922:	2000      	movs	r0, #0
  400924:	e7fb      	b.n	40091e <spi_read_packet+0x4c>
	...

00400928 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400928:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  40092c:	b980      	cbnz	r0, 400950 <_read+0x28>
  40092e:	460c      	mov	r4, r1
  400930:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  400932:	2a00      	cmp	r2, #0
  400934:	dd0f      	ble.n	400956 <_read+0x2e>
  400936:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400938:	4e08      	ldr	r6, [pc, #32]	; (40095c <_read+0x34>)
  40093a:	4d09      	ldr	r5, [pc, #36]	; (400960 <_read+0x38>)
  40093c:	6830      	ldr	r0, [r6, #0]
  40093e:	4621      	mov	r1, r4
  400940:	682b      	ldr	r3, [r5, #0]
  400942:	4798      	blx	r3
		ptr++;
  400944:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400946:	42bc      	cmp	r4, r7
  400948:	d1f8      	bne.n	40093c <_read+0x14>
		nChars++;
	}
	return nChars;
}
  40094a:	4640      	mov	r0, r8
  40094c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400950:	f04f 38ff 	mov.w	r8, #4294967295
  400954:	e7f9      	b.n	40094a <_read+0x22>
	for (; len > 0; --len) {
  400956:	4680      	mov	r8, r0
  400958:	e7f7      	b.n	40094a <_read+0x22>
  40095a:	bf00      	nop
  40095c:	20401030 	.word	0x20401030
  400960:	20401028 	.word	0x20401028

00400964 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400964:	3801      	subs	r0, #1
  400966:	2802      	cmp	r0, #2
  400968:	d815      	bhi.n	400996 <_write+0x32>
{
  40096a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40096e:	460e      	mov	r6, r1
  400970:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  400972:	b19a      	cbz	r2, 40099c <_write+0x38>
  400974:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400976:	f8df 8038 	ldr.w	r8, [pc, #56]	; 4009b0 <_write+0x4c>
  40097a:	4f0c      	ldr	r7, [pc, #48]	; (4009ac <_write+0x48>)
  40097c:	f8d8 0000 	ldr.w	r0, [r8]
  400980:	f815 1b01 	ldrb.w	r1, [r5], #1
  400984:	683b      	ldr	r3, [r7, #0]
  400986:	4798      	blx	r3
  400988:	2800      	cmp	r0, #0
  40098a:	db0a      	blt.n	4009a2 <_write+0x3e>
  40098c:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  40098e:	3c01      	subs	r4, #1
  400990:	d1f4      	bne.n	40097c <_write+0x18>
  400992:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  400996:	f04f 30ff 	mov.w	r0, #4294967295
  40099a:	4770      	bx	lr
	for (; len != 0; --len) {
  40099c:	4610      	mov	r0, r2
  40099e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  4009a2:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  4009a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4009aa:	bf00      	nop
  4009ac:	2040102c 	.word	0x2040102c
  4009b0:	20401030 	.word	0x20401030

004009b4 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4009b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4009b8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4009bc:	4b9e      	ldr	r3, [pc, #632]	; (400c38 <board_init+0x284>)
  4009be:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  4009c0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009c4:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  4009c8:	4b9c      	ldr	r3, [pc, #624]	; (400c3c <board_init+0x288>)
  4009ca:	2200      	movs	r2, #0
  4009cc:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  4009d0:	695a      	ldr	r2, [r3, #20]
  4009d2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4009d6:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  4009d8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009dc:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  4009e0:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  4009e4:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  4009e8:	f007 0007 	and.w	r0, r7, #7
  4009ec:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  4009ee:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  4009f2:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  4009f6:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  4009fa:	f3bf 8f4f 	dsb	sy
  4009fe:	f04f 34ff 	mov.w	r4, #4294967295
  400a02:	fa04 fc00 	lsl.w	ip, r4, r0
  400a06:	fa06 f000 	lsl.w	r0, r6, r0
  400a0a:	fa04 f40e 	lsl.w	r4, r4, lr
  400a0e:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400a12:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400a14:	463a      	mov	r2, r7
  400a16:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400a18:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400a1c:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400a20:	3a01      	subs	r2, #1
  400a22:	4423      	add	r3, r4
  400a24:	f1b2 3fff 	cmp.w	r2, #4294967295
  400a28:	d1f6      	bne.n	400a18 <board_init+0x64>
        } while(sets--);
  400a2a:	3e01      	subs	r6, #1
  400a2c:	4460      	add	r0, ip
  400a2e:	f1b6 3fff 	cmp.w	r6, #4294967295
  400a32:	d1ef      	bne.n	400a14 <board_init+0x60>
  400a34:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400a38:	4b80      	ldr	r3, [pc, #512]	; (400c3c <board_init+0x288>)
  400a3a:	695a      	ldr	r2, [r3, #20]
  400a3c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400a40:	615a      	str	r2, [r3, #20]
  400a42:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a46:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a4a:	4a7d      	ldr	r2, [pc, #500]	; (400c40 <board_init+0x28c>)
  400a4c:	497d      	ldr	r1, [pc, #500]	; (400c44 <board_init+0x290>)
  400a4e:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a50:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400a54:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400a56:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a5a:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400a5e:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400a62:	f022 0201 	bic.w	r2, r2, #1
  400a66:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400a6a:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400a6e:	f022 0201 	bic.w	r2, r2, #1
  400a72:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400a76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a7a:	f3bf 8f6f 	isb	sy
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400a7e:	200a      	movs	r0, #10
  400a80:	4c71      	ldr	r4, [pc, #452]	; (400c48 <board_init+0x294>)
  400a82:	47a0      	blx	r4
  400a84:	200b      	movs	r0, #11
  400a86:	47a0      	blx	r4
  400a88:	200c      	movs	r0, #12
  400a8a:	47a0      	blx	r4
  400a8c:	2010      	movs	r0, #16
  400a8e:	47a0      	blx	r4
  400a90:	2011      	movs	r0, #17
  400a92:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400a94:	4e6d      	ldr	r6, [pc, #436]	; (400c4c <board_init+0x298>)
  400a96:	f44f 7880 	mov.w	r8, #256	; 0x100
  400a9a:	f8c6 8010 	str.w	r8, [r6, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400a9e:	f8c6 80a0 	str.w	r8, [r6, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400aa2:	f8c6 8030 	str.w	r8, [r6, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400aa6:	4c6a      	ldr	r4, [pc, #424]	; (400c50 <board_init+0x29c>)
  400aa8:	f44f 6500 	mov.w	r5, #2048	; 0x800
  400aac:	6165      	str	r5, [r4, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400aae:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		base->PIO_PUER = mask;
  400ab2:	6665      	str	r5, [r4, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400ab4:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  400ab8:	6565      	str	r5, [r4, #84]	; 0x54
		base->PIO_IFER = mask;
  400aba:	6225      	str	r5, [r4, #32]
		base->PIO_IFSCER = mask;
  400abc:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400ac0:	6f23      	ldr	r3, [r4, #112]	; 0x70
  400ac2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400ac6:	6723      	str	r3, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ac8:	6f63      	ldr	r3, [r4, #116]	; 0x74
  400aca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  400ace:	6763      	str	r3, [r4, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400ad0:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400ad4:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400ad8:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
		base->PIO_PUDR = mask;
  400adc:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
  400ae0:	6623      	str	r3, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400ae2:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  400ae6:	6563      	str	r3, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  400ae8:	6263      	str	r3, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400aea:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400aee:	6f22      	ldr	r2, [r4, #112]	; 0x70
  400af0:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  400af4:	6722      	str	r2, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400af6:	6f62      	ldr	r2, [r4, #116]	; 0x74
  400af8:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  400afc:	6762      	str	r2, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400afe:	6063      	str	r3, [r4, #4]
			GPIO_PUSH_BUTTON_1_SENSE);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	ioport_set_pin_peripheral_mode(USART1_RXD_GPIO, USART1_RXD_FLAGS);
	MATRIX->CCFG_SYSIO |= CCFG_SYSIO_SYSIO4;
  400b00:	4a54      	ldr	r2, [pc, #336]	; (400c54 <board_init+0x2a0>)
  400b02:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  400b06:	f043 0310 	orr.w	r3, r3, #16
  400b0a:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
		base->PIO_PUDR = mask;
  400b0e:	f502 22b2 	add.w	r2, r2, #364544	; 0x59000
  400b12:	2310      	movs	r3, #16
  400b14:	6613      	str	r3, [r2, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400b16:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b1a:	6553      	str	r3, [r2, #84]	; 0x54
		base->PIO_IFDR = mask;
  400b1c:	6253      	str	r3, [r2, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400b1e:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
		base->PIO_ABCDSR[0] |= mask;
  400b22:	6f11      	ldr	r1, [r2, #112]	; 0x70
  400b24:	4319      	orrs	r1, r3
  400b26:	6711      	str	r1, [r2, #112]	; 0x70
		base->PIO_ABCDSR[1] |= mask;
  400b28:	6f51      	ldr	r1, [r2, #116]	; 0x74
  400b2a:	4319      	orrs	r1, r3
  400b2c:	6751      	str	r1, [r2, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400b2e:	6053      	str	r3, [r2, #4]
		base->PIO_PUDR = mask;
  400b30:	2208      	movs	r2, #8
  400b32:	6622      	str	r2, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400b34:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b38:	6562      	str	r2, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  400b3a:	6262      	str	r2, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400b3c:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400b40:	6f21      	ldr	r1, [r4, #112]	; 0x70
  400b42:	f021 0108 	bic.w	r1, r1, #8
  400b46:	6721      	str	r1, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400b48:	6f61      	ldr	r1, [r4, #116]	; 0x74
  400b4a:	f021 0108 	bic.w	r1, r1, #8
  400b4e:	6761      	str	r1, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400b50:	6062      	str	r2, [r4, #4]
		base->PIO_PUDR = mask;
  400b52:	6623      	str	r3, [r4, #96]	; 0x60
		base->PIO_PPDDR = mask;
  400b54:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  400b58:	6563      	str	r3, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  400b5a:	6263      	str	r3, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400b5c:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400b60:	6f22      	ldr	r2, [r4, #112]	; 0x70
  400b62:	f022 0210 	bic.w	r2, r2, #16
  400b66:	6722      	str	r2, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400b68:	6f62      	ldr	r2, [r4, #116]	; 0x74
  400b6a:	f022 0210 	bic.w	r2, r2, #16
  400b6e:	6762      	str	r2, [r4, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  400b70:	6063      	str	r3, [r4, #4]
	ioport_set_pin_mode(SD_MMC_0_CD_GPIO, SD_MMC_0_CD_FLAGS);
#endif

#ifdef CONF_BOARD_ILI9488
	/**LCD pin configure on EBI*/
	pio_configure(PIN_EBI_RESET_PIO, PIN_EBI_RESET_TYPE, PIN_EBI_RESET_MASK, PIN_EBI_RESET_ATTRI);
  400b72:	2300      	movs	r3, #0
  400b74:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  400b78:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400b7c:	4630      	mov	r0, r6
  400b7e:	4f36      	ldr	r7, [pc, #216]	; (400c58 <board_init+0x2a4>)
  400b80:	47b8      	blx	r7
	pio_configure(PIN_EBI_CDS_PIO, PIN_EBI_CDS_TYPE, PIN_EBI_CDS_MASK, PIN_EBI_CDS_ATTRI);
  400b82:	2300      	movs	r3, #0
  400b84:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  400b88:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400b8c:	4630      	mov	r0, r6
  400b8e:	47b8      	blx	r7
	pio_configure(PIN_EBI_DATAL_PIO, PIN_EBI_DATAL_TYPE, PIN_EBI_DATAL_MASK, PIN_EBI_DATAL_ATTRI);
  400b90:	2301      	movs	r3, #1
  400b92:	22ff      	movs	r2, #255	; 0xff
  400b94:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400b98:	4630      	mov	r0, r6
  400b9a:	47b8      	blx	r7
	pio_configure(PIN_EBI_DATAH_0_PIO, PIN_EBI_DATAH_0_TYPE, PIN_EBI_DATAH_0_MASK, PIN_EBI_DATAH_0_ATTRI);
  400b9c:	2301      	movs	r3, #1
  400b9e:	223f      	movs	r2, #63	; 0x3f
  400ba0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400ba4:	482d      	ldr	r0, [pc, #180]	; (400c5c <board_init+0x2a8>)
  400ba6:	47b8      	blx	r7
	pio_configure(PIN_EBI_DATAH_1_PIO, PIN_EBI_DATAH_1_TYPE, PIN_EBI_DATAH_1_MASK, PIN_EBI_DATAH_1_ATTRI);
  400ba8:	2301      	movs	r3, #1
  400baa:	f44f 32c0 	mov.w	r2, #98304	; 0x18000
  400bae:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bb2:	4620      	mov	r0, r4
  400bb4:	47b8      	blx	r7
	pio_configure(PIN_EBI_NWE_PIO, PIN_EBI_NWE_TYPE, PIN_EBI_NWE_MASK, PIN_EBI_NWE_ATTRI);
  400bb6:	2301      	movs	r3, #1
  400bb8:	4642      	mov	r2, r8
  400bba:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bbe:	4630      	mov	r0, r6
  400bc0:	47b8      	blx	r7
	pio_configure(PIN_EBI_NRD_PIO, PIN_EBI_NRD_TYPE, PIN_EBI_NRD_MASK, PIN_EBI_NRD_ATTRI);
  400bc2:	2301      	movs	r3, #1
  400bc4:	462a      	mov	r2, r5
  400bc6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bca:	4630      	mov	r0, r6
  400bcc:	47b8      	blx	r7
	pio_configure(PIN_EBI_CS_PIO, PIN_EBI_CS_TYPE, PIN_EBI_CS_MASK, PIN_EBI_CS_ATTRI);
  400bce:	2301      	movs	r3, #1
  400bd0:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  400bd4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400bd8:	4821      	ldr	r0, [pc, #132]	; (400c60 <board_init+0x2ac>)
  400bda:	47b8      	blx	r7
	pio_configure(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_TYPE, PIN_EBI_BACKLIGHT_MASK, PIN_EBI_BACKLIGHT_ATTRI);
  400bdc:	2300      	movs	r3, #0
  400bde:	f44f 7200 	mov.w	r2, #512	; 0x200
  400be2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400be6:	4630      	mov	r0, r6
  400be8:	47b8      	blx	r7
	pio_set(PIN_EBI_BACKLIGHT_PIO, PIN_EBI_BACKLIGHT_MASK);
  400bea:	f44f 7100 	mov.w	r1, #512	; 0x200
  400bee:	4630      	mov	r0, r6
  400bf0:	4b1c      	ldr	r3, [pc, #112]	; (400c64 <board_init+0x2b0>)
  400bf2:	4798      	blx	r3
	MATRIX->CCFG_SMCNFCS = CCFG_SMCNFCS_SDRAMEN;
#endif

#ifdef CONF_BOARD_ILI9488
	/**LCD pin configure on SPI*/
	pio_configure_pin(LCD_SPI_MISO_PIO, LCD_SPI_MISO_FLAGS);
  400bf4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400bf8:	2074      	movs	r0, #116	; 0x74
  400bfa:	4c1b      	ldr	r4, [pc, #108]	; (400c68 <board_init+0x2b4>)
  400bfc:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_MOSI_PIO, LCD_SPI_MOSI_FLAGS);
  400bfe:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c02:	2075      	movs	r0, #117	; 0x75
  400c04:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_SPCK_PIO, LCD_SPI_SPCK_FLAGS);
  400c06:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c0a:	2076      	movs	r0, #118	; 0x76
  400c0c:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_NPCS_PIO, LCD_SPI_NPCS_FLAGS);
  400c0e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400c12:	207b      	movs	r0, #123	; 0x7b
  400c14:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_RESET_PIO, LCD_SPI_RESET_FLAGS);
  400c16:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400c1a:	2018      	movs	r0, #24
  400c1c:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_CDS_PIO, LCD_SPI_CDS_FLAGS);
  400c1e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400c22:	2006      	movs	r0, #6
  400c24:	47a0      	blx	r4
	pio_configure_pin(LCD_SPI_BACKLIGHT_PIO, LCD_SPI_BACKLIGHT_FLAGS);
  400c26:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400c2a:	2053      	movs	r0, #83	; 0x53
  400c2c:	47a0      	blx	r4
	pio_set_pin_high(LCD_SPI_BACKLIGHT_PIO);
  400c2e:	2053      	movs	r0, #83	; 0x53
  400c30:	4b0e      	ldr	r3, [pc, #56]	; (400c6c <board_init+0x2b8>)
  400c32:	4798      	blx	r3
  400c34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c38:	400e1850 	.word	0x400e1850
  400c3c:	e000ed00 	.word	0xe000ed00
  400c40:	400e0c00 	.word	0x400e0c00
  400c44:	5a00080c 	.word	0x5a00080c
  400c48:	004017d1 	.word	0x004017d1
  400c4c:	400e1200 	.word	0x400e1200
  400c50:	400e0e00 	.word	0x400e0e00
  400c54:	40088000 	.word	0x40088000
  400c58:	004013fd 	.word	0x004013fd
  400c5c:	400e1600 	.word	0x400e1600
  400c60:	400e1400 	.word	0x400e1400
  400c64:	00401305 	.word	0x00401305
  400c68:	004014cd 	.word	0x004014cd
  400c6c:	00401495 	.word	0x00401495

00400c70 <ili9488_check_box_coordinates>:
 * \param p_ul_x2 X coordinate of lower-right corner on LCD.
 * \param p_ul_y2 Y coordinate of lower-right corner on LCD.
 */
static void ili9488_check_box_coordinates(uint32_t *p_ul_x1, uint32_t *p_ul_y1,
		uint32_t *p_ul_x2, uint32_t *p_ul_y2)
{
  400c70:	b430      	push	{r4, r5}
	uint32_t dw;

	if (*p_ul_x1 >= ILI9488_LCD_WIDTH) {
  400c72:	6804      	ldr	r4, [r0, #0]
  400c74:	f5b4 7ff0 	cmp.w	r4, #480	; 0x1e0
  400c78:	d302      	bcc.n	400c80 <ili9488_check_box_coordinates+0x10>
		*p_ul_x1 = ILI9488_LCD_WIDTH - 1;
  400c7a:	f240 14df 	movw	r4, #479	; 0x1df
  400c7e:	6004      	str	r4, [r0, #0]
	}

	if (*p_ul_x2 >= ILI9488_LCD_WIDTH) {
  400c80:	6814      	ldr	r4, [r2, #0]
  400c82:	f5b4 7ff0 	cmp.w	r4, #480	; 0x1e0
  400c86:	d302      	bcc.n	400c8e <ili9488_check_box_coordinates+0x1e>
		*p_ul_x2 = ILI9488_LCD_WIDTH - 1;
  400c88:	f240 14df 	movw	r4, #479	; 0x1df
  400c8c:	6014      	str	r4, [r2, #0]
	}

	if (*p_ul_y1 >= ILI9488_LCD_HEIGHT) {
  400c8e:	680c      	ldr	r4, [r1, #0]
  400c90:	f5b4 7fa0 	cmp.w	r4, #320	; 0x140
  400c94:	d302      	bcc.n	400c9c <ili9488_check_box_coordinates+0x2c>
		*p_ul_y1 = ILI9488_LCD_HEIGHT - 1;
  400c96:	f240 143f 	movw	r4, #319	; 0x13f
  400c9a:	600c      	str	r4, [r1, #0]
	}

	if (*p_ul_y2 >= ILI9488_LCD_HEIGHT) {
  400c9c:	681c      	ldr	r4, [r3, #0]
  400c9e:	f5b4 7fa0 	cmp.w	r4, #320	; 0x140
  400ca2:	d302      	bcc.n	400caa <ili9488_check_box_coordinates+0x3a>
		*p_ul_y2 = ILI9488_LCD_HEIGHT - 1;
  400ca4:	f240 143f 	movw	r4, #319	; 0x13f
  400ca8:	601c      	str	r4, [r3, #0]
	}

	if (*p_ul_x1 > *p_ul_x2) {
  400caa:	6804      	ldr	r4, [r0, #0]
  400cac:	6815      	ldr	r5, [r2, #0]
  400cae:	42ac      	cmp	r4, r5
  400cb0:	d901      	bls.n	400cb6 <ili9488_check_box_coordinates+0x46>
		dw = *p_ul_x1;
		*p_ul_x1 = *p_ul_x2;
  400cb2:	6005      	str	r5, [r0, #0]
		*p_ul_x2 = dw;
  400cb4:	6014      	str	r4, [r2, #0]
	}

	if (*p_ul_y1 > *p_ul_y2) {
  400cb6:	680a      	ldr	r2, [r1, #0]
  400cb8:	6818      	ldr	r0, [r3, #0]
  400cba:	4282      	cmp	r2, r0
  400cbc:	d901      	bls.n	400cc2 <ili9488_check_box_coordinates+0x52>
		dw = *p_ul_y1;
		*p_ul_y1 = *p_ul_y2;
  400cbe:	6008      	str	r0, [r1, #0]
		*p_ul_y2 = dw;
  400cc0:	601a      	str	r2, [r3, #0]
	}
}
  400cc2:	bc30      	pop	{r4, r5}
  400cc4:	4770      	bx	lr
	...

00400cc8 <ili9488_write_ram_prepare>:
{
  400cc8:	b510      	push	{r4, lr}
  400cca:	b082      	sub	sp, #8
	pio_set_pin_low(LCD_SPI_CDS_PIO);
  400ccc:	2006      	movs	r0, #6
  400cce:	4b0a      	ldr	r3, [pc, #40]	; (400cf8 <ili9488_write_ram_prepare+0x30>)
  400cd0:	4798      	blx	r3
	spi_write(BOARD_ILI9488_SPI, ILI9488_CMD_MEMORY_WRITE, BOARD_ILI9488_SPI_NPCS, 0);
  400cd2:	2300      	movs	r3, #0
  400cd4:	2203      	movs	r2, #3
  400cd6:	212c      	movs	r1, #44	; 0x2c
  400cd8:	4808      	ldr	r0, [pc, #32]	; (400cfc <ili9488_write_ram_prepare+0x34>)
  400cda:	4c09      	ldr	r4, [pc, #36]	; (400d00 <ili9488_write_ram_prepare+0x38>)
  400cdc:	47a0      	blx	r4
	for(i = 0; i < 0xFF; i++);
  400cde:	2300      	movs	r3, #0
  400ce0:	9301      	str	r3, [sp, #4]
  400ce2:	9b01      	ldr	r3, [sp, #4]
  400ce4:	2bfe      	cmp	r3, #254	; 0xfe
  400ce6:	d805      	bhi.n	400cf4 <ili9488_write_ram_prepare+0x2c>
  400ce8:	9b01      	ldr	r3, [sp, #4]
  400cea:	3301      	adds	r3, #1
  400cec:	9301      	str	r3, [sp, #4]
  400cee:	9b01      	ldr	r3, [sp, #4]
  400cf0:	2bfe      	cmp	r3, #254	; 0xfe
  400cf2:	d9f9      	bls.n	400ce8 <ili9488_write_ram_prepare+0x20>
}
  400cf4:	b002      	add	sp, #8
  400cf6:	bd10      	pop	{r4, pc}
  400cf8:	004014b1 	.word	0x004014b1
  400cfc:	40008000 	.word	0x40008000
  400d00:	00401845 	.word	0x00401845

00400d04 <ili9488_write_register>:
{
  400d04:	b570      	push	{r4, r5, r6, lr}
  400d06:	b082      	sub	sp, #8
  400d08:	4605      	mov	r5, r0
  400d0a:	460e      	mov	r6, r1
  400d0c:	4614      	mov	r4, r2
	pio_set_pin_low(LCD_SPI_CDS_PIO);
  400d0e:	2006      	movs	r0, #6
  400d10:	4b14      	ldr	r3, [pc, #80]	; (400d64 <ili9488_write_register+0x60>)
  400d12:	4798      	blx	r3
	spi_write(BOARD_ILI9488_SPI, uc_reg, BOARD_ILI9488_SPI_NPCS, 0);
  400d14:	2300      	movs	r3, #0
  400d16:	2203      	movs	r2, #3
  400d18:	4629      	mov	r1, r5
  400d1a:	4813      	ldr	r0, [pc, #76]	; (400d68 <ili9488_write_register+0x64>)
  400d1c:	4d13      	ldr	r5, [pc, #76]	; (400d6c <ili9488_write_register+0x68>)
  400d1e:	47a8      	blx	r5
	for(i = 0; i < 0xFF; i++);
  400d20:	2300      	movs	r3, #0
  400d22:	9301      	str	r3, [sp, #4]
  400d24:	9b01      	ldr	r3, [sp, #4]
  400d26:	2bfe      	cmp	r3, #254	; 0xfe
  400d28:	d805      	bhi.n	400d36 <ili9488_write_register+0x32>
  400d2a:	9b01      	ldr	r3, [sp, #4]
  400d2c:	3301      	adds	r3, #1
  400d2e:	9301      	str	r3, [sp, #4]
  400d30:	9b01      	ldr	r3, [sp, #4]
  400d32:	2bfe      	cmp	r3, #254	; 0xfe
  400d34:	d9f9      	bls.n	400d2a <ili9488_write_register+0x26>
	if(size > 0) {
  400d36:	b90c      	cbnz	r4, 400d3c <ili9488_write_register+0x38>
}
  400d38:	b002      	add	sp, #8
  400d3a:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_pin_high(LCD_SPI_CDS_PIO);
  400d3c:	2006      	movs	r0, #6
  400d3e:	4b0c      	ldr	r3, [pc, #48]	; (400d70 <ili9488_write_register+0x6c>)
  400d40:	4798      	blx	r3
		spi_write_packet(BOARD_ILI9488_SPI, us_data, size);
  400d42:	4622      	mov	r2, r4
  400d44:	4631      	mov	r1, r6
  400d46:	4808      	ldr	r0, [pc, #32]	; (400d68 <ili9488_write_register+0x64>)
  400d48:	4b0a      	ldr	r3, [pc, #40]	; (400d74 <ili9488_write_register+0x70>)
  400d4a:	4798      	blx	r3
		for(i = 0; i < 0x5F; i++);
  400d4c:	2300      	movs	r3, #0
  400d4e:	9301      	str	r3, [sp, #4]
  400d50:	9b01      	ldr	r3, [sp, #4]
  400d52:	2b5e      	cmp	r3, #94	; 0x5e
  400d54:	d8f0      	bhi.n	400d38 <ili9488_write_register+0x34>
  400d56:	9b01      	ldr	r3, [sp, #4]
  400d58:	3301      	adds	r3, #1
  400d5a:	9301      	str	r3, [sp, #4]
  400d5c:	9b01      	ldr	r3, [sp, #4]
  400d5e:	2b5e      	cmp	r3, #94	; 0x5e
  400d60:	d9f9      	bls.n	400d56 <ili9488_write_register+0x52>
  400d62:	e7e9      	b.n	400d38 <ili9488_write_register+0x34>
  400d64:	004014b1 	.word	0x004014b1
  400d68:	40008000 	.word	0x40008000
  400d6c:	00401845 	.word	0x00401845
  400d70:	00401495 	.word	0x00401495
  400d74:	0040089d 	.word	0x0040089d

00400d78 <ili9488_write_ram_buffer>:
{
  400d78:	b530      	push	{r4, r5, lr}
  400d7a:	b083      	sub	sp, #12
  400d7c:	4604      	mov	r4, r0
  400d7e:	460d      	mov	r5, r1
	pio_set_pin_high(LCD_SPI_CDS_PIO);
  400d80:	2006      	movs	r0, #6
  400d82:	4b0a      	ldr	r3, [pc, #40]	; (400dac <ili9488_write_ram_buffer+0x34>)
  400d84:	4798      	blx	r3
	spi_write_packet(BOARD_ILI9488_SPI, p_ul_buf, ul_size);
  400d86:	462a      	mov	r2, r5
  400d88:	4621      	mov	r1, r4
  400d8a:	4809      	ldr	r0, [pc, #36]	; (400db0 <ili9488_write_ram_buffer+0x38>)
  400d8c:	4b09      	ldr	r3, [pc, #36]	; (400db4 <ili9488_write_ram_buffer+0x3c>)
  400d8e:	4798      	blx	r3
	for(i = 0; i < 0xFF; i++);
  400d90:	2300      	movs	r3, #0
  400d92:	9301      	str	r3, [sp, #4]
  400d94:	9b01      	ldr	r3, [sp, #4]
  400d96:	2bfe      	cmp	r3, #254	; 0xfe
  400d98:	d805      	bhi.n	400da6 <ili9488_write_ram_buffer+0x2e>
  400d9a:	9b01      	ldr	r3, [sp, #4]
  400d9c:	3301      	adds	r3, #1
  400d9e:	9301      	str	r3, [sp, #4]
  400da0:	9b01      	ldr	r3, [sp, #4]
  400da2:	2bfe      	cmp	r3, #254	; 0xfe
  400da4:	d9f9      	bls.n	400d9a <ili9488_write_ram_buffer+0x22>
}
  400da6:	b003      	add	sp, #12
  400da8:	bd30      	pop	{r4, r5, pc}
  400daa:	bf00      	nop
  400dac:	00401495 	.word	0x00401495
  400db0:	40008000 	.word	0x40008000
  400db4:	0040089d 	.word	0x0040089d

00400db8 <ili9488_delay>:
	for(i = 0; i < ul_ms; i++) {
  400db8:	4601      	mov	r1, r0
  400dba:	b130      	cbz	r0, 400dca <ili9488_delay+0x12>
  400dbc:	4a03      	ldr	r2, [pc, #12]	; (400dcc <ili9488_delay+0x14>)
{
  400dbe:	4b04      	ldr	r3, [pc, #16]	; (400dd0 <ili9488_delay+0x18>)
		for(i = 0; i < 100000; i++) {
  400dc0:	3b01      	subs	r3, #1
  400dc2:	d1fd      	bne.n	400dc0 <ili9488_delay+0x8>
	for(i = 0; i < ul_ms; i++) {
  400dc4:	4291      	cmp	r1, r2
  400dc6:	d8fa      	bhi.n	400dbe <ili9488_delay+0x6>
  400dc8:	4770      	bx	lr
  400dca:	4770      	bx	lr
  400dcc:	000186a1 	.word	0x000186a1
  400dd0:	000186a0 	.word	0x000186a0

00400dd4 <ili9488_set_display_direction>:
 * \brief ILI9488 configure landscape.
 *
 * \Param LandscaprMode Landscape Mode.
 */
void ili9488_set_display_direction(enum ili9488_display_direction direction )
{
  400dd4:	b500      	push	{lr}
  400dd6:	b083      	sub	sp, #12
	ili9488_color_t value;
	if(direction) {
  400dd8:	b958      	cbnz	r0, 400df2 <ili9488_set_display_direction+0x1e>
		value = 0xE8;
	} else {
		value = 0x48;
  400dda:	2348      	movs	r3, #72	; 0x48
  400ddc:	f88d 3007 	strb.w	r3, [sp, #7]
	}
	ili9488_write_register(ILI9488_CMD_MEMORY_ACCESS_CONTROL, &value, 1);
  400de0:	2201      	movs	r2, #1
  400de2:	f10d 0107 	add.w	r1, sp, #7
  400de6:	2036      	movs	r0, #54	; 0x36
  400de8:	4b04      	ldr	r3, [pc, #16]	; (400dfc <ili9488_set_display_direction+0x28>)
  400dea:	4798      	blx	r3
}
  400dec:	b003      	add	sp, #12
  400dee:	f85d fb04 	ldr.w	pc, [sp], #4
		value = 0xE8;
  400df2:	23e8      	movs	r3, #232	; 0xe8
  400df4:	f88d 3007 	strb.w	r3, [sp, #7]
  400df8:	e7f2      	b.n	400de0 <ili9488_set_display_direction+0xc>
  400dfa:	bf00      	nop
  400dfc:	00400d05 	.word	0x00400d05

00400e00 <ili9488_set_window>:
 * \Param y start position.
 * \Param width  Width of window.
 * \Param height Height of window.
 */
void ili9488_set_window(uint16_t x, uint16_t y, uint16_t width, uint16_t height )
{
  400e00:	b510      	push	{r4, lr}
  400e02:	b084      	sub	sp, #16
	uint32_t cnt = 0;
	ili9488_color_t buf[4];

	cnt = sizeof(buf)/sizeof(ili9488_color_t);

	col_start  =  x ;
  400e04:	f8ad 000e 	strh.w	r0, [sp, #14]
	col_end    =  width + x - 1;
  400e08:	3a01      	subs	r2, #1
  400e0a:	4402      	add	r2, r0
  400e0c:	f8ad 200c 	strh.w	r2, [sp, #12]

	row_start = y ;
  400e10:	f8ad 100a 	strh.w	r1, [sp, #10]
	row_end   = height + y - 1;
  400e14:	3b01      	subs	r3, #1
  400e16:	4419      	add	r1, r3
  400e18:	f8ad 1008 	strh.w	r1, [sp, #8]

	buf[0] = get_8b_to_16b(col_start);
  400e1c:	0a03      	lsrs	r3, r0, #8
  400e1e:	f88d 3004 	strb.w	r3, [sp, #4]
	buf[1] = get_0b_to_8b(col_start);
  400e22:	f88d 0005 	strb.w	r0, [sp, #5]
	buf[2] = get_8b_to_16b(col_end);
  400e26:	f3c2 2307 	ubfx	r3, r2, #8, #8
  400e2a:	f88d 3006 	strb.w	r3, [sp, #6]
	buf[3] = get_0b_to_8b(col_end);
  400e2e:	f88d 2007 	strb.w	r2, [sp, #7]
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  400e32:	2204      	movs	r2, #4
  400e34:	eb0d 0102 	add.w	r1, sp, r2
  400e38:	202a      	movs	r0, #42	; 0x2a
  400e3a:	4c10      	ldr	r4, [pc, #64]	; (400e7c <ili9488_set_window+0x7c>)
  400e3c:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
  400e3e:	2200      	movs	r2, #0
  400e40:	4611      	mov	r1, r2
  400e42:	4610      	mov	r0, r2
  400e44:	47a0      	blx	r4

	/* Set Horizontal Address End Position */
	buf[0] = get_8b_to_16b(row_start);
  400e46:	f89d 300b 	ldrb.w	r3, [sp, #11]
  400e4a:	f88d 3004 	strb.w	r3, [sp, #4]
	buf[1] = get_0b_to_8b(row_start);
  400e4e:	f89d 300a 	ldrb.w	r3, [sp, #10]
  400e52:	f88d 3005 	strb.w	r3, [sp, #5]
	buf[2] = get_8b_to_16b(row_end);
  400e56:	f89d 3009 	ldrb.w	r3, [sp, #9]
  400e5a:	f88d 3006 	strb.w	r3, [sp, #6]
	buf[3] = get_0b_to_8b(row_end);
  400e5e:	f89d 3008 	ldrb.w	r3, [sp, #8]
  400e62:	f88d 3007 	strb.w	r3, [sp, #7]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  400e66:	2204      	movs	r2, #4
  400e68:	eb0d 0102 	add.w	r1, sp, r2
  400e6c:	202b      	movs	r0, #43	; 0x2b
  400e6e:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
  400e70:	2200      	movs	r2, #0
  400e72:	4611      	mov	r1, r2
  400e74:	4610      	mov	r0, r2
  400e76:	47a0      	blx	r4
}
  400e78:	b004      	add	sp, #16
  400e7a:	bd10      	pop	{r4, pc}
  400e7c:	00400d05 	.word	0x00400d05

00400e80 <ili9488_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili9488_display_on(void)
{
  400e80:	b508      	push	{r3, lr}
	ili9488_write_register(ILI9488_CMD_DISPLAY_ON, 0, 0);
  400e82:	2200      	movs	r2, #0
  400e84:	4611      	mov	r1, r2
  400e86:	2029      	movs	r0, #41	; 0x29
  400e88:	4b01      	ldr	r3, [pc, #4]	; (400e90 <ili9488_display_on+0x10>)
  400e8a:	4798      	blx	r3
  400e8c:	bd08      	pop	{r3, pc}
  400e8e:	bf00      	nop
  400e90:	00400d05 	.word	0x00400d05

00400e94 <ili9488_set_foreground_color>:
 * \brief Set foreground color.
 *
 * \param ul_color foreground color.
 */
void ili9488_set_foreground_color(uint32_t ul_color)
{
  400e94:	b410      	push	{r4}
		g_ul_pixel_cache[i] = ul_color;
	}
#endif
#ifdef ILI9488_SPIMODE
	for (i = 0; i < LCD_DATA_CACHE_SIZE * LCD_DATA_COLOR_UNIT; ) {
		g_ul_pixel_cache[i++] = ul_color>>16;
  400e96:	f3c0 4407 	ubfx	r4, r0, #16, #8
		g_ul_pixel_cache[i++] = ul_color>>8;
  400e9a:	f3c0 2107 	ubfx	r1, r0, #8, #8
  400e9e:	4b06      	ldr	r3, [pc, #24]	; (400eb8 <ili9488_set_foreground_color+0x24>)
  400ea0:	f503 62b4 	add.w	r2, r3, #1440	; 0x5a0
		g_ul_pixel_cache[i++] = ul_color>>16;
  400ea4:	701c      	strb	r4, [r3, #0]
		g_ul_pixel_cache[i++] = ul_color>>8;
  400ea6:	7059      	strb	r1, [r3, #1]
		g_ul_pixel_cache[i++] = ul_color&0xFF;
  400ea8:	7098      	strb	r0, [r3, #2]
  400eaa:	3303      	adds	r3, #3
	for (i = 0; i < LCD_DATA_CACHE_SIZE * LCD_DATA_COLOR_UNIT; ) {
  400eac:	4293      	cmp	r3, r2
  400eae:	d1f9      	bne.n	400ea4 <ili9488_set_foreground_color+0x10>
	}
#endif
}
  400eb0:	f85d 4b04 	ldr.w	r4, [sp], #4
  400eb4:	4770      	bx	lr
  400eb6:	bf00      	nop
  400eb8:	204009dc 	.word	0x204009dc

00400ebc <ili9488_set_cursor_position>:
 *
 * \param x X coordinate of upper-left corner on LCD.
 * \param y Y coordinate of upper-left corner on LCD.
 */
void ili9488_set_cursor_position(uint16_t x, uint16_t y)
{
  400ebc:	b510      	push	{r4, lr}
  400ebe:	b084      	sub	sp, #16
  400ec0:	f8ad 0006 	strh.w	r0, [sp, #6]
  400ec4:	f8ad 1004 	strh.w	r1, [sp, #4]
	uint32_t cnt = 0;

	ili9488_color_t buf[4];
	cnt = sizeof(buf)/sizeof(ili9488_color_t);

	buf[0] = get_8b_to_16b(x);
  400ec8:	0a03      	lsrs	r3, r0, #8
  400eca:	f88d 300c 	strb.w	r3, [sp, #12]
	buf[1] = get_0b_to_8b(x);
  400ece:	b2c0      	uxtb	r0, r0
  400ed0:	f88d 000d 	strb.w	r0, [sp, #13]
	buf[2] = get_8b_to_16b(x);
  400ed4:	f88d 300e 	strb.w	r3, [sp, #14]
	buf[3] = get_0b_to_8b(x);
  400ed8:	f88d 000f 	strb.w	r0, [sp, #15]
	ili9488_write_register(ILI9488_CMD_COLUMN_ADDRESS_SET, buf, cnt);
  400edc:	2204      	movs	r2, #4
  400ede:	a903      	add	r1, sp, #12
  400ee0:	202a      	movs	r0, #42	; 0x2a
  400ee2:	4c0e      	ldr	r4, [pc, #56]	; (400f1c <ili9488_set_cursor_position+0x60>)
  400ee4:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
  400ee6:	2200      	movs	r2, #0
  400ee8:	4611      	mov	r1, r2
  400eea:	4610      	mov	r0, r2
  400eec:	47a0      	blx	r4


	/* Set Horizontal Address End Position */
	buf[0] = get_8b_to_16b(y);
  400eee:	f89d 2005 	ldrb.w	r2, [sp, #5]
  400ef2:	f88d 200c 	strb.w	r2, [sp, #12]
	buf[1] = get_0b_to_8b(y);
  400ef6:	f89d 3004 	ldrb.w	r3, [sp, #4]
  400efa:	f88d 300d 	strb.w	r3, [sp, #13]
	buf[2] = get_8b_to_16b(y);
  400efe:	f88d 200e 	strb.w	r2, [sp, #14]
	buf[3] = get_0b_to_8b(y);
  400f02:	f88d 300f 	strb.w	r3, [sp, #15]
	ili9488_write_register(ILI9488_CMD_PAGE_ADDRESS_SET, buf, cnt);
  400f06:	2204      	movs	r2, #4
  400f08:	a903      	add	r1, sp, #12
  400f0a:	202b      	movs	r0, #43	; 0x2b
  400f0c:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NOP, 0, 0);
  400f0e:	2200      	movs	r2, #0
  400f10:	4611      	mov	r1, r2
  400f12:	4610      	mov	r0, r2
  400f14:	47a0      	blx	r4
}
  400f16:	b004      	add	sp, #16
  400f18:	bd10      	pop	{r4, pc}
  400f1a:	bf00      	nop
  400f1c:	00400d05 	.word	0x00400d05

00400f20 <ili9488_init>:
{
  400f20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  400f24:	b087      	sub	sp, #28
  400f26:	4681      	mov	r9, r0
	struct spi_device ILI9488_SPI_DEVICE = {
  400f28:	2703      	movs	r7, #3
  400f2a:	ae06      	add	r6, sp, #24
  400f2c:	f846 7d08 	str.w	r7, [r6, #-8]!
	spi_master_init(BOARD_ILI9488_SPI);
  400f30:	4d5d      	ldr	r5, [pc, #372]	; (4010a8 <ili9488_init+0x188>)
  400f32:	4628      	mov	r0, r5
  400f34:	4b5d      	ldr	r3, [pc, #372]	; (4010ac <ili9488_init+0x18c>)
  400f36:	4798      	blx	r3
	spi_master_setup_device(BOARD_ILI9488_SPI, &ILI9488_SPI_DEVICE, SPI_MODE_3, ILI9488_SPI_BAUDRATE, 0);
  400f38:	2400      	movs	r4, #0
  400f3a:	9400      	str	r4, [sp, #0]
  400f3c:	4b5c      	ldr	r3, [pc, #368]	; (4010b0 <ili9488_init+0x190>)
  400f3e:	463a      	mov	r2, r7
  400f40:	4631      	mov	r1, r6
  400f42:	4628      	mov	r0, r5
  400f44:	f8df 8198 	ldr.w	r8, [pc, #408]	; 4010e0 <ili9488_init+0x1c0>
  400f48:	47c0      	blx	r8
	spi_configure_cs_behavior(BOARD_ILI9488_SPI, BOARD_ILI9488_SPI_NPCS, SPI_CS_RISE_NO_TX);
  400f4a:	4622      	mov	r2, r4
  400f4c:	4639      	mov	r1, r7
  400f4e:	4628      	mov	r0, r5
  400f50:	4b58      	ldr	r3, [pc, #352]	; (4010b4 <ili9488_init+0x194>)
  400f52:	4798      	blx	r3
	spi_select_device(BOARD_ILI9488_SPI, &ILI9488_SPI_DEVICE);
  400f54:	4631      	mov	r1, r6
  400f56:	4628      	mov	r0, r5
  400f58:	4b57      	ldr	r3, [pc, #348]	; (4010b8 <ili9488_init+0x198>)
  400f5a:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400f5c:	2001      	movs	r0, #1
  400f5e:	6028      	str	r0, [r5, #0]
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  400f60:	6168      	str	r0, [r5, #20]
	ili9488_write_register(ILI9488_CMD_SOFTWARE_RESET, 0x0000, 0);
  400f62:	4622      	mov	r2, r4
  400f64:	4621      	mov	r1, r4
  400f66:	4e55      	ldr	r6, [pc, #340]	; (4010bc <ili9488_init+0x19c>)
  400f68:	47b0      	blx	r6
	ili9488_delay(200);
  400f6a:	20c8      	movs	r0, #200	; 0xc8
  400f6c:	4d54      	ldr	r5, [pc, #336]	; (4010c0 <ili9488_init+0x1a0>)
  400f6e:	47a8      	blx	r5
	ili9488_write_register(ILI9488_CMD_SLEEP_OUT, 0x0000, 0);
  400f70:	4622      	mov	r2, r4
  400f72:	4621      	mov	r1, r4
  400f74:	2011      	movs	r0, #17
  400f76:	47b0      	blx	r6
	ili9488_delay(200);
  400f78:	20c8      	movs	r0, #200	; 0xc8
  400f7a:	47a8      	blx	r5
	reg = 0x81;
  400f7c:	2381      	movs	r3, #129	; 0x81
  400f7e:	f88d 300a 	strb.w	r3, [sp, #10]
	param = 0x0;
  400f82:	f88d 400b 	strb.w	r4, [sp, #11]
  400f86:	2610      	movs	r6, #16
		ili9488_write_register(ILI9488_CMD_SPI_READ_SETTINGS, &reg, 1);
  400f88:	f04f 0801 	mov.w	r8, #1
  400f8c:	4f4b      	ldr	r7, [pc, #300]	; (4010bc <ili9488_init+0x19c>)
		for(j = 0; j < 0xFF; j++);
  400f8e:	4625      	mov	r5, r4
		ili9488_write_register(ILI9488_CMD_SPI_READ_SETTINGS, &reg, 1);
  400f90:	4642      	mov	r2, r8
  400f92:	f10d 010a 	add.w	r1, sp, #10
  400f96:	20fb      	movs	r0, #251	; 0xfb
  400f98:	47b8      	blx	r7
		reg++;
  400f9a:	f89d 300a 	ldrb.w	r3, [sp, #10]
  400f9e:	3301      	adds	r3, #1
  400fa0:	f88d 300a 	strb.w	r3, [sp, #10]
		for(j = 0; j < 0xFF; j++);
  400fa4:	9503      	str	r5, [sp, #12]
  400fa6:	9b03      	ldr	r3, [sp, #12]
  400fa8:	2bfe      	cmp	r3, #254	; 0xfe
  400faa:	d805      	bhi.n	400fb8 <ili9488_init+0x98>
  400fac:	9b03      	ldr	r3, [sp, #12]
  400fae:	3301      	adds	r3, #1
  400fb0:	9303      	str	r3, [sp, #12]
  400fb2:	9b03      	ldr	r3, [sp, #12]
  400fb4:	2bfe      	cmp	r3, #254	; 0xfe
  400fb6:	d9f9      	bls.n	400fac <ili9488_init+0x8c>
		ili9488_write_register(ILI9488_CMD_READ_ID4, 0, 0);
  400fb8:	462a      	mov	r2, r5
  400fba:	4629      	mov	r1, r5
  400fbc:	20d3      	movs	r0, #211	; 0xd3
  400fbe:	47b8      	blx	r7
			pio_set_pin_high(LCD_SPI_CDS_PIO);
  400fc0:	2006      	movs	r0, #6
  400fc2:	4b40      	ldr	r3, [pc, #256]	; (4010c4 <ili9488_init+0x1a4>)
  400fc4:	4798      	blx	r3
			spi_read_packet(BOARD_ILI9488_SPI, &chipidBuf, 1);
  400fc6:	4642      	mov	r2, r8
  400fc8:	f10d 0109 	add.w	r1, sp, #9
  400fcc:	4836      	ldr	r0, [pc, #216]	; (4010a8 <ili9488_init+0x188>)
  400fce:	4b3e      	ldr	r3, [pc, #248]	; (4010c8 <ili9488_init+0x1a8>)
  400fd0:	4798      	blx	r3
			for(j = 0; j < 0xFF; j++);
  400fd2:	9503      	str	r5, [sp, #12]
  400fd4:	9b03      	ldr	r3, [sp, #12]
  400fd6:	2bfe      	cmp	r3, #254	; 0xfe
  400fd8:	d805      	bhi.n	400fe6 <ili9488_init+0xc6>
  400fda:	9b03      	ldr	r3, [sp, #12]
  400fdc:	3301      	adds	r3, #1
  400fde:	9303      	str	r3, [sp, #12]
  400fe0:	9b03      	ldr	r3, [sp, #12]
  400fe2:	2bfe      	cmp	r3, #254	; 0xfe
  400fe4:	d9f9      	bls.n	400fda <ili9488_init+0xba>
		chipid |= (chipidBuf & 0xFF) << ((i - 1) << 3);
  400fe6:	f89d 3009 	ldrb.w	r3, [sp, #9]
  400fea:	40b3      	lsls	r3, r6
  400fec:	431c      	orrs	r4, r3
		ili9488_write_register(ILI9488_CMD_SPI_READ_SETTINGS, &param, 1);
  400fee:	4642      	mov	r2, r8
  400ff0:	f10d 010b 	add.w	r1, sp, #11
  400ff4:	20fb      	movs	r0, #251	; 0xfb
  400ff6:	47b8      	blx	r7
		for(j = 0; j < 0xFFF; j++);
  400ff8:	9503      	str	r5, [sp, #12]
  400ffa:	9a03      	ldr	r2, [sp, #12]
  400ffc:	f640 73fe 	movw	r3, #4094	; 0xffe
  401000:	429a      	cmp	r2, r3
  401002:	d806      	bhi.n	401012 <ili9488_init+0xf2>
  401004:	461a      	mov	r2, r3
  401006:	9b03      	ldr	r3, [sp, #12]
  401008:	3301      	adds	r3, #1
  40100a:	9303      	str	r3, [sp, #12]
  40100c:	9b03      	ldr	r3, [sp, #12]
  40100e:	4293      	cmp	r3, r2
  401010:	d9f9      	bls.n	401006 <ili9488_init+0xe6>
  401012:	3e08      	subs	r6, #8
	for (i = 3; i > 0; i--) {
  401014:	f116 0f08 	cmn.w	r6, #8
  401018:	d1ba      	bne.n	400f90 <ili9488_init+0x70>
	if (chipid != ILI9488_DEVICE_CODE) {
  40101a:	f249 4388 	movw	r3, #38024	; 0x9488
  40101e:	429c      	cmp	r4, r3
  401020:	d003      	beq.n	40102a <ili9488_init+0x10a>
		return 1;
  401022:	2001      	movs	r0, #1
}
  401024:	b007      	add	sp, #28
  401026:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	param = 0x48;
  40102a:	ad06      	add	r5, sp, #24
  40102c:	2348      	movs	r3, #72	; 0x48
  40102e:	f805 3d01 	strb.w	r3, [r5, #-1]!
	ili9488_write_register(ILI9488_CMD_MEMORY_ACCESS_CONTROL, &param, 1);
  401032:	2201      	movs	r2, #1
  401034:	4629      	mov	r1, r5
  401036:	2036      	movs	r0, #54	; 0x36
  401038:	4e20      	ldr	r6, [pc, #128]	; (4010bc <ili9488_init+0x19c>)
  40103a:	47b0      	blx	r6
	ili9488_delay(100);
  40103c:	2064      	movs	r0, #100	; 0x64
  40103e:	4c20      	ldr	r4, [pc, #128]	; (4010c0 <ili9488_init+0x1a0>)
  401040:	47a0      	blx	r4
	param = 0x04;
  401042:	2304      	movs	r3, #4
  401044:	f88d 3017 	strb.w	r3, [sp, #23]
	ili9488_write_register(ILI9488_CMD_CABC_CONTROL_9, &param, 1);
  401048:	2201      	movs	r2, #1
  40104a:	4629      	mov	r1, r5
  40104c:	20cf      	movs	r0, #207	; 0xcf
  40104e:	47b0      	blx	r6
	ili9488_delay(100);
  401050:	2064      	movs	r0, #100	; 0x64
  401052:	47a0      	blx	r4
	param = 0x06;
  401054:	2306      	movs	r3, #6
  401056:	f88d 3017 	strb.w	r3, [sp, #23]
	ili9488_write_register(ILI9488_CMD_COLMOD_PIXEL_FORMAT_SET, &param, 1);
  40105a:	2201      	movs	r2, #1
  40105c:	4629      	mov	r1, r5
  40105e:	203a      	movs	r0, #58	; 0x3a
  401060:	47b0      	blx	r6
	ili9488_delay(100);
  401062:	2064      	movs	r0, #100	; 0x64
  401064:	47a0      	blx	r4
	ili9488_write_register(ILI9488_CMD_NORMAL_DISP_MODE_ON, 0, 0);
  401066:	2200      	movs	r2, #0
  401068:	4611      	mov	r1, r2
  40106a:	2013      	movs	r0, #19
  40106c:	47b0      	blx	r6
	ili9488_delay(100);
  40106e:	2064      	movs	r0, #100	; 0x64
  401070:	47a0      	blx	r4
	ili9488_display_on();
  401072:	4b16      	ldr	r3, [pc, #88]	; (4010cc <ili9488_init+0x1ac>)
  401074:	4798      	blx	r3
	ili9488_delay(100);
  401076:	2064      	movs	r0, #100	; 0x64
  401078:	47a0      	blx	r4
	ili9488_set_display_direction(PORTRAIT);
  40107a:	2001      	movs	r0, #1
  40107c:	4b14      	ldr	r3, [pc, #80]	; (4010d0 <ili9488_init+0x1b0>)
  40107e:	4798      	blx	r3
	ili9488_delay(100);
  401080:	2064      	movs	r0, #100	; 0x64
  401082:	47a0      	blx	r4
	ili9488_set_window(0, 0,p_opt->ul_width,p_opt->ul_height);
  401084:	f8b9 3004 	ldrh.w	r3, [r9, #4]
  401088:	f8b9 2000 	ldrh.w	r2, [r9]
  40108c:	2100      	movs	r1, #0
  40108e:	4608      	mov	r0, r1
  401090:	4c10      	ldr	r4, [pc, #64]	; (4010d4 <ili9488_init+0x1b4>)
  401092:	47a0      	blx	r4
	ili9488_set_foreground_color(p_opt->foreground_color);
  401094:	f8d9 0008 	ldr.w	r0, [r9, #8]
  401098:	4b0f      	ldr	r3, [pc, #60]	; (4010d8 <ili9488_init+0x1b8>)
  40109a:	4798      	blx	r3
	ili9488_set_cursor_position(0, 0);
  40109c:	2100      	movs	r1, #0
  40109e:	4608      	mov	r0, r1
  4010a0:	4b0e      	ldr	r3, [pc, #56]	; (4010dc <ili9488_init+0x1bc>)
  4010a2:	4798      	blx	r3
	return 0;
  4010a4:	2000      	movs	r0, #0
  4010a6:	e7bd      	b.n	401024 <ili9488_init+0x104>
  4010a8:	40008000 	.word	0x40008000
  4010ac:	00400799 	.word	0x00400799
  4010b0:	01312d00 	.word	0x01312d00
  4010b4:	004018b5 	.word	0x004018b5
  4010b8:	0040086d 	.word	0x0040086d
  4010bc:	00400d05 	.word	0x00400d05
  4010c0:	00400db9 	.word	0x00400db9
  4010c4:	00401495 	.word	0x00401495
  4010c8:	004008d3 	.word	0x004008d3
  4010cc:	00400e81 	.word	0x00400e81
  4010d0:	00400dd5 	.word	0x00400dd5
  4010d4:	00400e01 	.word	0x00400e01
  4010d8:	00400e95 	.word	0x00400e95
  4010dc:	00400ebd 	.word	0x00400ebd
  4010e0:	004007ed 	.word	0x004007ed

004010e4 <ili9488_draw_pixel>:
 *
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili9488_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
	if ((ul_x >= ILI9488_LCD_WIDTH) || (ul_y >= ILI9488_LCD_HEIGHT)) {
  4010e4:	f5b0 7ff0 	cmp.w	r0, #480	; 0x1e0
  4010e8:	d20f      	bcs.n	40110a <ili9488_draw_pixel+0x26>
  4010ea:	f5b1 7fa0 	cmp.w	r1, #320	; 0x140
  4010ee:	d20c      	bcs.n	40110a <ili9488_draw_pixel+0x26>
{
  4010f0:	b508      	push	{r3, lr}
		return 1;
	}

	/* Set cursor */
	ili9488_set_cursor_position(ul_x, ul_y);
  4010f2:	b289      	uxth	r1, r1
  4010f4:	b280      	uxth	r0, r0
  4010f6:	4b06      	ldr	r3, [pc, #24]	; (401110 <ili9488_draw_pixel+0x2c>)
  4010f8:	4798      	blx	r3

	/* Prepare to write in GRAM */
	ili9488_write_ram_prepare();
  4010fa:	4b06      	ldr	r3, [pc, #24]	; (401114 <ili9488_draw_pixel+0x30>)
  4010fc:	4798      	blx	r3
	ili9488_write_ram_buffer(g_ul_pixel_cache, LCD_DATA_COLOR_UNIT);
  4010fe:	2103      	movs	r1, #3
  401100:	4805      	ldr	r0, [pc, #20]	; (401118 <ili9488_draw_pixel+0x34>)
  401102:	4b06      	ldr	r3, [pc, #24]	; (40111c <ili9488_draw_pixel+0x38>)
  401104:	4798      	blx	r3
	return 0;
  401106:	2000      	movs	r0, #0
  401108:	bd08      	pop	{r3, pc}
		return 1;
  40110a:	2001      	movs	r0, #1
  40110c:	4770      	bx	lr
  40110e:	bf00      	nop
  401110:	00400ebd 	.word	0x00400ebd
  401114:	00400cc9 	.word	0x00400cc9
  401118:	204009dc 	.word	0x204009dc
  40111c:	00400d79 	.word	0x00400d79

00401120 <ili9488_draw_filled_rectangle>:
 * \param ul_x2 X coordinate of lower-right corner on LCD.
 * \param ul_y2 Y coordinate of lower-right corner on LCD.
 */
void ili9488_draw_filled_rectangle(uint32_t ul_x1, uint32_t ul_y1,
		uint32_t ul_x2, uint32_t ul_y2)
{
  401120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401124:	b084      	sub	sp, #16
  401126:	9003      	str	r0, [sp, #12]
  401128:	9102      	str	r1, [sp, #8]
  40112a:	9201      	str	r2, [sp, #4]
  40112c:	aa04      	add	r2, sp, #16
  40112e:	f842 3d10 	str.w	r3, [r2, #-16]!
	uint32_t size, blocks;

	/* Swap coordinates if necessary */
	ili9488_check_box_coordinates(&ul_x1, &ul_y1, &ul_x2, &ul_y2);
  401132:	4613      	mov	r3, r2
  401134:	aa01      	add	r2, sp, #4
  401136:	a902      	add	r1, sp, #8
  401138:	a803      	add	r0, sp, #12
  40113a:	4c22      	ldr	r4, [pc, #136]	; (4011c4 <ili9488_draw_filled_rectangle+0xa4>)
  40113c:	47a0      	blx	r4

	/* Determine the refresh window area */
	ili9488_set_window(ul_x1, ul_y1, (ul_x2 - ul_x1) + 1, (ul_y2 - ul_y1) + 1);
  40113e:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  401142:	f8bd 1008 	ldrh.w	r1, [sp, #8]
  401146:	9b00      	ldr	r3, [sp, #0]
  401148:	3301      	adds	r3, #1
  40114a:	1a5b      	subs	r3, r3, r1
  40114c:	9a01      	ldr	r2, [sp, #4]
  40114e:	3201      	adds	r2, #1
  401150:	1a12      	subs	r2, r2, r0
  401152:	b29b      	uxth	r3, r3
  401154:	b292      	uxth	r2, r2
  401156:	4c1c      	ldr	r4, [pc, #112]	; (4011c8 <ili9488_draw_filled_rectangle+0xa8>)
  401158:	47a0      	blx	r4

	/* Prepare to write in GRAM */
	ili9488_write_ram_prepare();
  40115a:	4b1c      	ldr	r3, [pc, #112]	; (4011cc <ili9488_draw_filled_rectangle+0xac>)
  40115c:	4798      	blx	r3

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);
  40115e:	9903      	ldr	r1, [sp, #12]
  401160:	9d01      	ldr	r5, [sp, #4]
  401162:	1a69      	subs	r1, r5, r1
  401164:	9d00      	ldr	r5, [sp, #0]
  401166:	3501      	adds	r5, #1
  401168:	9b02      	ldr	r3, [sp, #8]
  40116a:	1aed      	subs	r5, r5, r3
  40116c:	fb01 5505 	mla	r5, r1, r5, r5
	/* Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
  401170:	4b17      	ldr	r3, [pc, #92]	; (4011d0 <ili9488_draw_filled_rectangle+0xb0>)
  401172:	fba3 2305 	umull	r2, r3, r3, r5
  401176:	0a1b      	lsrs	r3, r3, #8
	while (blocks--) {
  401178:	b163      	cbz	r3, 401194 <ili9488_draw_filled_rectangle+0x74>
  40117a:	1e5c      	subs	r4, r3, #1
		ili9488_write_ram_buffer(g_ul_pixel_cache, LCD_DATA_CACHE_SIZE * LCD_DATA_COLOR_UNIT);
  40117c:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4011d8 <ili9488_draw_filled_rectangle+0xb8>
  401180:	f44f 67b4 	mov.w	r7, #1440	; 0x5a0
  401184:	4e13      	ldr	r6, [pc, #76]	; (4011d4 <ili9488_draw_filled_rectangle+0xb4>)
  401186:	4639      	mov	r1, r7
  401188:	4640      	mov	r0, r8
  40118a:	47b0      	blx	r6
	while (blocks--) {
  40118c:	3c01      	subs	r4, #1
  40118e:	f1b4 3fff 	cmp.w	r4, #4294967295
  401192:	d1f8      	bne.n	401186 <ili9488_draw_filled_rectangle+0x66>
	}

	/* Send remaining pixels */
	ili9488_write_ram_buffer(g_ul_pixel_cache, (size % LCD_DATA_CACHE_SIZE) * LCD_DATA_COLOR_UNIT);
  401194:	490e      	ldr	r1, [pc, #56]	; (4011d0 <ili9488_draw_filled_rectangle+0xb0>)
  401196:	fba1 3105 	umull	r3, r1, r1, r5
  40119a:	0a09      	lsrs	r1, r1, #8
  40119c:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
  4011a0:	eba5 1141 	sub.w	r1, r5, r1, lsl #5
  4011a4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
  4011a8:	480b      	ldr	r0, [pc, #44]	; (4011d8 <ili9488_draw_filled_rectangle+0xb8>)
  4011aa:	4b0a      	ldr	r3, [pc, #40]	; (4011d4 <ili9488_draw_filled_rectangle+0xb4>)
  4011ac:	4798      	blx	r3

	/* Reset the refresh window area */
	ili9488_set_window(0, 0, ILI9488_LCD_WIDTH, ILI9488_LCD_HEIGHT);
  4011ae:	f44f 73a0 	mov.w	r3, #320	; 0x140
  4011b2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  4011b6:	2100      	movs	r1, #0
  4011b8:	4608      	mov	r0, r1
  4011ba:	4c03      	ldr	r4, [pc, #12]	; (4011c8 <ili9488_draw_filled_rectangle+0xa8>)
  4011bc:	47a0      	blx	r4

}
  4011be:	b004      	add	sp, #16
  4011c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4011c4:	00400c71 	.word	0x00400c71
  4011c8:	00400e01 	.word	0x00400e01
  4011cc:	00400cc9 	.word	0x00400cc9
  4011d0:	88888889 	.word	0x88888889
  4011d4:	00400d79 	.word	0x00400d79
  4011d8:	204009dc 	.word	0x204009dc

004011dc <ili9488_draw_string>:
 * \param ul_x X coordinate of string top-left corner.
 * \param ul_y Y coordinate of string top-left corner.
 * \param p_str String to display.
 */
void ili9488_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
  4011dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4011e0:	b085      	sub	sp, #20
  4011e2:	9003      	str	r0, [sp, #12]
  4011e4:	9202      	str	r2, [sp, #8]
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  4011e6:	7813      	ldrb	r3, [r2, #0]
  4011e8:	2b00      	cmp	r3, #0
  4011ea:	d048      	beq.n	40127e <ili9488_draw_string+0xa2>
  4011ec:	468b      	mov	fp, r1
  4011ee:	9001      	str	r0, [sp, #4]
				ili9488_draw_pixel(ul_x + col, ul_y + row);
  4011f0:	f8df 8094 	ldr.w	r8, [pc, #148]	; 401288 <ili9488_draw_string+0xac>
  4011f4:	e033      	b.n	40125e <ili9488_draw_string+0x82>
		/* If newline, jump to the next line (font height + 2) */
		if (*p_str == '\n') {
			ul_y += gfont.height + 2;
  4011f6:	f10b 0b10 	add.w	fp, fp, #16
			ul_x = xorg;
  4011fa:	9b03      	ldr	r3, [sp, #12]
  4011fc:	9301      	str	r3, [sp, #4]
  4011fe:	e029      	b.n	401254 <ili9488_draw_string+0x78>
  401200:	3c01      	subs	r4, #1
		for (row = 0; row < 8; row++) {
  401202:	f1b4 3fff 	cmp.w	r4, #4294967295
  401206:	d009      	beq.n	40121c <ili9488_draw_string+0x40>
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
  401208:	782b      	ldrb	r3, [r5, #0]
  40120a:	4123      	asrs	r3, r4
  40120c:	f013 0f01 	tst.w	r3, #1
  401210:	d0f6      	beq.n	401200 <ili9488_draw_string+0x24>
				ili9488_draw_pixel(ul_x + col, ul_y + row);
  401212:	ebaa 0104 	sub.w	r1, sl, r4
  401216:	4630      	mov	r0, r6
  401218:	47c0      	blx	r8
  40121a:	e7f1      	b.n	401200 <ili9488_draw_string+0x24>
		for (row = 0; row < 8; row++) {
  40121c:	2407      	movs	r4, #7
				ili9488_draw_pixel(ul_x + col, ul_y + row + 8);
  40121e:	f10b 090f 	add.w	r9, fp, #15
  401222:	e002      	b.n	40122a <ili9488_draw_string+0x4e>
  401224:	3c01      	subs	r4, #1
		for (row = 0; row < 6; row++) {
  401226:	2c01      	cmp	r4, #1
  401228:	d009      	beq.n	40123e <ili9488_draw_string+0x62>
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
  40122a:	787b      	ldrb	r3, [r7, #1]
  40122c:	4123      	asrs	r3, r4
  40122e:	f013 0f01 	tst.w	r3, #1
  401232:	d0f7      	beq.n	401224 <ili9488_draw_string+0x48>
				ili9488_draw_pixel(ul_x + col, ul_y + row + 8);
  401234:	eba9 0104 	sub.w	r1, r9, r4
  401238:	4630      	mov	r0, r6
  40123a:	47c0      	blx	r8
  40123c:	e7f2      	b.n	401224 <ili9488_draw_string+0x48>
  40123e:	3502      	adds	r5, #2
  401240:	3601      	adds	r6, #1
	for (col = 0; col < 10; col++) {
  401242:	9b00      	ldr	r3, [sp, #0]
  401244:	42b3      	cmp	r3, r6
  401246:	d002      	beq.n	40124e <ili9488_draw_string+0x72>
	offset = ((uint32_t)uc_c - 0x20) * 20;
  401248:	2407      	movs	r4, #7
  40124a:	462f      	mov	r7, r5
  40124c:	e7dc      	b.n	401208 <ili9488_draw_string+0x2c>
		} else {
			/* Draw the character and place cursor right after (font width + 2) */
			ili9488_draw_char(ul_x, ul_y, *p_str);
			ul_x += gfont.width + 2;
  40124e:	9b01      	ldr	r3, [sp, #4]
  401250:	330c      	adds	r3, #12
  401252:	9301      	str	r3, [sp, #4]
	while (*p_str != 0) {
  401254:	9a02      	ldr	r2, [sp, #8]
  401256:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  40125a:	9202      	str	r2, [sp, #8]
  40125c:	b17b      	cbz	r3, 40127e <ili9488_draw_string+0xa2>
		if (*p_str == '\n') {
  40125e:	2b0a      	cmp	r3, #10
  401260:	d0c9      	beq.n	4011f6 <ili9488_draw_string+0x1a>
	offset = ((uint32_t)uc_c - 0x20) * 20;
  401262:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  401266:	4d07      	ldr	r5, [pc, #28]	; (401284 <ili9488_draw_string+0xa8>)
  401268:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  40126c:	f5a3 7520 	sub.w	r5, r3, #640	; 0x280
  401270:	9e01      	ldr	r6, [sp, #4]
  401272:	4633      	mov	r3, r6
  401274:	330a      	adds	r3, #10
  401276:	9300      	str	r3, [sp, #0]
				ili9488_draw_pixel(ul_x + col, ul_y + row);
  401278:	f10b 0a07 	add.w	sl, fp, #7
  40127c:	e7e4      	b.n	401248 <ili9488_draw_string+0x6c>
		}
		p_str++;
	}
}
  40127e:	b005      	add	sp, #20
  401280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401284:	00408b7c 	.word	0x00408b7c
  401288:	004010e5 	.word	0x004010e5

0040128c <ili9488_draw_pixmap>:
 * \param ul_height height of the picture.
 * \param p_ul_pixmap pixmap of the image.
 */
void ili9488_draw_pixmap(uint32_t ul_x, uint32_t ul_y, uint32_t ul_width,
		uint32_t ul_height, const ili9488_color_t *p_ul_pixmap)
{
  40128c:	b510      	push	{r4, lr}
  40128e:	b084      	sub	sp, #16
	uint32_t size;
	uint32_t dwX1, dwY1, dwX2, dwY2;
	dwX1 = ul_x;
  401290:	9003      	str	r0, [sp, #12]
	dwY1 = ul_y;
  401292:	9102      	str	r1, [sp, #8]
	dwX2 = ul_x + ul_width - 1;
  401294:	3a01      	subs	r2, #1
  401296:	4410      	add	r0, r2
  401298:	9001      	str	r0, [sp, #4]
	dwY2 = ul_y + ul_height - 1;
  40129a:	3b01      	subs	r3, #1
  40129c:	4419      	add	r1, r3
  40129e:	ab04      	add	r3, sp, #16
  4012a0:	f843 1d10 	str.w	r1, [r3, #-16]!

	/* Swap coordinates if necessary */
	ili9488_check_box_coordinates(&dwX1, &dwY1, &dwX2, &dwY2);
  4012a4:	aa01      	add	r2, sp, #4
  4012a6:	a902      	add	r1, sp, #8
  4012a8:	a803      	add	r0, sp, #12
  4012aa:	4c13      	ldr	r4, [pc, #76]	; (4012f8 <ili9488_draw_pixmap+0x6c>)
  4012ac:	47a0      	blx	r4

	/* Determine the refresh window area */
	ili9488_set_window(dwX1, dwY1, (dwX2 - dwX1 + 1), (dwY2 - dwY1 + 1));
  4012ae:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  4012b2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
  4012b6:	9b00      	ldr	r3, [sp, #0]
  4012b8:	3301      	adds	r3, #1
  4012ba:	1a5b      	subs	r3, r3, r1
  4012bc:	9a01      	ldr	r2, [sp, #4]
  4012be:	3201      	adds	r2, #1
  4012c0:	1a12      	subs	r2, r2, r0
  4012c2:	b29b      	uxth	r3, r3
  4012c4:	b292      	uxth	r2, r2
  4012c6:	4c0d      	ldr	r4, [pc, #52]	; (4012fc <ili9488_draw_pixmap+0x70>)
  4012c8:	47a0      	blx	r4

	size = (dwX2 - dwX1) * (dwY2 - dwY1);
  4012ca:	9903      	ldr	r1, [sp, #12]
  4012cc:	9a01      	ldr	r2, [sp, #4]
  4012ce:	1a51      	subs	r1, r2, r1
  4012d0:	9a02      	ldr	r2, [sp, #8]
  4012d2:	9b00      	ldr	r3, [sp, #0]
  4012d4:	1a9a      	subs	r2, r3, r2
  4012d6:	fb02 f201 	mul.w	r2, r2, r1

	ili9488_write_register(ILI9488_CMD_MEMORY_WRITE, p_ul_pixmap, size * LCD_DATA_COLOR_UNIT);
  4012da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
  4012de:	9906      	ldr	r1, [sp, #24]
  4012e0:	202c      	movs	r0, #44	; 0x2c
  4012e2:	4b07      	ldr	r3, [pc, #28]	; (401300 <ili9488_draw_pixmap+0x74>)
  4012e4:	4798      	blx	r3

	/* Reset the refresh window area */
	ili9488_set_window(0, 0, ILI9488_LCD_WIDTH, ILI9488_LCD_HEIGHT);
  4012e6:	f44f 73a0 	mov.w	r3, #320	; 0x140
  4012ea:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  4012ee:	2100      	movs	r1, #0
  4012f0:	4608      	mov	r0, r1
  4012f2:	47a0      	blx	r4
}
  4012f4:	b004      	add	sp, #16
  4012f6:	bd10      	pop	{r4, pc}
  4012f8:	00400c71 	.word	0x00400c71
  4012fc:	00400e01 	.word	0x00400e01
  401300:	00400d05 	.word	0x00400d05

00401304 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  401304:	6301      	str	r1, [r0, #48]	; 0x30
  401306:	4770      	bx	lr

00401308 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  401308:	6341      	str	r1, [r0, #52]	; 0x34
  40130a:	4770      	bx	lr

0040130c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  40130c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  40130e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  401312:	d03a      	beq.n	40138a <pio_set_peripheral+0x7e>
  401314:	d813      	bhi.n	40133e <pio_set_peripheral+0x32>
  401316:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  40131a:	d025      	beq.n	401368 <pio_set_peripheral+0x5c>
  40131c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  401320:	d10a      	bne.n	401338 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  401322:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  401324:	4313      	orrs	r3, r2
  401326:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  401328:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40132a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40132c:	400b      	ands	r3, r1
  40132e:	ea23 0302 	bic.w	r3, r3, r2
  401332:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  401334:	6042      	str	r2, [r0, #4]
  401336:	4770      	bx	lr
	switch (ul_type) {
  401338:	2900      	cmp	r1, #0
  40133a:	d1fb      	bne.n	401334 <pio_set_peripheral+0x28>
  40133c:	4770      	bx	lr
  40133e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  401342:	d021      	beq.n	401388 <pio_set_peripheral+0x7c>
  401344:	d809      	bhi.n	40135a <pio_set_peripheral+0x4e>
  401346:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  40134a:	d1f3      	bne.n	401334 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  40134c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40134e:	4313      	orrs	r3, r2
  401350:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  401352:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  401354:	4313      	orrs	r3, r2
  401356:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  401358:	e7ec      	b.n	401334 <pio_set_peripheral+0x28>
	switch (ul_type) {
  40135a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  40135e:	d013      	beq.n	401388 <pio_set_peripheral+0x7c>
  401360:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  401364:	d010      	beq.n	401388 <pio_set_peripheral+0x7c>
  401366:	e7e5      	b.n	401334 <pio_set_peripheral+0x28>
{
  401368:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  40136a:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40136c:	6f04      	ldr	r4, [r0, #112]	; 0x70
  40136e:	43d3      	mvns	r3, r2
  401370:	4021      	ands	r1, r4
  401372:	461c      	mov	r4, r3
  401374:	4019      	ands	r1, r3
  401376:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  401378:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40137a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  40137c:	400b      	ands	r3, r1
  40137e:	4023      	ands	r3, r4
  401380:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  401382:	6042      	str	r2, [r0, #4]
}
  401384:	f85d 4b04 	ldr.w	r4, [sp], #4
  401388:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  40138a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  40138c:	6f01      	ldr	r1, [r0, #112]	; 0x70
  40138e:	400b      	ands	r3, r1
  401390:	ea23 0302 	bic.w	r3, r3, r2
  401394:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  401396:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  401398:	4313      	orrs	r3, r2
  40139a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  40139c:	e7ca      	b.n	401334 <pio_set_peripheral+0x28>

0040139e <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40139e:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  4013a0:	f012 0f01 	tst.w	r2, #1
  4013a4:	d10d      	bne.n	4013c2 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  4013a6:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  4013a8:	f012 0f0a 	tst.w	r2, #10
  4013ac:	d00b      	beq.n	4013c6 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  4013ae:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  4013b0:	f012 0f02 	tst.w	r2, #2
  4013b4:	d109      	bne.n	4013ca <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  4013b6:	f012 0f08 	tst.w	r2, #8
  4013ba:	d008      	beq.n	4013ce <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  4013bc:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  4013c0:	e005      	b.n	4013ce <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  4013c2:	6641      	str	r1, [r0, #100]	; 0x64
  4013c4:	e7f0      	b.n	4013a8 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  4013c6:	6241      	str	r1, [r0, #36]	; 0x24
  4013c8:	e7f2      	b.n	4013b0 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  4013ca:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  4013ce:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  4013d0:	6001      	str	r1, [r0, #0]
  4013d2:	4770      	bx	lr

004013d4 <pio_set_output>:
{
  4013d4:	b410      	push	{r4}
  4013d6:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  4013d8:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  4013da:	b94c      	cbnz	r4, 4013f0 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  4013dc:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  4013de:	b14b      	cbz	r3, 4013f4 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  4013e0:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  4013e2:	b94a      	cbnz	r2, 4013f8 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  4013e4:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  4013e6:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  4013e8:	6001      	str	r1, [r0, #0]
}
  4013ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  4013ee:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  4013f0:	6641      	str	r1, [r0, #100]	; 0x64
  4013f2:	e7f4      	b.n	4013de <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  4013f4:	6541      	str	r1, [r0, #84]	; 0x54
  4013f6:	e7f4      	b.n	4013e2 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  4013f8:	6301      	str	r1, [r0, #48]	; 0x30
  4013fa:	e7f4      	b.n	4013e6 <pio_set_output+0x12>

004013fc <pio_configure>:
{
  4013fc:	b570      	push	{r4, r5, r6, lr}
  4013fe:	b082      	sub	sp, #8
  401400:	4605      	mov	r5, r0
  401402:	4616      	mov	r6, r2
  401404:	461c      	mov	r4, r3
	switch (ul_type) {
  401406:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  40140a:	d014      	beq.n	401436 <pio_configure+0x3a>
  40140c:	d90a      	bls.n	401424 <pio_configure+0x28>
  40140e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  401412:	d024      	beq.n	40145e <pio_configure+0x62>
  401414:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  401418:	d021      	beq.n	40145e <pio_configure+0x62>
  40141a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  40141e:	d017      	beq.n	401450 <pio_configure+0x54>
		return 0;
  401420:	2000      	movs	r0, #0
  401422:	e01a      	b.n	40145a <pio_configure+0x5e>
	switch (ul_type) {
  401424:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  401428:	d005      	beq.n	401436 <pio_configure+0x3a>
  40142a:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  40142e:	d002      	beq.n	401436 <pio_configure+0x3a>
  401430:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  401434:	d1f4      	bne.n	401420 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  401436:	4632      	mov	r2, r6
  401438:	4628      	mov	r0, r5
  40143a:	4b11      	ldr	r3, [pc, #68]	; (401480 <pio_configure+0x84>)
  40143c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40143e:	f014 0f01 	tst.w	r4, #1
  401442:	d102      	bne.n	40144a <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  401444:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  401446:	2001      	movs	r0, #1
  401448:	e007      	b.n	40145a <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  40144a:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  40144c:	2001      	movs	r0, #1
  40144e:	e004      	b.n	40145a <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  401450:	461a      	mov	r2, r3
  401452:	4631      	mov	r1, r6
  401454:	4b0b      	ldr	r3, [pc, #44]	; (401484 <pio_configure+0x88>)
  401456:	4798      	blx	r3
	return 1;
  401458:	2001      	movs	r0, #1
}
  40145a:	b002      	add	sp, #8
  40145c:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  40145e:	f004 0301 	and.w	r3, r4, #1
  401462:	9300      	str	r3, [sp, #0]
  401464:	f3c4 0380 	ubfx	r3, r4, #2, #1
  401468:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  40146c:	bf14      	ite	ne
  40146e:	2200      	movne	r2, #0
  401470:	2201      	moveq	r2, #1
  401472:	4631      	mov	r1, r6
  401474:	4628      	mov	r0, r5
  401476:	4c04      	ldr	r4, [pc, #16]	; (401488 <pio_configure+0x8c>)
  401478:	47a0      	blx	r4
	return 1;
  40147a:	2001      	movs	r0, #1
		break;
  40147c:	e7ed      	b.n	40145a <pio_configure+0x5e>
  40147e:	bf00      	nop
  401480:	0040130d 	.word	0x0040130d
  401484:	0040139f 	.word	0x0040139f
  401488:	004013d5 	.word	0x004013d5

0040148c <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  40148c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  40148e:	4770      	bx	lr

00401490 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  401490:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  401492:	4770      	bx	lr

00401494 <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  401494:	4b05      	ldr	r3, [pc, #20]	; (4014ac <pio_set_pin_high+0x18>)
  401496:	eb03 1350 	add.w	r3, r3, r0, lsr #5
  40149a:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  40149c:	f000 001f 	and.w	r0, r0, #31
  4014a0:	2201      	movs	r2, #1
  4014a2:	fa02 f000 	lsl.w	r0, r2, r0
  4014a6:	6318      	str	r0, [r3, #48]	; 0x30
  4014a8:	4770      	bx	lr
  4014aa:	bf00      	nop
  4014ac:	00200707 	.word	0x00200707

004014b0 <pio_set_pin_low>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4014b0:	4b05      	ldr	r3, [pc, #20]	; (4014c8 <pio_set_pin_low+0x18>)
  4014b2:	eb03 1350 	add.w	r3, r3, r0, lsr #5
  4014b6:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  4014b8:	f000 001f 	and.w	r0, r0, #31
  4014bc:	2201      	movs	r2, #1
  4014be:	fa02 f000 	lsl.w	r0, r2, r0
  4014c2:	6358      	str	r0, [r3, #52]	; 0x34
  4014c4:	4770      	bx	lr
  4014c6:	bf00      	nop
  4014c8:	00200707 	.word	0x00200707

004014cc <pio_configure_pin>:
{
  4014cc:	b570      	push	{r4, r5, r6, lr}
  4014ce:	b082      	sub	sp, #8
  4014d0:	460d      	mov	r5, r1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  4014d2:	4c46      	ldr	r4, [pc, #280]	; (4015ec <pio_configure_pin+0x120>)
  4014d4:	eb04 1450 	add.w	r4, r4, r0, lsr #5
  4014d8:	0264      	lsls	r4, r4, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  4014da:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  4014de:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4014e2:	d059      	beq.n	401598 <pio_configure_pin+0xcc>
  4014e4:	d80a      	bhi.n	4014fc <pio_configure_pin+0x30>
  4014e6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4014ea:	d02f      	beq.n	40154c <pio_configure_pin+0x80>
  4014ec:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4014f0:	d03f      	beq.n	401572 <pio_configure_pin+0xa6>
  4014f2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4014f6:	d016      	beq.n	401526 <pio_configure_pin+0x5a>
		return 0;
  4014f8:	2000      	movs	r0, #0
  4014fa:	e012      	b.n	401522 <pio_configure_pin+0x56>
	switch (ul_flags & PIO_TYPE_Msk) {
  4014fc:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  401500:	d05d      	beq.n	4015be <pio_configure_pin+0xf2>
  401502:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  401506:	d05a      	beq.n	4015be <pio_configure_pin+0xf2>
  401508:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  40150c:	d1f4      	bne.n	4014f8 <pio_configure_pin+0x2c>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  40150e:	f000 011f 	and.w	r1, r0, #31
  401512:	2601      	movs	r6, #1
  401514:	462a      	mov	r2, r5
  401516:	fa06 f101 	lsl.w	r1, r6, r1
  40151a:	4620      	mov	r0, r4
  40151c:	4b34      	ldr	r3, [pc, #208]	; (4015f0 <pio_configure_pin+0x124>)
  40151e:	4798      	blx	r3
	return 1;
  401520:	4630      	mov	r0, r6
}
  401522:	b002      	add	sp, #8
  401524:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  401526:	f000 001f 	and.w	r0, r0, #31
  40152a:	2601      	movs	r6, #1
  40152c:	4086      	lsls	r6, r0
  40152e:	4632      	mov	r2, r6
  401530:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401534:	4620      	mov	r0, r4
  401536:	4b2f      	ldr	r3, [pc, #188]	; (4015f4 <pio_configure_pin+0x128>)
  401538:	4798      	blx	r3
	if (ul_pull_up_enable) {
  40153a:	f015 0f01 	tst.w	r5, #1
  40153e:	d102      	bne.n	401546 <pio_configure_pin+0x7a>
		p_pio->PIO_PUDR = ul_mask;
  401540:	6626      	str	r6, [r4, #96]	; 0x60
	return 1;
  401542:	2001      	movs	r0, #1
  401544:	e7ed      	b.n	401522 <pio_configure_pin+0x56>
		p_pio->PIO_PUER = ul_mask;
  401546:	6666      	str	r6, [r4, #100]	; 0x64
	return 1;
  401548:	2001      	movs	r0, #1
  40154a:	e7ea      	b.n	401522 <pio_configure_pin+0x56>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  40154c:	f000 001f 	and.w	r0, r0, #31
  401550:	2601      	movs	r6, #1
  401552:	4086      	lsls	r6, r0
  401554:	4632      	mov	r2, r6
  401556:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40155a:	4620      	mov	r0, r4
  40155c:	4b25      	ldr	r3, [pc, #148]	; (4015f4 <pio_configure_pin+0x128>)
  40155e:	4798      	blx	r3
	if (ul_pull_up_enable) {
  401560:	f015 0f01 	tst.w	r5, #1
  401564:	d102      	bne.n	40156c <pio_configure_pin+0xa0>
		p_pio->PIO_PUDR = ul_mask;
  401566:	6626      	str	r6, [r4, #96]	; 0x60
	return 1;
  401568:	2001      	movs	r0, #1
  40156a:	e7da      	b.n	401522 <pio_configure_pin+0x56>
		p_pio->PIO_PUER = ul_mask;
  40156c:	6666      	str	r6, [r4, #100]	; 0x64
	return 1;
  40156e:	2001      	movs	r0, #1
  401570:	e7d7      	b.n	401522 <pio_configure_pin+0x56>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  401572:	f000 001f 	and.w	r0, r0, #31
  401576:	2601      	movs	r6, #1
  401578:	4086      	lsls	r6, r0
  40157a:	4632      	mov	r2, r6
  40157c:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  401580:	4620      	mov	r0, r4
  401582:	4b1c      	ldr	r3, [pc, #112]	; (4015f4 <pio_configure_pin+0x128>)
  401584:	4798      	blx	r3
	if (ul_pull_up_enable) {
  401586:	f015 0f01 	tst.w	r5, #1
  40158a:	d102      	bne.n	401592 <pio_configure_pin+0xc6>
		p_pio->PIO_PUDR = ul_mask;
  40158c:	6626      	str	r6, [r4, #96]	; 0x60
	return 1;
  40158e:	2001      	movs	r0, #1
  401590:	e7c7      	b.n	401522 <pio_configure_pin+0x56>
		p_pio->PIO_PUER = ul_mask;
  401592:	6666      	str	r6, [r4, #100]	; 0x64
	return 1;
  401594:	2001      	movs	r0, #1
  401596:	e7c4      	b.n	401522 <pio_configure_pin+0x56>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  401598:	f000 001f 	and.w	r0, r0, #31
  40159c:	2601      	movs	r6, #1
  40159e:	4086      	lsls	r6, r0
  4015a0:	4632      	mov	r2, r6
  4015a2:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  4015a6:	4620      	mov	r0, r4
  4015a8:	4b12      	ldr	r3, [pc, #72]	; (4015f4 <pio_configure_pin+0x128>)
  4015aa:	4798      	blx	r3
	if (ul_pull_up_enable) {
  4015ac:	f015 0f01 	tst.w	r5, #1
  4015b0:	d102      	bne.n	4015b8 <pio_configure_pin+0xec>
		p_pio->PIO_PUDR = ul_mask;
  4015b2:	6626      	str	r6, [r4, #96]	; 0x60
	return 1;
  4015b4:	2001      	movs	r0, #1
  4015b6:	e7b4      	b.n	401522 <pio_configure_pin+0x56>
		p_pio->PIO_PUER = ul_mask;
  4015b8:	6666      	str	r6, [r4, #100]	; 0x64
	return 1;
  4015ba:	2001      	movs	r0, #1
  4015bc:	e7b1      	b.n	401522 <pio_configure_pin+0x56>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4015be:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4015c2:	f000 011f 	and.w	r1, r0, #31
  4015c6:	2601      	movs	r6, #1
  4015c8:	ea05 0306 	and.w	r3, r5, r6
  4015cc:	9300      	str	r3, [sp, #0]
  4015ce:	f3c5 0380 	ubfx	r3, r5, #2, #1
  4015d2:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  4015d6:	bf14      	ite	ne
  4015d8:	2200      	movne	r2, #0
  4015da:	2201      	moveq	r2, #1
  4015dc:	fa06 f101 	lsl.w	r1, r6, r1
  4015e0:	4620      	mov	r0, r4
  4015e2:	4c05      	ldr	r4, [pc, #20]	; (4015f8 <pio_configure_pin+0x12c>)
  4015e4:	47a0      	blx	r4
	return 1;
  4015e6:	4630      	mov	r0, r6
		break;
  4015e8:	e79b      	b.n	401522 <pio_configure_pin+0x56>
  4015ea:	bf00      	nop
  4015ec:	00200707 	.word	0x00200707
  4015f0:	0040139f 	.word	0x0040139f
  4015f4:	0040130d 	.word	0x0040130d
  4015f8:	004013d5 	.word	0x004013d5

004015fc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  4015fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401600:	4604      	mov	r4, r0
  401602:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  401604:	4b0e      	ldr	r3, [pc, #56]	; (401640 <pio_handler_process+0x44>)
  401606:	4798      	blx	r3
  401608:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  40160a:	4620      	mov	r0, r4
  40160c:	4b0d      	ldr	r3, [pc, #52]	; (401644 <pio_handler_process+0x48>)
  40160e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  401610:	4005      	ands	r5, r0
  401612:	d013      	beq.n	40163c <pio_handler_process+0x40>
  401614:	4c0c      	ldr	r4, [pc, #48]	; (401648 <pio_handler_process+0x4c>)
  401616:	f104 0660 	add.w	r6, r4, #96	; 0x60
  40161a:	e003      	b.n	401624 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  40161c:	42b4      	cmp	r4, r6
  40161e:	d00d      	beq.n	40163c <pio_handler_process+0x40>
  401620:	3410      	adds	r4, #16
		while (status != 0) {
  401622:	b15d      	cbz	r5, 40163c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  401624:	6820      	ldr	r0, [r4, #0]
  401626:	4540      	cmp	r0, r8
  401628:	d1f8      	bne.n	40161c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40162a:	6861      	ldr	r1, [r4, #4]
  40162c:	4229      	tst	r1, r5
  40162e:	d0f5      	beq.n	40161c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  401630:	68e3      	ldr	r3, [r4, #12]
  401632:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  401634:	6863      	ldr	r3, [r4, #4]
  401636:	ea25 0503 	bic.w	r5, r5, r3
  40163a:	e7ef      	b.n	40161c <pio_handler_process+0x20>
  40163c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401640:	0040148d 	.word	0x0040148d
  401644:	00401491 	.word	0x00401491
  401648:	20400f7c 	.word	0x20400f7c

0040164c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  40164c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  40164e:	210a      	movs	r1, #10
  401650:	4801      	ldr	r0, [pc, #4]	; (401658 <PIOA_Handler+0xc>)
  401652:	4b02      	ldr	r3, [pc, #8]	; (40165c <PIOA_Handler+0x10>)
  401654:	4798      	blx	r3
  401656:	bd08      	pop	{r3, pc}
  401658:	400e0e00 	.word	0x400e0e00
  40165c:	004015fd 	.word	0x004015fd

00401660 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  401660:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  401662:	210b      	movs	r1, #11
  401664:	4801      	ldr	r0, [pc, #4]	; (40166c <PIOB_Handler+0xc>)
  401666:	4b02      	ldr	r3, [pc, #8]	; (401670 <PIOB_Handler+0x10>)
  401668:	4798      	blx	r3
  40166a:	bd08      	pop	{r3, pc}
  40166c:	400e1000 	.word	0x400e1000
  401670:	004015fd 	.word	0x004015fd

00401674 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  401674:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  401676:	210c      	movs	r1, #12
  401678:	4801      	ldr	r0, [pc, #4]	; (401680 <PIOC_Handler+0xc>)
  40167a:	4b02      	ldr	r3, [pc, #8]	; (401684 <PIOC_Handler+0x10>)
  40167c:	4798      	blx	r3
  40167e:	bd08      	pop	{r3, pc}
  401680:	400e1200 	.word	0x400e1200
  401684:	004015fd 	.word	0x004015fd

00401688 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  401688:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  40168a:	2110      	movs	r1, #16
  40168c:	4801      	ldr	r0, [pc, #4]	; (401694 <PIOD_Handler+0xc>)
  40168e:	4b02      	ldr	r3, [pc, #8]	; (401698 <PIOD_Handler+0x10>)
  401690:	4798      	blx	r3
  401692:	bd08      	pop	{r3, pc}
  401694:	400e1400 	.word	0x400e1400
  401698:	004015fd 	.word	0x004015fd

0040169c <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  40169c:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  40169e:	2111      	movs	r1, #17
  4016a0:	4801      	ldr	r0, [pc, #4]	; (4016a8 <PIOE_Handler+0xc>)
  4016a2:	4b02      	ldr	r3, [pc, #8]	; (4016ac <PIOE_Handler+0x10>)
  4016a4:	4798      	blx	r3
  4016a6:	bd08      	pop	{r3, pc}
  4016a8:	400e1600 	.word	0x400e1600
  4016ac:	004015fd 	.word	0x004015fd

004016b0 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  4016b0:	2803      	cmp	r0, #3
  4016b2:	d011      	beq.n	4016d8 <pmc_mck_set_division+0x28>
  4016b4:	2804      	cmp	r0, #4
  4016b6:	d012      	beq.n	4016de <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  4016b8:	2802      	cmp	r0, #2
  4016ba:	bf0c      	ite	eq
  4016bc:	f44f 7180 	moveq.w	r1, #256	; 0x100
  4016c0:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  4016c2:	4a08      	ldr	r2, [pc, #32]	; (4016e4 <pmc_mck_set_division+0x34>)
  4016c4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016c6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  4016ca:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  4016cc:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4016ce:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4016d0:	f013 0f08 	tst.w	r3, #8
  4016d4:	d0fb      	beq.n	4016ce <pmc_mck_set_division+0x1e>
}
  4016d6:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  4016d8:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  4016dc:	e7f1      	b.n	4016c2 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  4016de:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  4016e2:	e7ee      	b.n	4016c2 <pmc_mck_set_division+0x12>
  4016e4:	400e0600 	.word	0x400e0600

004016e8 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4016e8:	4a17      	ldr	r2, [pc, #92]	; (401748 <pmc_switch_mck_to_pllack+0x60>)
  4016ea:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016ec:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4016f0:	4318      	orrs	r0, r3
  4016f2:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4016f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4016f6:	f013 0f08 	tst.w	r3, #8
  4016fa:	d10a      	bne.n	401712 <pmc_switch_mck_to_pllack+0x2a>
  4016fc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401700:	4911      	ldr	r1, [pc, #68]	; (401748 <pmc_switch_mck_to_pllack+0x60>)
  401702:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401704:	f012 0f08 	tst.w	r2, #8
  401708:	d103      	bne.n	401712 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40170a:	3b01      	subs	r3, #1
  40170c:	d1f9      	bne.n	401702 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40170e:	2001      	movs	r0, #1
  401710:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401712:	4a0d      	ldr	r2, [pc, #52]	; (401748 <pmc_switch_mck_to_pllack+0x60>)
  401714:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401716:	f023 0303 	bic.w	r3, r3, #3
  40171a:	f043 0302 	orr.w	r3, r3, #2
  40171e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401720:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401722:	f013 0f08 	tst.w	r3, #8
  401726:	d10a      	bne.n	40173e <pmc_switch_mck_to_pllack+0x56>
  401728:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  40172c:	4906      	ldr	r1, [pc, #24]	; (401748 <pmc_switch_mck_to_pllack+0x60>)
  40172e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401730:	f012 0f08 	tst.w	r2, #8
  401734:	d105      	bne.n	401742 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  401736:	3b01      	subs	r3, #1
  401738:	d1f9      	bne.n	40172e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40173a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  40173c:	4770      	bx	lr
	return 0;
  40173e:	2000      	movs	r0, #0
  401740:	4770      	bx	lr
  401742:	2000      	movs	r0, #0
  401744:	4770      	bx	lr
  401746:	bf00      	nop
  401748:	400e0600 	.word	0x400e0600

0040174c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  40174c:	b9a0      	cbnz	r0, 401778 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40174e:	480e      	ldr	r0, [pc, #56]	; (401788 <pmc_switch_mainck_to_xtal+0x3c>)
  401750:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  401752:	0209      	lsls	r1, r1, #8
  401754:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  401756:	4a0d      	ldr	r2, [pc, #52]	; (40178c <pmc_switch_mainck_to_xtal+0x40>)
  401758:	401a      	ands	r2, r3
  40175a:	4b0d      	ldr	r3, [pc, #52]	; (401790 <pmc_switch_mainck_to_xtal+0x44>)
  40175c:	4313      	orrs	r3, r2
  40175e:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401760:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401762:	4602      	mov	r2, r0
  401764:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401766:	f013 0f01 	tst.w	r3, #1
  40176a:	d0fb      	beq.n	401764 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40176c:	4a06      	ldr	r2, [pc, #24]	; (401788 <pmc_switch_mainck_to_xtal+0x3c>)
  40176e:	6a11      	ldr	r1, [r2, #32]
  401770:	4b08      	ldr	r3, [pc, #32]	; (401794 <pmc_switch_mainck_to_xtal+0x48>)
  401772:	430b      	orrs	r3, r1
  401774:	6213      	str	r3, [r2, #32]
  401776:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401778:	4903      	ldr	r1, [pc, #12]	; (401788 <pmc_switch_mainck_to_xtal+0x3c>)
  40177a:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40177c:	4a06      	ldr	r2, [pc, #24]	; (401798 <pmc_switch_mainck_to_xtal+0x4c>)
  40177e:	401a      	ands	r2, r3
  401780:	4b06      	ldr	r3, [pc, #24]	; (40179c <pmc_switch_mainck_to_xtal+0x50>)
  401782:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401784:	620b      	str	r3, [r1, #32]
  401786:	4770      	bx	lr
  401788:	400e0600 	.word	0x400e0600
  40178c:	ffc8fffc 	.word	0xffc8fffc
  401790:	00370001 	.word	0x00370001
  401794:	01370000 	.word	0x01370000
  401798:	fec8fffc 	.word	0xfec8fffc
  40179c:	01370002 	.word	0x01370002

004017a0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4017a0:	4b02      	ldr	r3, [pc, #8]	; (4017ac <pmc_osc_is_ready_mainck+0xc>)
  4017a2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4017a4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4017a8:	4770      	bx	lr
  4017aa:	bf00      	nop
  4017ac:	400e0600 	.word	0x400e0600

004017b0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4017b0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4017b4:	4b01      	ldr	r3, [pc, #4]	; (4017bc <pmc_disable_pllack+0xc>)
  4017b6:	629a      	str	r2, [r3, #40]	; 0x28
  4017b8:	4770      	bx	lr
  4017ba:	bf00      	nop
  4017bc:	400e0600 	.word	0x400e0600

004017c0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4017c0:	4b02      	ldr	r3, [pc, #8]	; (4017cc <pmc_is_locked_pllack+0xc>)
  4017c2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4017c4:	f000 0002 	and.w	r0, r0, #2
  4017c8:	4770      	bx	lr
  4017ca:	bf00      	nop
  4017cc:	400e0600 	.word	0x400e0600

004017d0 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
  4017d0:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  4017d4:	4b05      	ldr	r3, [pc, #20]	; (4017ec <pmc_enable_periph_clk+0x1c>)
  4017d6:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
  4017da:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
  4017de:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
  4017e2:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  4017e6:	2000      	movs	r0, #0
  4017e8:	4770      	bx	lr
  4017ea:	bf00      	nop
  4017ec:	400e0600 	.word	0x400e0600

004017f0 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4017f0:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4017f2:	4b07      	ldr	r3, [pc, #28]	; (401810 <spi_enable_clock+0x20>)
  4017f4:	4298      	cmp	r0, r3
  4017f6:	d003      	beq.n	401800 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4017f8:	4b06      	ldr	r3, [pc, #24]	; (401814 <spi_enable_clock+0x24>)
  4017fa:	4298      	cmp	r0, r3
  4017fc:	d004      	beq.n	401808 <spi_enable_clock+0x18>
  4017fe:	bd08      	pop	{r3, pc}
  401800:	2015      	movs	r0, #21
  401802:	4b05      	ldr	r3, [pc, #20]	; (401818 <spi_enable_clock+0x28>)
  401804:	4798      	blx	r3
  401806:	bd08      	pop	{r3, pc}
  401808:	202a      	movs	r0, #42	; 0x2a
  40180a:	4b03      	ldr	r3, [pc, #12]	; (401818 <spi_enable_clock+0x28>)
  40180c:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40180e:	e7f6      	b.n	4017fe <spi_enable_clock+0xe>
  401810:	40008000 	.word	0x40008000
  401814:	40058000 	.word	0x40058000
  401818:	004017d1 	.word	0x004017d1

0040181c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  40181c:	6843      	ldr	r3, [r0, #4]
  40181e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  401822:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  401824:	6843      	ldr	r3, [r0, #4]
  401826:	0409      	lsls	r1, r1, #16
  401828:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  40182c:	4319      	orrs	r1, r3
  40182e:	6041      	str	r1, [r0, #4]
  401830:	4770      	bx	lr

00401832 <spi_set_delay_between_chip_select>:
 * \param p_spi Pointer to an SPI instance.
 * \param ul_delay Delay between chip selects (in number of MCK clocks).
 */
void spi_set_delay_between_chip_select(Spi *p_spi, uint32_t ul_delay)
{
	p_spi->SPI_MR &= (~SPI_MR_DLYBCS_Msk);
  401832:	6843      	ldr	r3, [r0, #4]
  401834:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  401838:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_DLYBCS(ul_delay);
  40183a:	6843      	ldr	r3, [r0, #4]
  40183c:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
  401840:	6041      	str	r1, [r0, #4]
  401842:	4770      	bx	lr

00401844 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  401844:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  401846:	f643 2499 	movw	r4, #15001	; 0x3a99
  40184a:	6905      	ldr	r5, [r0, #16]
  40184c:	f015 0f02 	tst.w	r5, #2
  401850:	d103      	bne.n	40185a <spi_write+0x16>
		if (!timeout--) {
  401852:	3c01      	subs	r4, #1
  401854:	d1f9      	bne.n	40184a <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  401856:	2001      	movs	r0, #1
  401858:	e00c      	b.n	401874 <spi_write+0x30>
	if (p_spi->SPI_MR & SPI_MR_PS) {
  40185a:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  40185c:	f014 0f02 	tst.w	r4, #2
  401860:	d006      	beq.n	401870 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  401862:	0412      	lsls	r2, r2, #16
  401864:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  401868:	4311      	orrs	r1, r2
		if (uc_last) {
  40186a:	b10b      	cbz	r3, 401870 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  40186c:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  401870:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  401872:	2000      	movs	r0, #0
}
  401874:	bc30      	pop	{r4, r5}
  401876:	4770      	bx	lr

00401878 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  401878:	b932      	cbnz	r2, 401888 <spi_set_clock_polarity+0x10>
  40187a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  40187e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401880:	f023 0301 	bic.w	r3, r3, #1
  401884:	6303      	str	r3, [r0, #48]	; 0x30
  401886:	4770      	bx	lr
  401888:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  40188c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40188e:	f043 0301 	orr.w	r3, r3, #1
  401892:	6303      	str	r3, [r0, #48]	; 0x30
  401894:	4770      	bx	lr

00401896 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  401896:	b932      	cbnz	r2, 4018a6 <spi_set_clock_phase+0x10>
  401898:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  40189c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40189e:	f023 0302 	bic.w	r3, r3, #2
  4018a2:	6303      	str	r3, [r0, #48]	; 0x30
  4018a4:	4770      	bx	lr
  4018a6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4018aa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4018ac:	f043 0302 	orr.w	r3, r3, #2
  4018b0:	6303      	str	r3, [r0, #48]	; 0x30
  4018b2:	4770      	bx	lr

004018b4 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  4018b4:	2a04      	cmp	r2, #4
  4018b6:	d003      	beq.n	4018c0 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  4018b8:	b16a      	cbz	r2, 4018d6 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  4018ba:	2a08      	cmp	r2, #8
  4018bc:	d016      	beq.n	4018ec <spi_configure_cs_behavior+0x38>
  4018be:	4770      	bx	lr
  4018c0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4018c4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4018c6:	f023 0308 	bic.w	r3, r3, #8
  4018ca:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  4018cc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4018ce:	f043 0304 	orr.w	r3, r3, #4
  4018d2:	6303      	str	r3, [r0, #48]	; 0x30
  4018d4:	4770      	bx	lr
  4018d6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4018da:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4018dc:	f023 0308 	bic.w	r3, r3, #8
  4018e0:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4018e2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4018e4:	f023 0304 	bic.w	r3, r3, #4
  4018e8:	6303      	str	r3, [r0, #48]	; 0x30
  4018ea:	4770      	bx	lr
  4018ec:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  4018f0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4018f2:	f043 0308 	orr.w	r3, r3, #8
  4018f6:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4018f8:	e7e1      	b.n	4018be <spi_configure_cs_behavior+0xa>

004018fa <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4018fa:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4018fe:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401900:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  401904:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  401906:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401908:	431a      	orrs	r2, r3
  40190a:	630a      	str	r2, [r1, #48]	; 0x30
  40190c:	4770      	bx	lr

0040190e <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40190e:	1e43      	subs	r3, r0, #1
  401910:	4419      	add	r1, r3
  401912:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  401916:	1e43      	subs	r3, r0, #1
  401918:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  40191a:	bf94      	ite	ls
  40191c:	b200      	sxthls	r0, r0
		return -1;
  40191e:	f04f 30ff 	movhi.w	r0, #4294967295
}
  401922:	4770      	bx	lr

00401924 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider){
  401924:	b17a      	cbz	r2, 401946 <spi_set_baudrate_div+0x22>
{
  401926:	b410      	push	{r4}
  401928:	4614      	mov	r4, r2
  40192a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;
	}
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40192e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401930:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  401934:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  401936:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  401938:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  40193c:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  40193e:	2000      	movs	r0, #0
}
  401940:	f85d 4b04 	ldr.w	r4, [sp], #4
  401944:	4770      	bx	lr
        return -1;
  401946:	f04f 30ff 	mov.w	r0, #4294967295
  40194a:	4770      	bx	lr

0040194c <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  40194c:	b410      	push	{r4}
  40194e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  401952:	6b08      	ldr	r0, [r1, #48]	; 0x30
  401954:	b280      	uxth	r0, r0
  401956:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  401958:	6b0c      	ldr	r4, [r1, #48]	; 0x30
  40195a:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
  40195e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  401962:	630b      	str	r3, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
}
  401964:	f85d 4b04 	ldr.w	r4, [sp], #4
  401968:	4770      	bx	lr
	...

0040196c <twihs_set_speed>:
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	/* High-Speed can be only used in slave mode, 400k is the max speed allowed for master */
	if (ul_speed > I2C_FAST_MODE_SPEED) {
  40196c:	4b28      	ldr	r3, [pc, #160]	; (401a10 <twihs_set_speed+0xa4>)
  40196e:	4299      	cmp	r1, r3
  401970:	d84b      	bhi.n	401a0a <twihs_set_speed+0x9e>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  401972:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  401976:	4299      	cmp	r1, r3
  401978:	d92d      	bls.n	4019d6 <twihs_set_speed+0x6a>
{
  40197a:	b410      	push	{r4}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  40197c:	4c25      	ldr	r4, [pc, #148]	; (401a14 <twihs_set_speed+0xa8>)
  40197e:	fba4 3402 	umull	r3, r4, r4, r2
  401982:	0ba4      	lsrs	r4, r4, #14
  401984:	3c03      	subs	r4, #3
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  401986:	4b24      	ldr	r3, [pc, #144]	; (401a18 <twihs_set_speed+0xac>)
  401988:	440b      	add	r3, r1
  40198a:	009b      	lsls	r3, r3, #2
  40198c:	fbb2 f2f3 	udiv	r2, r2, r3
  401990:	3a03      	subs	r2, #3
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  401992:	2cff      	cmp	r4, #255	; 0xff
  401994:	d91d      	bls.n	4019d2 <twihs_set_speed+0x66>
  401996:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  401998:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWIHS_CLK_DIVIDER;
  40199a:	0864      	lsrs	r4, r4, #1
		while ((cldiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  40199c:	2cff      	cmp	r4, #255	; 0xff
  40199e:	d901      	bls.n	4019a4 <twihs_set_speed+0x38>
  4019a0:	2906      	cmp	r1, #6
  4019a2:	d9f9      	bls.n	401998 <twihs_set_speed+0x2c>
		}
		/* chdiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4019a4:	2aff      	cmp	r2, #255	; 0xff
  4019a6:	d907      	bls.n	4019b8 <twihs_set_speed+0x4c>
  4019a8:	2906      	cmp	r1, #6
  4019aa:	d805      	bhi.n	4019b8 <twihs_set_speed+0x4c>
			/* Increase clock divider */
			ckdiv++;
  4019ac:	3101      	adds	r1, #1
			/* Divide cldiv value */
			chdiv /= TWIHS_CLK_DIVIDER;
  4019ae:	0852      	lsrs	r2, r2, #1
		while ((chdiv > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4019b0:	2aff      	cmp	r2, #255	; 0xff
  4019b2:	d901      	bls.n	4019b8 <twihs_set_speed+0x4c>
  4019b4:	2906      	cmp	r1, #6
  4019b6:	d9f9      	bls.n	4019ac <twihs_set_speed+0x40>
		}

		/* set clock waveform generator register */
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  4019b8:	0213      	lsls	r3, r2, #8
  4019ba:	b29b      	uxth	r3, r3
				TWIHS_CWGR_CKDIV(ckdiv);
  4019bc:	0409      	lsls	r1, r1, #16
  4019be:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(cldiv) | TWIHS_CWGR_CHDIV(chdiv) |
  4019c2:	430b      	orrs	r3, r1
  4019c4:	b2e4      	uxtb	r4, r4
  4019c6:	4323      	orrs	r3, r4
		p_twihs->TWIHS_CWGR =
  4019c8:	6103      	str	r3, [r0, #16]
		p_twihs->TWIHS_CWGR =
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
				TWIHS_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  4019ca:	2000      	movs	r0, #0
}
  4019cc:	f85d 4b04 	ldr.w	r4, [sp], #4
  4019d0:	4770      	bx	lr
	uint32_t ckdiv = 0;
  4019d2:	2100      	movs	r1, #0
  4019d4:	e7e6      	b.n	4019a4 <twihs_set_speed+0x38>
		c_lh_div = ul_mck / (ul_speed * TWIHS_CLK_DIVIDER) - TWIHS_CLK_CALC_ARGU;
  4019d6:	0049      	lsls	r1, r1, #1
  4019d8:	fbb2 f2f1 	udiv	r2, r2, r1
  4019dc:	3a03      	subs	r2, #3
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4019de:	2aff      	cmp	r2, #255	; 0xff
  4019e0:	d911      	bls.n	401a06 <twihs_set_speed+0x9a>
  4019e2:	2300      	movs	r3, #0
			ckdiv++;
  4019e4:	3301      	adds	r3, #1
			c_lh_div /= TWIHS_CLK_DIVIDER;
  4019e6:	0852      	lsrs	r2, r2, #1
		while ((c_lh_div > TWIHS_CLK_DIV_MAX) && (ckdiv < TWIHS_CLK_DIV_MIN)) {
  4019e8:	2aff      	cmp	r2, #255	; 0xff
  4019ea:	d901      	bls.n	4019f0 <twihs_set_speed+0x84>
  4019ec:	2b06      	cmp	r3, #6
  4019ee:	d9f9      	bls.n	4019e4 <twihs_set_speed+0x78>
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  4019f0:	0211      	lsls	r1, r2, #8
  4019f2:	b289      	uxth	r1, r1
				TWIHS_CWGR_CKDIV(ckdiv);
  4019f4:	041b      	lsls	r3, r3, #16
  4019f6:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWIHS_CWGR_CLDIV(c_lh_div) | TWIHS_CWGR_CHDIV(c_lh_div) |
  4019fa:	430b      	orrs	r3, r1
  4019fc:	b2d2      	uxtb	r2, r2
  4019fe:	431a      	orrs	r2, r3
		p_twihs->TWIHS_CWGR =
  401a00:	6102      	str	r2, [r0, #16]
	return PASS;
  401a02:	2000      	movs	r0, #0
  401a04:	4770      	bx	lr
	uint32_t ckdiv = 0;
  401a06:	2300      	movs	r3, #0
  401a08:	e7f2      	b.n	4019f0 <twihs_set_speed+0x84>
		return FAIL;
  401a0a:	2001      	movs	r0, #1
  401a0c:	4770      	bx	lr
  401a0e:	bf00      	nop
  401a10:	00061a80 	.word	0x00061a80
  401a14:	057619f1 	.word	0x057619f1
  401a18:	3ffd1200 	.word	0x3ffd1200

00401a1c <twihs_master_init>:
{
  401a1c:	b508      	push	{r3, lr}
	p_twihs->TWIHS_IDR = ~0UL;
  401a1e:	f04f 32ff 	mov.w	r2, #4294967295
  401a22:	6282      	str	r2, [r0, #40]	; 0x28
	p_twihs->TWIHS_SR;
  401a24:	6a02      	ldr	r2, [r0, #32]
 * \param p_twihs Pointer to a TWIHS instance.
 */
void twihs_reset(Twihs *p_twihs)
{
	/* Set SWRST bit to reset TWIHS peripheral */
	p_twihs->TWIHS_CR = TWIHS_CR_SWRST;
  401a26:	2280      	movs	r2, #128	; 0x80
  401a28:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_RHR;
  401a2a:	6b02      	ldr	r2, [r0, #48]	; 0x30
	p_twihs->TWIHS_CR = TWIHS_CR_MSDIS;
  401a2c:	2208      	movs	r2, #8
  401a2e:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_SVDIS;
  401a30:	2220      	movs	r2, #32
  401a32:	6002      	str	r2, [r0, #0]
	p_twihs->TWIHS_CR = TWIHS_CR_MSEN;
  401a34:	2204      	movs	r2, #4
  401a36:	6002      	str	r2, [r0, #0]
	if (twihs_set_speed(p_twihs, p_opt->speed, p_opt->master_clk) == FAIL) {
  401a38:	680a      	ldr	r2, [r1, #0]
  401a3a:	6849      	ldr	r1, [r1, #4]
  401a3c:	4b03      	ldr	r3, [pc, #12]	; (401a4c <twihs_master_init+0x30>)
  401a3e:	4798      	blx	r3
}
  401a40:	2801      	cmp	r0, #1
  401a42:	bf14      	ite	ne
  401a44:	2000      	movne	r0, #0
  401a46:	2001      	moveq	r0, #1
  401a48:	bd08      	pop	{r3, pc}
  401a4a:	bf00      	nop
  401a4c:	0040196d 	.word	0x0040196d

00401a50 <twihs_master_read>:
	uint32_t status, cnt = p_packet->length;
  401a50:	68ca      	ldr	r2, [r1, #12]
	if (cnt == 0) {
  401a52:	2a00      	cmp	r2, #0
  401a54:	d04c      	beq.n	401af0 <twihs_master_read+0xa0>
{
  401a56:	b470      	push	{r4, r5, r6}
	uint8_t *buffer = p_packet->buffer;
  401a58:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  401a5a:	2600      	movs	r6, #0
  401a5c:	6046      	str	r6, [r0, #4]
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  401a5e:	684b      	ldr	r3, [r1, #4]
  401a60:	021b      	lsls	r3, r3, #8
  401a62:	f403 7340 	and.w	r3, r3, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_MREAD | TWIHS_MMR_DADR(p_packet->chip) |
  401a66:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
  401a6a:	7c0d      	ldrb	r5, [r1, #16]
  401a6c:	042d      	lsls	r5, r5, #16
  401a6e:	f405 05fe 	and.w	r5, r5, #8323072	; 0x7f0000
  401a72:	432b      	orrs	r3, r5
  401a74:	6043      	str	r3, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  401a76:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401a78:	684d      	ldr	r5, [r1, #4]
	if (len == 0)
  401a7a:	b15d      	cbz	r5, 401a94 <twihs_master_read+0x44>
	val = addr[0];
  401a7c:	780b      	ldrb	r3, [r1, #0]
	if (len > 1) {
  401a7e:	2d01      	cmp	r5, #1
  401a80:	dd02      	ble.n	401a88 <twihs_master_read+0x38>
		val |= addr[1];
  401a82:	784e      	ldrb	r6, [r1, #1]
  401a84:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
	if (len > 2) {
  401a88:	2d02      	cmp	r5, #2
  401a8a:	dd04      	ble.n	401a96 <twihs_master_read+0x46>
		val |= addr[2];
  401a8c:	7889      	ldrb	r1, [r1, #2]
  401a8e:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
  401a92:	e000      	b.n	401a96 <twihs_master_read+0x46>
		return 0;
  401a94:	2300      	movs	r3, #0
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401a96:	60c3      	str	r3, [r0, #12]
	p_twihs->TWIHS_CR = TWIHS_CR_START;
  401a98:	2301      	movs	r3, #1
  401a9a:	6003      	str	r3, [r0, #0]
			p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  401a9c:	2502      	movs	r5, #2
  401a9e:	e012      	b.n	401ac6 <twihs_master_read+0x76>
  401aa0:	6005      	str	r5, [r0, #0]
		if (!(status & TWIHS_SR_RXRDY)) {
  401aa2:	f013 0f02 	tst.w	r3, #2
  401aa6:	d01b      	beq.n	401ae0 <twihs_master_read+0x90>
		*buffer++ = p_twihs->TWIHS_RHR;
  401aa8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401aaa:	7023      	strb	r3, [r4, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  401aac:	6a03      	ldr	r3, [r0, #32]
  401aae:	f013 0f01 	tst.w	r3, #1
  401ab2:	d0fb      	beq.n	401aac <twihs_master_read+0x5c>
	p_twihs->TWIHS_SR;
  401ab4:	6a03      	ldr	r3, [r0, #32]
	return TWIHS_SUCCESS;
  401ab6:	2000      	movs	r0, #0
}
  401ab8:	bc70      	pop	{r4, r5, r6}
  401aba:	4770      	bx	lr
		*buffer++ = p_twihs->TWIHS_RHR;
  401abc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401abe:	f804 3b01 	strb.w	r3, [r4], #1
	while (cnt > 0) {
  401ac2:	3a01      	subs	r2, #1
  401ac4:	d0f2      	beq.n	401aac <twihs_master_read+0x5c>
		status = p_twihs->TWIHS_SR;
  401ac6:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401ac8:	f413 7f80 	tst.w	r3, #256	; 0x100
  401acc:	d114      	bne.n	401af8 <twihs_master_read+0xa8>
  401ace:	f247 5130 	movw	r1, #30000	; 0x7530
		if (cnt == 1) {
  401ad2:	2a01      	cmp	r2, #1
  401ad4:	d0e4      	beq.n	401aa0 <twihs_master_read+0x50>
		if (!(status & TWIHS_SR_RXRDY)) {
  401ad6:	f013 0f02 	tst.w	r3, #2
  401ada:	d1ef      	bne.n	401abc <twihs_master_read+0x6c>
	while (cnt > 0) {
  401adc:	2a00      	cmp	r2, #0
  401ade:	d0e5      	beq.n	401aac <twihs_master_read+0x5c>
		status = p_twihs->TWIHS_SR;
  401ae0:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401ae2:	f413 7f80 	tst.w	r3, #256	; 0x100
  401ae6:	d105      	bne.n	401af4 <twihs_master_read+0xa4>
		if (!timeout--) {
  401ae8:	3901      	subs	r1, #1
  401aea:	d1f2      	bne.n	401ad2 <twihs_master_read+0x82>
			return TWIHS_ERROR_TIMEOUT;
  401aec:	2009      	movs	r0, #9
  401aee:	e7e3      	b.n	401ab8 <twihs_master_read+0x68>
		return TWIHS_INVALID_ARGUMENT;
  401af0:	2001      	movs	r0, #1
  401af2:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  401af4:	2005      	movs	r0, #5
  401af6:	e7df      	b.n	401ab8 <twihs_master_read+0x68>
  401af8:	2005      	movs	r0, #5
  401afa:	e7dd      	b.n	401ab8 <twihs_master_read+0x68>

00401afc <twihs_master_write>:
	uint32_t status, cnt = p_packet->length;
  401afc:	68cb      	ldr	r3, [r1, #12]
	if (cnt == 0) {
  401afe:	2b00      	cmp	r3, #0
  401b00:	d043      	beq.n	401b8a <twihs_master_write+0x8e>
{
  401b02:	b470      	push	{r4, r5, r6}
	uint8_t *buffer = p_packet->buffer;
  401b04:	688c      	ldr	r4, [r1, #8]
	p_twihs->TWIHS_MMR = 0;
  401b06:	2600      	movs	r6, #0
  401b08:	6046      	str	r6, [r0, #4]
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  401b0a:	7c0a      	ldrb	r2, [r1, #16]
  401b0c:	0412      	lsls	r2, r2, #16
  401b0e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWIHS_MMR_IADRSZ_Pos) &
  401b12:	684d      	ldr	r5, [r1, #4]
  401b14:	022d      	lsls	r5, r5, #8
  401b16:	f405 7540 	and.w	r5, r5, #768	; 0x300
	p_twihs->TWIHS_MMR = TWIHS_MMR_DADR(p_packet->chip) |
  401b1a:	432a      	orrs	r2, r5
  401b1c:	6042      	str	r2, [r0, #4]
	p_twihs->TWIHS_IADR = 0;
  401b1e:	60c6      	str	r6, [r0, #12]
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401b20:	684d      	ldr	r5, [r1, #4]
	if (len == 0)
  401b22:	b15d      	cbz	r5, 401b3c <twihs_master_write+0x40>
	val = addr[0];
  401b24:	780a      	ldrb	r2, [r1, #0]
	if (len > 1) {
  401b26:	2d01      	cmp	r5, #1
  401b28:	dd02      	ble.n	401b30 <twihs_master_write+0x34>
		val |= addr[1];
  401b2a:	784e      	ldrb	r6, [r1, #1]
  401b2c:	ea46 2202 	orr.w	r2, r6, r2, lsl #8
	if (len > 2) {
  401b30:	2d02      	cmp	r5, #2
  401b32:	dd04      	ble.n	401b3e <twihs_master_write+0x42>
		val |= addr[2];
  401b34:	7889      	ldrb	r1, [r1, #2]
  401b36:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
  401b3a:	e000      	b.n	401b3e <twihs_master_write+0x42>
		return 0;
  401b3c:	2200      	movs	r2, #0
	p_twihs->TWIHS_IADR = twihs_mk_addr(p_packet->addr, p_packet->addr_length);
  401b3e:	60c2      	str	r2, [r0, #12]
  401b40:	e004      	b.n	401b4c <twihs_master_write+0x50>
		p_twihs->TWIHS_THR = *buffer++;
  401b42:	f814 2b01 	ldrb.w	r2, [r4], #1
  401b46:	6342      	str	r2, [r0, #52]	; 0x34
	while (cnt > 0) {
  401b48:	3b01      	subs	r3, #1
  401b4a:	d00f      	beq.n	401b6c <twihs_master_write+0x70>
		status = p_twihs->TWIHS_SR;
  401b4c:	6a02      	ldr	r2, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401b4e:	f412 7f80 	tst.w	r2, #256	; 0x100
  401b52:	d11e      	bne.n	401b92 <twihs_master_write+0x96>
		if (!(status & TWIHS_SR_TXRDY)) {
  401b54:	f012 0f04 	tst.w	r2, #4
  401b58:	d1f3      	bne.n	401b42 <twihs_master_write+0x46>
		status = p_twihs->TWIHS_SR;
  401b5a:	6a02      	ldr	r2, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401b5c:	f412 7f80 	tst.w	r2, #256	; 0x100
  401b60:	d115      	bne.n	401b8e <twihs_master_write+0x92>
		if (!(status & TWIHS_SR_TXRDY)) {
  401b62:	f012 0f04 	tst.w	r2, #4
  401b66:	d1ec      	bne.n	401b42 <twihs_master_write+0x46>
	while (cnt > 0) {
  401b68:	2b00      	cmp	r3, #0
  401b6a:	d1f6      	bne.n	401b5a <twihs_master_write+0x5e>
		status = p_twihs->TWIHS_SR;
  401b6c:	6a03      	ldr	r3, [r0, #32]
		if (status & TWIHS_SR_NACK) {
  401b6e:	f413 7f80 	tst.w	r3, #256	; 0x100
  401b72:	d111      	bne.n	401b98 <twihs_master_write+0x9c>
		if (status & TWIHS_SR_TXRDY) {
  401b74:	f013 0f04 	tst.w	r3, #4
  401b78:	d0f8      	beq.n	401b6c <twihs_master_write+0x70>
	p_twihs->TWIHS_CR = TWIHS_CR_STOP;
  401b7a:	2302      	movs	r3, #2
  401b7c:	6003      	str	r3, [r0, #0]
	while (!(p_twihs->TWIHS_SR & TWIHS_SR_TXCOMP)) {
  401b7e:	6a03      	ldr	r3, [r0, #32]
  401b80:	f013 0f01 	tst.w	r3, #1
  401b84:	d0fb      	beq.n	401b7e <twihs_master_write+0x82>
	return TWIHS_SUCCESS;
  401b86:	2000      	movs	r0, #0
  401b88:	e004      	b.n	401b94 <twihs_master_write+0x98>
		return TWIHS_INVALID_ARGUMENT;
  401b8a:	2001      	movs	r0, #1
  401b8c:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  401b8e:	2005      	movs	r0, #5
  401b90:	e000      	b.n	401b94 <twihs_master_write+0x98>
  401b92:	2005      	movs	r0, #5
}
  401b94:	bc70      	pop	{r4, r5, r6}
  401b96:	4770      	bx	lr
			return TWIHS_RECEIVE_NACK;
  401b98:	2005      	movs	r0, #5
  401b9a:	e7fb      	b.n	401b94 <twihs_master_write+0x98>

00401b9c <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  401b9c:	6943      	ldr	r3, [r0, #20]
  401b9e:	f013 0f02 	tst.w	r3, #2
  401ba2:	d002      	beq.n	401baa <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  401ba4:	61c1      	str	r1, [r0, #28]
	return 0;
  401ba6:	2000      	movs	r0, #0
  401ba8:	4770      	bx	lr
		return 1;
  401baa:	2001      	movs	r0, #1
}
  401bac:	4770      	bx	lr

00401bae <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  401bae:	6943      	ldr	r3, [r0, #20]
  401bb0:	f013 0f01 	tst.w	r3, #1
  401bb4:	d003      	beq.n	401bbe <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  401bb6:	6983      	ldr	r3, [r0, #24]
  401bb8:	700b      	strb	r3, [r1, #0]
	return 0;
  401bba:	2000      	movs	r0, #0
  401bbc:	4770      	bx	lr
		return 1;
  401bbe:	2001      	movs	r0, #1
}
  401bc0:	4770      	bx	lr

00401bc2 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  401bc2:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  401bc4:	010b      	lsls	r3, r1, #4
  401bc6:	4293      	cmp	r3, r2
  401bc8:	d914      	bls.n	401bf4 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401bca:	00c9      	lsls	r1, r1, #3
  401bcc:	084b      	lsrs	r3, r1, #1
  401bce:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  401bd2:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  401bd6:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  401bd8:	1e5c      	subs	r4, r3, #1
  401bda:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  401bde:	428c      	cmp	r4, r1
  401be0:	d901      	bls.n	401be6 <usart_set_async_baudrate+0x24>
		return 1;
  401be2:	2001      	movs	r0, #1
  401be4:	e017      	b.n	401c16 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  401be6:	6841      	ldr	r1, [r0, #4]
  401be8:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  401bec:	6041      	str	r1, [r0, #4]
  401bee:	e00c      	b.n	401c0a <usart_set_async_baudrate+0x48>
		return 1;
  401bf0:	2001      	movs	r0, #1
  401bf2:	e010      	b.n	401c16 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  401bf4:	0859      	lsrs	r1, r3, #1
  401bf6:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  401bfa:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  401bfe:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  401c00:	1e5c      	subs	r4, r3, #1
  401c02:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  401c06:	428c      	cmp	r4, r1
  401c08:	d8f2      	bhi.n	401bf0 <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  401c0a:	0412      	lsls	r2, r2, #16
  401c0c:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  401c10:	431a      	orrs	r2, r3
  401c12:	6202      	str	r2, [r0, #32]

	return 0;
  401c14:	2000      	movs	r0, #0
}
  401c16:	f85d 4b04 	ldr.w	r4, [sp], #4
  401c1a:	4770      	bx	lr

00401c1c <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  401c1c:	4b08      	ldr	r3, [pc, #32]	; (401c40 <usart_reset+0x24>)
  401c1e:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  401c22:	2300      	movs	r3, #0
  401c24:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  401c26:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  401c28:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  401c2a:	2388      	movs	r3, #136	; 0x88
  401c2c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  401c2e:	2324      	movs	r3, #36	; 0x24
  401c30:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  401c32:	f44f 7380 	mov.w	r3, #256	; 0x100
  401c36:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  401c38:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  401c3c:	6003      	str	r3, [r0, #0]
  401c3e:	4770      	bx	lr
  401c40:	55534100 	.word	0x55534100

00401c44 <usart_init_rs232>:
{
  401c44:	b570      	push	{r4, r5, r6, lr}
  401c46:	4605      	mov	r5, r0
  401c48:	460c      	mov	r4, r1
  401c4a:	4616      	mov	r6, r2
	usart_reset(p_usart);
  401c4c:	4b0f      	ldr	r3, [pc, #60]	; (401c8c <usart_init_rs232+0x48>)
  401c4e:	4798      	blx	r3
	ul_reg_val = 0;
  401c50:	2200      	movs	r2, #0
  401c52:	4b0f      	ldr	r3, [pc, #60]	; (401c90 <usart_init_rs232+0x4c>)
  401c54:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  401c56:	b1a4      	cbz	r4, 401c82 <usart_init_rs232+0x3e>
  401c58:	4632      	mov	r2, r6
  401c5a:	6821      	ldr	r1, [r4, #0]
  401c5c:	4628      	mov	r0, r5
  401c5e:	4b0d      	ldr	r3, [pc, #52]	; (401c94 <usart_init_rs232+0x50>)
  401c60:	4798      	blx	r3
  401c62:	4602      	mov	r2, r0
  401c64:	b978      	cbnz	r0, 401c86 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  401c66:	6863      	ldr	r3, [r4, #4]
  401c68:	68a1      	ldr	r1, [r4, #8]
  401c6a:	430b      	orrs	r3, r1
  401c6c:	6921      	ldr	r1, [r4, #16]
  401c6e:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  401c70:	68e1      	ldr	r1, [r4, #12]
  401c72:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  401c74:	4906      	ldr	r1, [pc, #24]	; (401c90 <usart_init_rs232+0x4c>)
  401c76:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  401c78:	6869      	ldr	r1, [r5, #4]
  401c7a:	430b      	orrs	r3, r1
  401c7c:	606b      	str	r3, [r5, #4]
}
  401c7e:	4610      	mov	r0, r2
  401c80:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  401c82:	2201      	movs	r2, #1
  401c84:	e7fb      	b.n	401c7e <usart_init_rs232+0x3a>
  401c86:	2201      	movs	r2, #1
  401c88:	e7f9      	b.n	401c7e <usart_init_rs232+0x3a>
  401c8a:	bf00      	nop
  401c8c:	00401c1d 	.word	0x00401c1d
  401c90:	20400fec 	.word	0x20400fec
  401c94:	00401bc3 	.word	0x00401bc3

00401c98 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  401c98:	2340      	movs	r3, #64	; 0x40
  401c9a:	6003      	str	r3, [r0, #0]
  401c9c:	4770      	bx	lr

00401c9e <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  401c9e:	2310      	movs	r3, #16
  401ca0:	6003      	str	r3, [r0, #0]
  401ca2:	4770      	bx	lr

00401ca4 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  401ca4:	6943      	ldr	r3, [r0, #20]
  401ca6:	f013 0f02 	tst.w	r3, #2
  401caa:	d004      	beq.n	401cb6 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  401cac:	f3c1 0108 	ubfx	r1, r1, #0, #9
  401cb0:	61c1      	str	r1, [r0, #28]
	return 0;
  401cb2:	2000      	movs	r0, #0
  401cb4:	4770      	bx	lr
		return 1;
  401cb6:	2001      	movs	r0, #1
}
  401cb8:	4770      	bx	lr

00401cba <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  401cba:	6943      	ldr	r3, [r0, #20]
  401cbc:	f013 0f01 	tst.w	r3, #1
  401cc0:	d005      	beq.n	401cce <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  401cc2:	6983      	ldr	r3, [r0, #24]
  401cc4:	f3c3 0308 	ubfx	r3, r3, #0, #9
  401cc8:	600b      	str	r3, [r1, #0]
	return 0;
  401cca:	2000      	movs	r0, #0
  401ccc:	4770      	bx	lr
		return 1;
  401cce:	2001      	movs	r0, #1
}
  401cd0:	4770      	bx	lr

00401cd2 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401cd2:	e7fe      	b.n	401cd2 <Dummy_Handler>

00401cd4 <Reset_Handler>:
{
  401cd4:	b500      	push	{lr}
  401cd6:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401cd8:	4b25      	ldr	r3, [pc, #148]	; (401d70 <Reset_Handler+0x9c>)
  401cda:	4a26      	ldr	r2, [pc, #152]	; (401d74 <Reset_Handler+0xa0>)
  401cdc:	429a      	cmp	r2, r3
  401cde:	d010      	beq.n	401d02 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401ce0:	4b25      	ldr	r3, [pc, #148]	; (401d78 <Reset_Handler+0xa4>)
  401ce2:	4a23      	ldr	r2, [pc, #140]	; (401d70 <Reset_Handler+0x9c>)
  401ce4:	429a      	cmp	r2, r3
  401ce6:	d20c      	bcs.n	401d02 <Reset_Handler+0x2e>
  401ce8:	3b01      	subs	r3, #1
  401cea:	1a9b      	subs	r3, r3, r2
  401cec:	f023 0303 	bic.w	r3, r3, #3
  401cf0:	3304      	adds	r3, #4
  401cf2:	4413      	add	r3, r2
  401cf4:	491f      	ldr	r1, [pc, #124]	; (401d74 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  401cf6:	f851 0b04 	ldr.w	r0, [r1], #4
  401cfa:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401cfe:	429a      	cmp	r2, r3
  401d00:	d1f9      	bne.n	401cf6 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  401d02:	4b1e      	ldr	r3, [pc, #120]	; (401d7c <Reset_Handler+0xa8>)
  401d04:	4a1e      	ldr	r2, [pc, #120]	; (401d80 <Reset_Handler+0xac>)
  401d06:	429a      	cmp	r2, r3
  401d08:	d20a      	bcs.n	401d20 <Reset_Handler+0x4c>
  401d0a:	3b01      	subs	r3, #1
  401d0c:	1a9b      	subs	r3, r3, r2
  401d0e:	f023 0303 	bic.w	r3, r3, #3
  401d12:	3304      	adds	r3, #4
  401d14:	4413      	add	r3, r2
                *pDest++ = 0;
  401d16:	2100      	movs	r1, #0
  401d18:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401d1c:	4293      	cmp	r3, r2
  401d1e:	d1fb      	bne.n	401d18 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401d20:	4a18      	ldr	r2, [pc, #96]	; (401d84 <Reset_Handler+0xb0>)
  401d22:	4b19      	ldr	r3, [pc, #100]	; (401d88 <Reset_Handler+0xb4>)
  401d24:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401d28:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401d2a:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401d2e:	fab3 f383 	clz	r3, r3
  401d32:	095b      	lsrs	r3, r3, #5
  401d34:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401d36:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401d38:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401d3c:	2200      	movs	r2, #0
  401d3e:	4b13      	ldr	r3, [pc, #76]	; (401d8c <Reset_Handler+0xb8>)
  401d40:	701a      	strb	r2, [r3, #0]
	return flags;
  401d42:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401d44:	4a12      	ldr	r2, [pc, #72]	; (401d90 <Reset_Handler+0xbc>)
  401d46:	6813      	ldr	r3, [r2, #0]
  401d48:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401d4c:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401d4e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401d52:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401d56:	b129      	cbz	r1, 401d64 <Reset_Handler+0x90>
		cpu_irq_enable();
  401d58:	2201      	movs	r2, #1
  401d5a:	4b0c      	ldr	r3, [pc, #48]	; (401d8c <Reset_Handler+0xb8>)
  401d5c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401d5e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401d62:	b662      	cpsie	i
        __libc_init_array();
  401d64:	4b0b      	ldr	r3, [pc, #44]	; (401d94 <Reset_Handler+0xc0>)
  401d66:	4798      	blx	r3
        main();
  401d68:	4b0b      	ldr	r3, [pc, #44]	; (401d98 <Reset_Handler+0xc4>)
  401d6a:	4798      	blx	r3
  401d6c:	e7fe      	b.n	401d6c <Reset_Handler+0x98>
  401d6e:	bf00      	nop
  401d70:	20400000 	.word	0x20400000
  401d74:	00410bd4 	.word	0x00410bd4
  401d78:	204009c0 	.word	0x204009c0
  401d7c:	2040106c 	.word	0x2040106c
  401d80:	204009c0 	.word	0x204009c0
  401d84:	e000ed00 	.word	0xe000ed00
  401d88:	00400000 	.word	0x00400000
  401d8c:	2040000a 	.word	0x2040000a
  401d90:	e000ed88 	.word	0xe000ed88
  401d94:	00402621 	.word	0x00402621
  401d98:	004022d1 	.word	0x004022d1

00401d9c <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401d9c:	4b3b      	ldr	r3, [pc, #236]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401d9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401da0:	f003 0303 	and.w	r3, r3, #3
  401da4:	2b01      	cmp	r3, #1
  401da6:	d01d      	beq.n	401de4 <SystemCoreClockUpdate+0x48>
  401da8:	b183      	cbz	r3, 401dcc <SystemCoreClockUpdate+0x30>
  401daa:	2b02      	cmp	r3, #2
  401dac:	d036      	beq.n	401e1c <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401dae:	4b37      	ldr	r3, [pc, #220]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401db0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401db2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401db6:	2b70      	cmp	r3, #112	; 0x70
  401db8:	d05f      	beq.n	401e7a <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401dba:	4b34      	ldr	r3, [pc, #208]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401dbe:	4934      	ldr	r1, [pc, #208]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401dc0:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401dc4:	680b      	ldr	r3, [r1, #0]
  401dc6:	40d3      	lsrs	r3, r2
  401dc8:	600b      	str	r3, [r1, #0]
  401dca:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401dcc:	4b31      	ldr	r3, [pc, #196]	; (401e94 <SystemCoreClockUpdate+0xf8>)
  401dce:	695b      	ldr	r3, [r3, #20]
  401dd0:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401dd4:	bf14      	ite	ne
  401dd6:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401dda:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401dde:	4b2c      	ldr	r3, [pc, #176]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401de0:	601a      	str	r2, [r3, #0]
  401de2:	e7e4      	b.n	401dae <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401de4:	4b29      	ldr	r3, [pc, #164]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401de6:	6a1b      	ldr	r3, [r3, #32]
  401de8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401dec:	d003      	beq.n	401df6 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401dee:	4a2a      	ldr	r2, [pc, #168]	; (401e98 <SystemCoreClockUpdate+0xfc>)
  401df0:	4b27      	ldr	r3, [pc, #156]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401df2:	601a      	str	r2, [r3, #0]
  401df4:	e7db      	b.n	401dae <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401df6:	4a29      	ldr	r2, [pc, #164]	; (401e9c <SystemCoreClockUpdate+0x100>)
  401df8:	4b25      	ldr	r3, [pc, #148]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401dfa:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401dfc:	4b23      	ldr	r3, [pc, #140]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401dfe:	6a1b      	ldr	r3, [r3, #32]
  401e00:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401e04:	2b10      	cmp	r3, #16
  401e06:	d005      	beq.n	401e14 <SystemCoreClockUpdate+0x78>
  401e08:	2b20      	cmp	r3, #32
  401e0a:	d1d0      	bne.n	401dae <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401e0c:	4a22      	ldr	r2, [pc, #136]	; (401e98 <SystemCoreClockUpdate+0xfc>)
  401e0e:	4b20      	ldr	r3, [pc, #128]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401e10:	601a      	str	r2, [r3, #0]
          break;
  401e12:	e7cc      	b.n	401dae <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401e14:	4a22      	ldr	r2, [pc, #136]	; (401ea0 <SystemCoreClockUpdate+0x104>)
  401e16:	4b1e      	ldr	r3, [pc, #120]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401e18:	601a      	str	r2, [r3, #0]
          break;
  401e1a:	e7c8      	b.n	401dae <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401e1c:	4b1b      	ldr	r3, [pc, #108]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401e1e:	6a1b      	ldr	r3, [r3, #32]
  401e20:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401e24:	d016      	beq.n	401e54 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  401e26:	4a1c      	ldr	r2, [pc, #112]	; (401e98 <SystemCoreClockUpdate+0xfc>)
  401e28:	4b19      	ldr	r3, [pc, #100]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401e2a:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401e2c:	4b17      	ldr	r3, [pc, #92]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401e2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401e30:	f003 0303 	and.w	r3, r3, #3
  401e34:	2b02      	cmp	r3, #2
  401e36:	d1ba      	bne.n	401dae <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401e38:	4a14      	ldr	r2, [pc, #80]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401e3a:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401e3c:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401e3e:	4814      	ldr	r0, [pc, #80]	; (401e90 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401e40:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401e44:	6803      	ldr	r3, [r0, #0]
  401e46:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401e4a:	b2d2      	uxtb	r2, r2
  401e4c:	fbb3 f3f2 	udiv	r3, r3, r2
  401e50:	6003      	str	r3, [r0, #0]
  401e52:	e7ac      	b.n	401dae <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401e54:	4a11      	ldr	r2, [pc, #68]	; (401e9c <SystemCoreClockUpdate+0x100>)
  401e56:	4b0e      	ldr	r3, [pc, #56]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401e58:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401e5a:	4b0c      	ldr	r3, [pc, #48]	; (401e8c <SystemCoreClockUpdate+0xf0>)
  401e5c:	6a1b      	ldr	r3, [r3, #32]
  401e5e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401e62:	2b10      	cmp	r3, #16
  401e64:	d005      	beq.n	401e72 <SystemCoreClockUpdate+0xd6>
  401e66:	2b20      	cmp	r3, #32
  401e68:	d1e0      	bne.n	401e2c <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401e6a:	4a0b      	ldr	r2, [pc, #44]	; (401e98 <SystemCoreClockUpdate+0xfc>)
  401e6c:	4b08      	ldr	r3, [pc, #32]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401e6e:	601a      	str	r2, [r3, #0]
          break;
  401e70:	e7dc      	b.n	401e2c <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401e72:	4a0b      	ldr	r2, [pc, #44]	; (401ea0 <SystemCoreClockUpdate+0x104>)
  401e74:	4b06      	ldr	r3, [pc, #24]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401e76:	601a      	str	r2, [r3, #0]
          break;
  401e78:	e7d8      	b.n	401e2c <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401e7a:	4a05      	ldr	r2, [pc, #20]	; (401e90 <SystemCoreClockUpdate+0xf4>)
  401e7c:	6813      	ldr	r3, [r2, #0]
  401e7e:	4909      	ldr	r1, [pc, #36]	; (401ea4 <SystemCoreClockUpdate+0x108>)
  401e80:	fba1 1303 	umull	r1, r3, r1, r3
  401e84:	085b      	lsrs	r3, r3, #1
  401e86:	6013      	str	r3, [r2, #0]
  401e88:	4770      	bx	lr
  401e8a:	bf00      	nop
  401e8c:	400e0600 	.word	0x400e0600
  401e90:	2040000c 	.word	0x2040000c
  401e94:	400e1810 	.word	0x400e1810
  401e98:	00b71b00 	.word	0x00b71b00
  401e9c:	003d0900 	.word	0x003d0900
  401ea0:	007a1200 	.word	0x007a1200
  401ea4:	aaaaaaab 	.word	0xaaaaaaab

00401ea8 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401ea8:	4b16      	ldr	r3, [pc, #88]	; (401f04 <system_init_flash+0x5c>)
  401eaa:	4298      	cmp	r0, r3
  401eac:	d913      	bls.n	401ed6 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401eae:	4b16      	ldr	r3, [pc, #88]	; (401f08 <system_init_flash+0x60>)
  401eb0:	4298      	cmp	r0, r3
  401eb2:	d915      	bls.n	401ee0 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401eb4:	4b15      	ldr	r3, [pc, #84]	; (401f0c <system_init_flash+0x64>)
  401eb6:	4298      	cmp	r0, r3
  401eb8:	d916      	bls.n	401ee8 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401eba:	4b15      	ldr	r3, [pc, #84]	; (401f10 <system_init_flash+0x68>)
  401ebc:	4298      	cmp	r0, r3
  401ebe:	d917      	bls.n	401ef0 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401ec0:	4b14      	ldr	r3, [pc, #80]	; (401f14 <system_init_flash+0x6c>)
  401ec2:	4298      	cmp	r0, r3
  401ec4:	d918      	bls.n	401ef8 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  401ec6:	4b14      	ldr	r3, [pc, #80]	; (401f18 <system_init_flash+0x70>)
  401ec8:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401eca:	bf94      	ite	ls
  401ecc:	4a13      	ldrls	r2, [pc, #76]	; (401f1c <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401ece:	4a14      	ldrhi	r2, [pc, #80]	; (401f20 <system_init_flash+0x78>)
  401ed0:	4b14      	ldr	r3, [pc, #80]	; (401f24 <system_init_flash+0x7c>)
  401ed2:	601a      	str	r2, [r3, #0]
  401ed4:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401ed6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401eda:	4b12      	ldr	r3, [pc, #72]	; (401f24 <system_init_flash+0x7c>)
  401edc:	601a      	str	r2, [r3, #0]
  401ede:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401ee0:	4a11      	ldr	r2, [pc, #68]	; (401f28 <system_init_flash+0x80>)
  401ee2:	4b10      	ldr	r3, [pc, #64]	; (401f24 <system_init_flash+0x7c>)
  401ee4:	601a      	str	r2, [r3, #0]
  401ee6:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401ee8:	4a10      	ldr	r2, [pc, #64]	; (401f2c <system_init_flash+0x84>)
  401eea:	4b0e      	ldr	r3, [pc, #56]	; (401f24 <system_init_flash+0x7c>)
  401eec:	601a      	str	r2, [r3, #0]
  401eee:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401ef0:	4a0f      	ldr	r2, [pc, #60]	; (401f30 <system_init_flash+0x88>)
  401ef2:	4b0c      	ldr	r3, [pc, #48]	; (401f24 <system_init_flash+0x7c>)
  401ef4:	601a      	str	r2, [r3, #0]
  401ef6:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401ef8:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401efc:	4b09      	ldr	r3, [pc, #36]	; (401f24 <system_init_flash+0x7c>)
  401efe:	601a      	str	r2, [r3, #0]
  401f00:	4770      	bx	lr
  401f02:	bf00      	nop
  401f04:	015ef3bf 	.word	0x015ef3bf
  401f08:	02bde77f 	.word	0x02bde77f
  401f0c:	041cdb3f 	.word	0x041cdb3f
  401f10:	057bceff 	.word	0x057bceff
  401f14:	06dac2bf 	.word	0x06dac2bf
  401f18:	0839b67f 	.word	0x0839b67f
  401f1c:	04000500 	.word	0x04000500
  401f20:	04000600 	.word	0x04000600
  401f24:	400e0c00 	.word	0x400e0c00
  401f28:	04000100 	.word	0x04000100
  401f2c:	04000200 	.word	0x04000200
  401f30:	04000300 	.word	0x04000300

00401f34 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401f34:	4b0a      	ldr	r3, [pc, #40]	; (401f60 <_sbrk+0x2c>)
  401f36:	681b      	ldr	r3, [r3, #0]
  401f38:	b153      	cbz	r3, 401f50 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401f3a:	4b09      	ldr	r3, [pc, #36]	; (401f60 <_sbrk+0x2c>)
  401f3c:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401f3e:	181a      	adds	r2, r3, r0
  401f40:	4908      	ldr	r1, [pc, #32]	; (401f64 <_sbrk+0x30>)
  401f42:	4291      	cmp	r1, r2
  401f44:	db08      	blt.n	401f58 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401f46:	4610      	mov	r0, r2
  401f48:	4a05      	ldr	r2, [pc, #20]	; (401f60 <_sbrk+0x2c>)
  401f4a:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401f4c:	4618      	mov	r0, r3
  401f4e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401f50:	4a05      	ldr	r2, [pc, #20]	; (401f68 <_sbrk+0x34>)
  401f52:	4b03      	ldr	r3, [pc, #12]	; (401f60 <_sbrk+0x2c>)
  401f54:	601a      	str	r2, [r3, #0]
  401f56:	e7f0      	b.n	401f3a <_sbrk+0x6>
		return (caddr_t) -1;	
  401f58:	f04f 30ff 	mov.w	r0, #4294967295
}
  401f5c:	4770      	bx	lr
  401f5e:	bf00      	nop
  401f60:	20400ff0 	.word	0x20400ff0
  401f64:	2045fffc 	.word	0x2045fffc
  401f68:	20403270 	.word	0x20403270

00401f6c <_close>:
}

extern int _close(int file)
{
	return -1;
}
  401f6c:	f04f 30ff 	mov.w	r0, #4294967295
  401f70:	4770      	bx	lr

00401f72 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  401f72:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  401f76:	604b      	str	r3, [r1, #4]

	return 0;
}
  401f78:	2000      	movs	r0, #0
  401f7a:	4770      	bx	lr

00401f7c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  401f7c:	2001      	movs	r0, #1
  401f7e:	4770      	bx	lr

00401f80 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  401f80:	2000      	movs	r0, #0
  401f82:	4770      	bx	lr

00401f84 <diadia_callback>:
void rapida_callback(void){
	
	
}

void diadia_callback(void){
  401f84:	4770      	bx	lr
	...

00401f88 <pesada_callback>:
	
}

void pesada_callback(void){
  401f88:	b570      	push	{r4, r5, r6, lr}
	char buf[STRING_LENGTH];
	printf(7,"rapidaa");
  401f8a:	490b      	ldr	r1, [pc, #44]	; (401fb8 <pesada_callback+0x30>)
  401f8c:	2007      	movs	r0, #7
  401f8e:	4b0b      	ldr	r3, [pc, #44]	; (401fbc <pesada_callback+0x34>)
  401f90:	4798      	blx	r3
	pio_set(PIOC, LED_PIO_IDX_MASK);      // Coloca 1 no pino LED
  401f92:	4e0b      	ldr	r6, [pc, #44]	; (401fc0 <pesada_callback+0x38>)
  401f94:	f44f 7180 	mov.w	r1, #256	; 0x100
  401f98:	4630      	mov	r0, r6
  401f9a:	4b0a      	ldr	r3, [pc, #40]	; (401fc4 <pesada_callback+0x3c>)
  401f9c:	4798      	blx	r3
	delay_ms(200);                   // Delay por software de 200 ms
  401f9e:	4d0a      	ldr	r5, [pc, #40]	; (401fc8 <pesada_callback+0x40>)
  401fa0:	4628      	mov	r0, r5
  401fa2:	4c0a      	ldr	r4, [pc, #40]	; (401fcc <pesada_callback+0x44>)
  401fa4:	47a0      	blx	r4
	pio_clear(PIOC, LED_PIO_IDX_MASK);    // Coloca 0 no pino do LED
  401fa6:	f44f 7180 	mov.w	r1, #256	; 0x100
  401faa:	4630      	mov	r0, r6
  401fac:	4b08      	ldr	r3, [pc, #32]	; (401fd0 <pesada_callback+0x48>)
  401fae:	4798      	blx	r3
	delay_ms(200);                   // Delay por software de 200 ms
  401fb0:	4628      	mov	r0, r5
  401fb2:	47a0      	blx	r4
  401fb4:	bd70      	pop	{r4, r5, r6, pc}
  401fb6:	bf00      	nop
  401fb8:	004108dc 	.word	0x004108dc
  401fbc:	00402671 	.word	0x00402671
  401fc0:	400e1200 	.word	0x400e1200
  401fc4:	00401305 	.word	0x00401305
  401fc8:	009a5649 	.word	0x009a5649
  401fcc:	20400001 	.word	0x20400001
  401fd0:	00401309 	.word	0x00401309

00401fd4 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  401fd4:	b5f0      	push	{r4, r5, r6, r7, lr}
  401fd6:	b083      	sub	sp, #12
  401fd8:	4605      	mov	r5, r0
  401fda:	460c      	mov	r4, r1
	uint32_t val = 0;
  401fdc:	2300      	movs	r3, #0
  401fde:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  401fe0:	4b2a      	ldr	r3, [pc, #168]	; (40208c <usart_serial_getchar+0xb8>)
  401fe2:	4298      	cmp	r0, r3
  401fe4:	d013      	beq.n	40200e <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  401fe6:	4b2a      	ldr	r3, [pc, #168]	; (402090 <usart_serial_getchar+0xbc>)
  401fe8:	4298      	cmp	r0, r3
  401fea:	d018      	beq.n	40201e <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  401fec:	4b29      	ldr	r3, [pc, #164]	; (402094 <usart_serial_getchar+0xc0>)
  401fee:	4298      	cmp	r0, r3
  401ff0:	d01d      	beq.n	40202e <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  401ff2:	4b29      	ldr	r3, [pc, #164]	; (402098 <usart_serial_getchar+0xc4>)
  401ff4:	429d      	cmp	r5, r3
  401ff6:	d022      	beq.n	40203e <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  401ff8:	4b28      	ldr	r3, [pc, #160]	; (40209c <usart_serial_getchar+0xc8>)
  401ffa:	429d      	cmp	r5, r3
  401ffc:	d027      	beq.n	40204e <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  401ffe:	4b28      	ldr	r3, [pc, #160]	; (4020a0 <usart_serial_getchar+0xcc>)
  402000:	429d      	cmp	r5, r3
  402002:	d02e      	beq.n	402062 <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  402004:	4b27      	ldr	r3, [pc, #156]	; (4020a4 <usart_serial_getchar+0xd0>)
  402006:	429d      	cmp	r5, r3
  402008:	d035      	beq.n	402076 <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  40200a:	b003      	add	sp, #12
  40200c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  40200e:	461f      	mov	r7, r3
  402010:	4e25      	ldr	r6, [pc, #148]	; (4020a8 <usart_serial_getchar+0xd4>)
  402012:	4621      	mov	r1, r4
  402014:	4638      	mov	r0, r7
  402016:	47b0      	blx	r6
  402018:	2800      	cmp	r0, #0
  40201a:	d1fa      	bne.n	402012 <usart_serial_getchar+0x3e>
  40201c:	e7e9      	b.n	401ff2 <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  40201e:	461f      	mov	r7, r3
  402020:	4e21      	ldr	r6, [pc, #132]	; (4020a8 <usart_serial_getchar+0xd4>)
  402022:	4621      	mov	r1, r4
  402024:	4638      	mov	r0, r7
  402026:	47b0      	blx	r6
  402028:	2800      	cmp	r0, #0
  40202a:	d1fa      	bne.n	402022 <usart_serial_getchar+0x4e>
  40202c:	e7e4      	b.n	401ff8 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  40202e:	461f      	mov	r7, r3
  402030:	4e1d      	ldr	r6, [pc, #116]	; (4020a8 <usart_serial_getchar+0xd4>)
  402032:	4621      	mov	r1, r4
  402034:	4638      	mov	r0, r7
  402036:	47b0      	blx	r6
  402038:	2800      	cmp	r0, #0
  40203a:	d1fa      	bne.n	402032 <usart_serial_getchar+0x5e>
  40203c:	e7df      	b.n	401ffe <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  40203e:	461f      	mov	r7, r3
  402040:	4e19      	ldr	r6, [pc, #100]	; (4020a8 <usart_serial_getchar+0xd4>)
  402042:	4621      	mov	r1, r4
  402044:	4638      	mov	r0, r7
  402046:	47b0      	blx	r6
  402048:	2800      	cmp	r0, #0
  40204a:	d1fa      	bne.n	402042 <usart_serial_getchar+0x6e>
  40204c:	e7da      	b.n	402004 <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  40204e:	461e      	mov	r6, r3
  402050:	4d16      	ldr	r5, [pc, #88]	; (4020ac <usart_serial_getchar+0xd8>)
  402052:	a901      	add	r1, sp, #4
  402054:	4630      	mov	r0, r6
  402056:	47a8      	blx	r5
  402058:	2800      	cmp	r0, #0
  40205a:	d1fa      	bne.n	402052 <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  40205c:	9b01      	ldr	r3, [sp, #4]
  40205e:	7023      	strb	r3, [r4, #0]
  402060:	e7d3      	b.n	40200a <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  402062:	461e      	mov	r6, r3
  402064:	4d11      	ldr	r5, [pc, #68]	; (4020ac <usart_serial_getchar+0xd8>)
  402066:	a901      	add	r1, sp, #4
  402068:	4630      	mov	r0, r6
  40206a:	47a8      	blx	r5
  40206c:	2800      	cmp	r0, #0
  40206e:	d1fa      	bne.n	402066 <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  402070:	9b01      	ldr	r3, [sp, #4]
  402072:	7023      	strb	r3, [r4, #0]
  402074:	e7c9      	b.n	40200a <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  402076:	461e      	mov	r6, r3
  402078:	4d0c      	ldr	r5, [pc, #48]	; (4020ac <usart_serial_getchar+0xd8>)
  40207a:	a901      	add	r1, sp, #4
  40207c:	4630      	mov	r0, r6
  40207e:	47a8      	blx	r5
  402080:	2800      	cmp	r0, #0
  402082:	d1fa      	bne.n	40207a <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  402084:	9b01      	ldr	r3, [sp, #4]
  402086:	7023      	strb	r3, [r4, #0]
}
  402088:	e7bf      	b.n	40200a <usart_serial_getchar+0x36>
  40208a:	bf00      	nop
  40208c:	400e0800 	.word	0x400e0800
  402090:	400e0a00 	.word	0x400e0a00
  402094:	400e1a00 	.word	0x400e1a00
  402098:	400e1c00 	.word	0x400e1c00
  40209c:	40024000 	.word	0x40024000
  4020a0:	40028000 	.word	0x40028000
  4020a4:	4002c000 	.word	0x4002c000
  4020a8:	00401baf 	.word	0x00401baf
  4020ac:	00401cbb 	.word	0x00401cbb

004020b0 <usart_serial_putchar>:
{
  4020b0:	b570      	push	{r4, r5, r6, lr}
  4020b2:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  4020b4:	4b2a      	ldr	r3, [pc, #168]	; (402160 <usart_serial_putchar+0xb0>)
  4020b6:	4298      	cmp	r0, r3
  4020b8:	d013      	beq.n	4020e2 <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  4020ba:	4b2a      	ldr	r3, [pc, #168]	; (402164 <usart_serial_putchar+0xb4>)
  4020bc:	4298      	cmp	r0, r3
  4020be:	d019      	beq.n	4020f4 <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  4020c0:	4b29      	ldr	r3, [pc, #164]	; (402168 <usart_serial_putchar+0xb8>)
  4020c2:	4298      	cmp	r0, r3
  4020c4:	d01f      	beq.n	402106 <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  4020c6:	4b29      	ldr	r3, [pc, #164]	; (40216c <usart_serial_putchar+0xbc>)
  4020c8:	4298      	cmp	r0, r3
  4020ca:	d025      	beq.n	402118 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  4020cc:	4b28      	ldr	r3, [pc, #160]	; (402170 <usart_serial_putchar+0xc0>)
  4020ce:	4298      	cmp	r0, r3
  4020d0:	d02b      	beq.n	40212a <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  4020d2:	4b28      	ldr	r3, [pc, #160]	; (402174 <usart_serial_putchar+0xc4>)
  4020d4:	4298      	cmp	r0, r3
  4020d6:	d031      	beq.n	40213c <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  4020d8:	4b27      	ldr	r3, [pc, #156]	; (402178 <usart_serial_putchar+0xc8>)
  4020da:	4298      	cmp	r0, r3
  4020dc:	d037      	beq.n	40214e <usart_serial_putchar+0x9e>
	return 0;
  4020de:	2000      	movs	r0, #0
}
  4020e0:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4020e2:	461e      	mov	r6, r3
  4020e4:	4d25      	ldr	r5, [pc, #148]	; (40217c <usart_serial_putchar+0xcc>)
  4020e6:	4621      	mov	r1, r4
  4020e8:	4630      	mov	r0, r6
  4020ea:	47a8      	blx	r5
  4020ec:	2800      	cmp	r0, #0
  4020ee:	d1fa      	bne.n	4020e6 <usart_serial_putchar+0x36>
		return 1;
  4020f0:	2001      	movs	r0, #1
  4020f2:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4020f4:	461e      	mov	r6, r3
  4020f6:	4d21      	ldr	r5, [pc, #132]	; (40217c <usart_serial_putchar+0xcc>)
  4020f8:	4621      	mov	r1, r4
  4020fa:	4630      	mov	r0, r6
  4020fc:	47a8      	blx	r5
  4020fe:	2800      	cmp	r0, #0
  402100:	d1fa      	bne.n	4020f8 <usart_serial_putchar+0x48>
		return 1;
  402102:	2001      	movs	r0, #1
  402104:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  402106:	461e      	mov	r6, r3
  402108:	4d1c      	ldr	r5, [pc, #112]	; (40217c <usart_serial_putchar+0xcc>)
  40210a:	4621      	mov	r1, r4
  40210c:	4630      	mov	r0, r6
  40210e:	47a8      	blx	r5
  402110:	2800      	cmp	r0, #0
  402112:	d1fa      	bne.n	40210a <usart_serial_putchar+0x5a>
		return 1;
  402114:	2001      	movs	r0, #1
  402116:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  402118:	461e      	mov	r6, r3
  40211a:	4d18      	ldr	r5, [pc, #96]	; (40217c <usart_serial_putchar+0xcc>)
  40211c:	4621      	mov	r1, r4
  40211e:	4630      	mov	r0, r6
  402120:	47a8      	blx	r5
  402122:	2800      	cmp	r0, #0
  402124:	d1fa      	bne.n	40211c <usart_serial_putchar+0x6c>
		return 1;
  402126:	2001      	movs	r0, #1
  402128:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40212a:	461e      	mov	r6, r3
  40212c:	4d14      	ldr	r5, [pc, #80]	; (402180 <usart_serial_putchar+0xd0>)
  40212e:	4621      	mov	r1, r4
  402130:	4630      	mov	r0, r6
  402132:	47a8      	blx	r5
  402134:	2800      	cmp	r0, #0
  402136:	d1fa      	bne.n	40212e <usart_serial_putchar+0x7e>
		return 1;
  402138:	2001      	movs	r0, #1
  40213a:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40213c:	461e      	mov	r6, r3
  40213e:	4d10      	ldr	r5, [pc, #64]	; (402180 <usart_serial_putchar+0xd0>)
  402140:	4621      	mov	r1, r4
  402142:	4630      	mov	r0, r6
  402144:	47a8      	blx	r5
  402146:	2800      	cmp	r0, #0
  402148:	d1fa      	bne.n	402140 <usart_serial_putchar+0x90>
		return 1;
  40214a:	2001      	movs	r0, #1
  40214c:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  40214e:	461e      	mov	r6, r3
  402150:	4d0b      	ldr	r5, [pc, #44]	; (402180 <usart_serial_putchar+0xd0>)
  402152:	4621      	mov	r1, r4
  402154:	4630      	mov	r0, r6
  402156:	47a8      	blx	r5
  402158:	2800      	cmp	r0, #0
  40215a:	d1fa      	bne.n	402152 <usart_serial_putchar+0xa2>
		return 1;
  40215c:	2001      	movs	r0, #1
  40215e:	bd70      	pop	{r4, r5, r6, pc}
  402160:	400e0800 	.word	0x400e0800
  402164:	400e0a00 	.word	0x400e0a00
  402168:	400e1a00 	.word	0x400e1a00
  40216c:	400e1c00 	.word	0x400e1c00
  402170:	40024000 	.word	0x40024000
  402174:	40028000 	.word	0x40028000
  402178:	4002c000 	.word	0x4002c000
  40217c:	00401b9d 	.word	0x00401b9d
  402180:	00401ca5 	.word	0x00401ca5

00402184 <processa_touch>:
	
}



int processa_touch(struct botao b[], struct botao *rtn, uint N ,uint x, uint y ){
  402184:	b5f0      	push	{r4, r5, r6, r7, lr}
  402186:	b093      	sub	sp, #76	; 0x4c
  402188:	4686      	mov	lr, r0
  40218a:	460f      	mov	r7, r1
  40218c:	4614      	mov	r4, r2
  40218e:	461d      	mov	r5, r3
  402190:	9e18      	ldr	r6, [sp, #96]	; 0x60
	char buf[STRING_LENGTH];
	sprintf(buf, "entrou no touch");
  402192:	4b12      	ldr	r3, [pc, #72]	; (4021dc <processa_touch+0x58>)
  402194:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
  402196:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
	
	for(int i = 0;i < N;i++){
  40219a:	b1ec      	cbz	r4, 4021d8 <processa_touch+0x54>
  40219c:	4670      	mov	r0, lr
  40219e:	4622      	mov	r2, r4
  4021a0:	2100      	movs	r1, #0
  4021a2:	e003      	b.n	4021ac <processa_touch+0x28>
  4021a4:	3101      	adds	r1, #1
  4021a6:	3010      	adds	r0, #16
  4021a8:	4291      	cmp	r1, r2
  4021aa:	d012      	beq.n	4021d2 <processa_touch+0x4e>
		if(x >= b[i].x && x <= (b[i].x + b[i].size)) {
  4021ac:	8843      	ldrh	r3, [r0, #2]
  4021ae:	42ab      	cmp	r3, r5
  4021b0:	d8f8      	bhi.n	4021a4 <processa_touch+0x20>
  4021b2:	f8b0 e006 	ldrh.w	lr, [r0, #6]
  4021b6:	4473      	add	r3, lr
  4021b8:	429d      	cmp	r5, r3
  4021ba:	d8f3      	bhi.n	4021a4 <processa_touch+0x20>
			if(y >= b[i].y && y >= (b[i].y + b[i].size) ){
  4021bc:	8883      	ldrh	r3, [r0, #4]
  4021be:	42b3      	cmp	r3, r6
  4021c0:	d8f0      	bhi.n	4021a4 <processa_touch+0x20>
  4021c2:	449e      	add	lr, r3
  4021c4:	4576      	cmp	r6, lr
  4021c6:	d3ed      	bcc.n	4021a4 <processa_touch+0x20>
				*rtn= b[i];
  4021c8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  4021ca:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
				return 1;
  4021ce:	2001      	movs	r0, #1
  4021d0:	e000      	b.n	4021d4 <processa_touch+0x50>
			}
		}
	}
	return 0;	
  4021d2:	2000      	movs	r0, #0
}
  4021d4:	b013      	add	sp, #76	; 0x4c
  4021d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
	return 0;	
  4021d8:	2000      	movs	r0, #0
  4021da:	e7fb      	b.n	4021d4 <processa_touch+0x50>
  4021dc:	004108f0 	.word	0x004108f0

004021e0 <draw_screen>:
	mxt_write_config_reg(device, mxt_get_object_address(device,
			MXT_GEN_COMMANDPROCESSOR_T6, 0)
			+ MXT_GEN_COMMANDPROCESSOR_CALIBRATE, 0x01);
}

void draw_screen(void) {
  4021e0:	b510      	push	{r4, lr}
	ili9488_set_foreground_color(COLOR_CONVERT(COLOR_WHITE));
  4021e2:	4806      	ldr	r0, [pc, #24]	; (4021fc <draw_screen+0x1c>)
  4021e4:	4b06      	ldr	r3, [pc, #24]	; (402200 <draw_screen+0x20>)
  4021e6:	4798      	blx	r3
	ili9488_draw_filled_rectangle(0, 0, ILI9488_LCD_WIDTH-1, ILI9488_LCD_HEIGHT-1);
  4021e8:	f240 133f 	movw	r3, #319	; 0x13f
  4021ec:	f240 12df 	movw	r2, #479	; 0x1df
  4021f0:	2100      	movs	r1, #0
  4021f2:	4608      	mov	r0, r1
  4021f4:	4c03      	ldr	r4, [pc, #12]	; (402204 <draw_screen+0x24>)
  4021f6:	47a0      	blx	r4
  4021f8:	bd10      	pop	{r4, pc}
  4021fa:	bf00      	nop
  4021fc:	00fcfcfc 	.word	0x00fcfcfc
  402200:	00400e95 	.word	0x00400e95
  402204:	00401121 	.word	0x00401121

00402208 <mxt_handler>:
		}
	}
}

void mxt_handler(struct mxt_device *device, struct botao botoes[], uint Nbotoes)
{
  402208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40220c:	b0d3      	sub	sp, #332	; 0x14c
  40220e:	4680      	mov	r8, r0
  402210:	468b      	mov	fp, r1
  402212:	9203      	str	r2, [sp, #12]
	/* USART tx buffer initialized to 0 */
	char tx_buf[STRING_LENGTH * MAX_ENTRIES] = {0};
  402214:	22d2      	movs	r2, #210	; 0xd2
  402216:	2100      	movs	r1, #0
  402218:	a81d      	add	r0, sp, #116	; 0x74
  40221a:	4b23      	ldr	r3, [pc, #140]	; (4022a8 <mxt_handler+0xa0>)
  40221c:	4798      	blx	r3
	uint8_t i = 0; /* Iterator */
  40221e:	2500      	movs	r5, #0
	do {
		/* Temporary buffer for each new touch event line */
		char buf[STRING_LENGTH];
	
		/* Read next next touch event in the queue, discard if read fails */
		if (mxt_read_touch_event(device, &touch_event) != STATUS_OK) {
  402220:	4f22      	ldr	r7, [pc, #136]	; (4022ac <mxt_handler+0xa4>)
		 // eixos trocados (quando na vertical LCD)
		uint32_t conv_x = convert_axis_system_x(touch_event.y);
		uint32_t conv_y = convert_axis_system_y(touch_event.x);
		
		/* Format a new entry in the data string that will be sent over USART */
		sprintf(buf, "X:%3d Y:%3d \n", conv_x, conv_y);
  402222:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 4022c8 <mxt_handler+0xc0>
  402226:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 4022cc <mxt_handler+0xc4>
  40222a:	e00b      	b.n	402244 <mxt_handler+0x3c>
			bAtual.p_handler();
		//update_screen(conv_x, conv_y);
		/* -----------------------------------------------------*/

		/* Add the new string to the string buffer */
		strcat(tx_buf, buf);
  40222c:	a908      	add	r1, sp, #32
  40222e:	a81d      	add	r0, sp, #116	; 0x74
  402230:	4b1f      	ldr	r3, [pc, #124]	; (4022b0 <mxt_handler+0xa8>)
  402232:	4798      	blx	r3
		i++;
  402234:	3501      	adds	r5, #1
  402236:	b2ed      	uxtb	r5, r5

		/* Check if there is still messages in the queue and
		 * if we have reached the maximum numbers of events */
	} while ((mxt_is_message_pending(device)) & (i < MAX_ENTRIES));
  402238:	4640      	mov	r0, r8
  40223a:	4b1e      	ldr	r3, [pc, #120]	; (4022b4 <mxt_handler+0xac>)
  40223c:	4798      	blx	r3
  40223e:	2d02      	cmp	r5, #2
  402240:	d824      	bhi.n	40228c <mxt_handler+0x84>
  402242:	b318      	cbz	r0, 40228c <mxt_handler+0x84>
		if (mxt_read_touch_event(device, &touch_event) != STATUS_OK) {
  402244:	a91a      	add	r1, sp, #104	; 0x68
  402246:	4640      	mov	r0, r8
  402248:	47b8      	blx	r7
  40224a:	2800      	cmp	r0, #0
  40224c:	d1f4      	bne.n	402238 <mxt_handler+0x30>
		uint32_t conv_x = convert_axis_system_x(touch_event.y);
  40224e:	f8bd 406c 	ldrh.w	r4, [sp, #108]	; 0x6c
	return ILI9488_LCD_WIDTH - ILI9488_LCD_WIDTH*touch_y/4096;
  402252:	ebc4 1404 	rsb	r4, r4, r4, lsl #4
  402256:	f3c4 14d3 	ubfx	r4, r4, #7, #20
  40225a:	f5c4 74f0 	rsb	r4, r4, #480	; 0x1e0
		uint32_t conv_y = convert_axis_system_y(touch_event.x);
  40225e:	f8bd 606a 	ldrh.w	r6, [sp, #106]	; 0x6a
	return ILI9488_LCD_HEIGHT*touch_x/4096;
  402262:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  402266:	f3c6 1693 	ubfx	r6, r6, #6, #20
		sprintf(buf, "X:%3d Y:%3d \n", conv_x, conv_y);
  40226a:	4633      	mov	r3, r6
  40226c:	4622      	mov	r2, r4
  40226e:	4651      	mov	r1, sl
  402270:	a808      	add	r0, sp, #32
  402272:	47c8      	blx	r9
		if(processa_touch(botoes, &bAtual, Nbotoes, conv_x, conv_y))
  402274:	9600      	str	r6, [sp, #0]
  402276:	4623      	mov	r3, r4
  402278:	9a03      	ldr	r2, [sp, #12]
  40227a:	a904      	add	r1, sp, #16
  40227c:	4658      	mov	r0, fp
  40227e:	4c0e      	ldr	r4, [pc, #56]	; (4022b8 <mxt_handler+0xb0>)
  402280:	47a0      	blx	r4
  402282:	2800      	cmp	r0, #0
  402284:	d0d2      	beq.n	40222c <mxt_handler+0x24>
			bAtual.p_handler();
  402286:	9b07      	ldr	r3, [sp, #28]
  402288:	4798      	blx	r3
  40228a:	e7cf      	b.n	40222c <mxt_handler+0x24>

	/* If there is any entries in the buffer, send them over USART */
	if (i > 0) {
  40228c:	b915      	cbnz	r5, 402294 <mxt_handler+0x8c>
		usart_serial_write_packet(USART_SERIAL_EXAMPLE, (uint8_t *)tx_buf, strlen(tx_buf));
	}
}
  40228e:	b053      	add	sp, #332	; 0x14c
  402290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		usart_serial_write_packet(USART_SERIAL_EXAMPLE, (uint8_t *)tx_buf, strlen(tx_buf));
  402294:	a81d      	add	r0, sp, #116	; 0x74
  402296:	4b09      	ldr	r3, [pc, #36]	; (4022bc <mxt_handler+0xb4>)
  402298:	4798      	blx	r3
  40229a:	4602      	mov	r2, r0
  40229c:	a91d      	add	r1, sp, #116	; 0x74
  40229e:	4808      	ldr	r0, [pc, #32]	; (4022c0 <mxt_handler+0xb8>)
  4022a0:	4b08      	ldr	r3, [pc, #32]	; (4022c4 <mxt_handler+0xbc>)
  4022a2:	4798      	blx	r3
}
  4022a4:	e7f3      	b.n	40228e <mxt_handler+0x86>
  4022a6:	bf00      	nop
  4022a8:	00402c09 	.word	0x00402c09
  4022ac:	004005dd 	.word	0x004005dd
  4022b0:	00402ecd 	.word	0x00402ecd
  4022b4:	0040056d 	.word	0x0040056d
  4022b8:	00402185 	.word	0x00402185
  4022bc:	00403001 	.word	0x00403001
  4022c0:	40028000 	.word	0x40028000
  4022c4:	004006c1 	.word	0x004006c1
  4022c8:	004108cc 	.word	0x004108cc
  4022cc:	00402e81 	.word	0x00402e81

004022d0 <main>:


int main(void)
{
  4022d0:	b580      	push	{r7, lr}
  4022d2:	b0b2      	sub	sp, #200	; 0xc8
		.charlength   = USART_SERIAL_CHAR_LENGTH,
		.paritytype   = USART_SERIAL_PARITY,
		.stopbits     = USART_SERIAL_STOP_BIT
	};

	sysclk_init(); /* Initialize system clocks */
  4022d4:	4ba0      	ldr	r3, [pc, #640]	; (402558 <main+0x288>)
  4022d6:	4798      	blx	r3
	board_init();  /* Initialize board */
  4022d8:	4ba0      	ldr	r3, [pc, #640]	; (40255c <main+0x28c>)
  4022da:	4798      	blx	r3
	g_ili9488_display_opt.ul_width = ILI9488_LCD_WIDTH;
  4022dc:	48a0      	ldr	r0, [pc, #640]	; (402560 <main+0x290>)
  4022de:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  4022e2:	6003      	str	r3, [r0, #0]
	g_ili9488_display_opt.ul_height = ILI9488_LCD_HEIGHT;
  4022e4:	f44f 73a0 	mov.w	r3, #320	; 0x140
  4022e8:	6043      	str	r3, [r0, #4]
	g_ili9488_display_opt.foreground_color = COLOR_CONVERT(COLOR_WHITE);
  4022ea:	4b9e      	ldr	r3, [pc, #632]	; (402564 <main+0x294>)
  4022ec:	6083      	str	r3, [r0, #8]
	g_ili9488_display_opt.background_color = COLOR_CONVERT(COLOR_WHITE);
  4022ee:	60c3      	str	r3, [r0, #12]
	ili9488_init(&g_ili9488_display_opt);
  4022f0:	4b9d      	ldr	r3, [pc, #628]	; (402568 <main+0x298>)
  4022f2:	4798      	blx	r3
	configure_lcd();
	draw_screen();
  4022f4:	4b9d      	ldr	r3, [pc, #628]	; (40256c <main+0x29c>)
  4022f6:	4798      	blx	r3
		pmc_enable_periph_clk(LED_PIO_ID);
  4022f8:	200c      	movs	r0, #12
  4022fa:	f8df 8304 	ldr.w	r8, [pc, #772]	; 402600 <main+0x330>
  4022fe:	47c0      	blx	r8
		pio_set_output(LED_PIO, LED_PIO_IDX_MASK, 0, 0, 0);
  402300:	2400      	movs	r4, #0
  402302:	9400      	str	r4, [sp, #0]
  402304:	4623      	mov	r3, r4
  402306:	4622      	mov	r2, r4
  402308:	f44f 7180 	mov.w	r1, #256	; 0x100
  40230c:	4898      	ldr	r0, [pc, #608]	; (402570 <main+0x2a0>)
  40230e:	4d99      	ldr	r5, [pc, #612]	; (402574 <main+0x2a4>)
  402310:	47a8      	blx	r5
	uint8_t t8_object[] = {
  402312:	4d99      	ldr	r5, [pc, #612]	; (402578 <main+0x2a8>)
  402314:	ab06      	add	r3, sp, #24
  402316:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
  40231a:	c303      	stmia	r3!, {r0, r1}
  40231c:	801a      	strh	r2, [r3, #0]
	uint8_t t9_object[] = {
  40231e:	ae15      	add	r6, sp, #84	; 0x54
  402320:	f105 070c 	add.w	r7, r5, #12
  402324:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
  402326:	c60f      	stmia	r6!, {r0, r1, r2, r3}
  402328:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
  40232a:	c60f      	stmia	r6!, {r0, r1, r2, r3}
  40232c:	683b      	ldr	r3, [r7, #0]
  40232e:	6033      	str	r3, [r6, #0]
	uint8_t t46_object[] = {
  402330:	ab03      	add	r3, sp, #12
  402332:	f105 0230 	add.w	r2, r5, #48	; 0x30
  402336:	ca07      	ldmia	r2, {r0, r1, r2}
  402338:	c303      	stmia	r3!, {r0, r1}
  40233a:	701a      	strb	r2, [r3, #0]
	uint8_t t56_object[] = {
  40233c:	ae0c      	add	r6, sp, #48	; 0x30
  40233e:	353c      	adds	r5, #60	; 0x3c
  402340:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  402342:	c60f      	stmia	r6!, {r0, r1, r2, r3}
  402344:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  402346:	c60f      	stmia	r6!, {r0, r1, r2, r3}
  402348:	682b      	ldr	r3, [r5, #0]
  40234a:	7033      	strb	r3, [r6, #0]
	twihs_master_options_t twi_opt = {
  40234c:	940b      	str	r4, [sp, #44]	; 0x2c
  40234e:	4b8b      	ldr	r3, [pc, #556]	; (40257c <main+0x2ac>)
  402350:	930a      	str	r3, [sp, #40]	; 0x28
  402352:	264a      	movs	r6, #74	; 0x4a
  402354:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
typedef twihs_packet_t twihs_package_t;

static inline uint32_t twihs_master_setup(twihs_master_t p_twihs,
		twihs_master_options_t *p_opt)
{
	p_opt->master_clk = sysclk_get_peripheral_hz();
  402358:	f8df 92a8 	ldr.w	r9, [pc, #680]	; 402604 <main+0x334>
  40235c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
  402360:	2013      	movs	r0, #19
  402362:	47c0      	blx	r8
#endif		
	} else {
		// Do Nothing
	}
#endif
	return (twihs_master_init(p_twihs, p_opt));
  402364:	4d86      	ldr	r5, [pc, #536]	; (402580 <main+0x2b0>)
  402366:	a909      	add	r1, sp, #36	; 0x24
  402368:	4628      	mov	r0, r5
  40236a:	4b86      	ldr	r3, [pc, #536]	; (402584 <main+0x2b4>)
  40236c:	4798      	blx	r3
	status = mxt_init_device(device, MAXTOUCH_TWI_INTERFACE,
  40236e:	2302      	movs	r3, #2
  402370:	4632      	mov	r2, r6
  402372:	4629      	mov	r1, r5
  402374:	a82a      	add	r0, sp, #168	; 0xa8
  402376:	4d84      	ldr	r5, [pc, #528]	; (402588 <main+0x2b8>)
  402378:	47a8      	blx	r5
	mxt_write_config_reg(device, mxt_get_object_address(device,
  40237a:	4622      	mov	r2, r4
  40237c:	2106      	movs	r1, #6
  40237e:	a82a      	add	r0, sp, #168	; 0xa8
  402380:	4d82      	ldr	r5, [pc, #520]	; (40258c <main+0x2bc>)
  402382:	47a8      	blx	r5
  402384:	2201      	movs	r2, #1
  402386:	4601      	mov	r1, r0
  402388:	a82a      	add	r0, sp, #168	; 0xa8
  40238a:	4e81      	ldr	r6, [pc, #516]	; (402590 <main+0x2c0>)
  40238c:	47b0      	blx	r6
	delay_ms(MXT_RESET_TIME);
  40238e:	4881      	ldr	r0, [pc, #516]	; (402594 <main+0x2c4>)
  402390:	4b81      	ldr	r3, [pc, #516]	; (402598 <main+0x2c8>)
  402392:	4798      	blx	r3
	mxt_write_config_reg(device, mxt_get_object_address(device,
  402394:	4622      	mov	r2, r4
  402396:	2107      	movs	r1, #7
  402398:	a82a      	add	r0, sp, #168	; 0xa8
  40239a:	47a8      	blx	r5
  40239c:	2220      	movs	r2, #32
  40239e:	4601      	mov	r1, r0
  4023a0:	a82a      	add	r0, sp, #168	; 0xa8
  4023a2:	47b0      	blx	r6
	mxt_write_config_reg(device, mxt_get_object_address(device,
  4023a4:	4622      	mov	r2, r4
  4023a6:	2107      	movs	r1, #7
  4023a8:	a82a      	add	r0, sp, #168	; 0xa8
  4023aa:	47a8      	blx	r5
  4023ac:	1c41      	adds	r1, r0, #1
  4023ae:	2210      	movs	r2, #16
  4023b0:	b289      	uxth	r1, r1
  4023b2:	a82a      	add	r0, sp, #168	; 0xa8
  4023b4:	47b0      	blx	r6
	mxt_write_config_reg(device, mxt_get_object_address(device,
  4023b6:	4622      	mov	r2, r4
  4023b8:	2107      	movs	r1, #7
  4023ba:	a82a      	add	r0, sp, #168	; 0xa8
  4023bc:	47a8      	blx	r5
  4023be:	1c81      	adds	r1, r0, #2
  4023c0:	224b      	movs	r2, #75	; 0x4b
  4023c2:	b289      	uxth	r1, r1
  4023c4:	a82a      	add	r0, sp, #168	; 0xa8
  4023c6:	47b0      	blx	r6
	mxt_write_config_reg(device, mxt_get_object_address(device,
  4023c8:	4622      	mov	r2, r4
  4023ca:	2107      	movs	r1, #7
  4023cc:	a82a      	add	r0, sp, #168	; 0xa8
  4023ce:	47a8      	blx	r5
  4023d0:	1cc1      	adds	r1, r0, #3
  4023d2:	2284      	movs	r2, #132	; 0x84
  4023d4:	b289      	uxth	r1, r1
  4023d6:	a82a      	add	r0, sp, #168	; 0xa8
  4023d8:	47b0      	blx	r6
	mxt_write_config_object(device, mxt_get_object_address(device,
  4023da:	4622      	mov	r2, r4
  4023dc:	2108      	movs	r1, #8
  4023de:	a82a      	add	r0, sp, #168	; 0xa8
  4023e0:	47a8      	blx	r5
  4023e2:	aa06      	add	r2, sp, #24
  4023e4:	4601      	mov	r1, r0
  4023e6:	a82a      	add	r0, sp, #168	; 0xa8
  4023e8:	4f6c      	ldr	r7, [pc, #432]	; (40259c <main+0x2cc>)
  4023ea:	47b8      	blx	r7
	mxt_write_config_object(device, mxt_get_object_address(device,
  4023ec:	4622      	mov	r2, r4
  4023ee:	2109      	movs	r1, #9
  4023f0:	a82a      	add	r0, sp, #168	; 0xa8
  4023f2:	47a8      	blx	r5
  4023f4:	aa15      	add	r2, sp, #84	; 0x54
  4023f6:	4601      	mov	r1, r0
  4023f8:	a82a      	add	r0, sp, #168	; 0xa8
  4023fa:	47b8      	blx	r7
	mxt_write_config_object(device, mxt_get_object_address(device,
  4023fc:	4622      	mov	r2, r4
  4023fe:	212e      	movs	r1, #46	; 0x2e
  402400:	a82a      	add	r0, sp, #168	; 0xa8
  402402:	47a8      	blx	r5
  402404:	aa03      	add	r2, sp, #12
  402406:	4601      	mov	r1, r0
  402408:	a82a      	add	r0, sp, #168	; 0xa8
  40240a:	47b8      	blx	r7
	mxt_write_config_object(device, mxt_get_object_address(device,
  40240c:	4622      	mov	r2, r4
  40240e:	2138      	movs	r1, #56	; 0x38
  402410:	a82a      	add	r0, sp, #168	; 0xa8
  402412:	47a8      	blx	r5
  402414:	aa0c      	add	r2, sp, #48	; 0x30
  402416:	4601      	mov	r1, r0
  402418:	a82a      	add	r0, sp, #168	; 0xa8
  40241a:	47b8      	blx	r7
	mxt_write_config_reg(device, mxt_get_object_address(device,
  40241c:	4622      	mov	r2, r4
  40241e:	2106      	movs	r1, #6
  402420:	a82a      	add	r0, sp, #168	; 0xa8
  402422:	47a8      	blx	r5
  402424:	1c81      	adds	r1, r0, #2
  402426:	2201      	movs	r2, #1
  402428:	b289      	uxth	r1, r1
  40242a:	a82a      	add	r0, sp, #168	; 0xa8
  40242c:	47b0      	blx	r6
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  40242e:	4d5c      	ldr	r5, [pc, #368]	; (4025a0 <main+0x2d0>)
  402430:	4b5c      	ldr	r3, [pc, #368]	; (4025a4 <main+0x2d4>)
  402432:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  402434:	4a5c      	ldr	r2, [pc, #368]	; (4025a8 <main+0x2d8>)
  402436:	4b5d      	ldr	r3, [pc, #372]	; (4025ac <main+0x2dc>)
  402438:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  40243a:	4a5d      	ldr	r2, [pc, #372]	; (4025b0 <main+0x2e0>)
  40243c:	4b5d      	ldr	r3, [pc, #372]	; (4025b4 <main+0x2e4>)
  40243e:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  402440:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  402444:	9315      	str	r3, [sp, #84]	; 0x54
	usart_settings.char_length = opt->charlength;
  402446:	23c0      	movs	r3, #192	; 0xc0
  402448:	9316      	str	r3, [sp, #88]	; 0x58
	usart_settings.parity_type = opt->paritytype;
  40244a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40244e:	9317      	str	r3, [sp, #92]	; 0x5c
	usart_settings.stop_bits= opt->stopbits;
  402450:	9418      	str	r4, [sp, #96]	; 0x60
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  402452:	9419      	str	r4, [sp, #100]	; 0x64
  402454:	200e      	movs	r0, #14
  402456:	47c0      	blx	r8
		usart_init_rs232(p_usart, &usart_settings,
  402458:	464a      	mov	r2, r9
  40245a:	a915      	add	r1, sp, #84	; 0x54
  40245c:	4628      	mov	r0, r5
  40245e:	4b56      	ldr	r3, [pc, #344]	; (4025b8 <main+0x2e8>)
  402460:	4798      	blx	r3
		usart_enable_tx(p_usart);
  402462:	4628      	mov	r0, r5
  402464:	4b55      	ldr	r3, [pc, #340]	; (4025bc <main+0x2ec>)
  402466:	4798      	blx	r3
		usart_enable_rx(p_usart);
  402468:	4628      	mov	r0, r5
  40246a:	4b55      	ldr	r3, [pc, #340]	; (4025c0 <main+0x2f0>)
  40246c:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  40246e:	4e55      	ldr	r6, [pc, #340]	; (4025c4 <main+0x2f4>)
  402470:	6833      	ldr	r3, [r6, #0]
  402472:	4621      	mov	r1, r4
  402474:	6898      	ldr	r0, [r3, #8]
  402476:	4d54      	ldr	r5, [pc, #336]	; (4025c8 <main+0x2f8>)
  402478:	47a8      	blx	r5
	setbuf(stdin, NULL);
  40247a:	6833      	ldr	r3, [r6, #0]
  40247c:	4621      	mov	r1, r4
  40247e:	6858      	ldr	r0, [r3, #4]
  402480:	47a8      	blx	r5
	mxt_init(&device);
	
	/* Initialize stdio on USART */
	stdio_serial_init(USART_SERIAL_EXAMPLE, &usart_serial_options);

	printf("\n\rmaXTouch data USART transmitter\n\r");
  402482:	4852      	ldr	r0, [pc, #328]	; (4025cc <main+0x2fc>)
  402484:	4b52      	ldr	r3, [pc, #328]	; (4025d0 <main+0x300>)
  402486:	4798      	blx	r3
	lavagemRapida.size = 100;
	lavagemRapida.p_handler = rapida_callback;
	lavagemRapida.image = &play;

	struct botao LavagemDiadia;
	LavagemDiadia.x = 140;
  402488:	238c      	movs	r3, #140	; 0x8c
  40248a:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
	LavagemDiadia.y = 50;
  40248e:	2632      	movs	r6, #50	; 0x32
  402490:	f8ad 609c 	strh.w	r6, [sp, #156]	; 0x9c
	LavagemDiadia.size = 100;
  402494:	2564      	movs	r5, #100	; 0x64
  402496:	f8ad 509e 	strh.w	r5, [sp, #158]	; 0x9e
	LavagemDiadia.p_handler = diadia_callback;
  40249a:	4b4e      	ldr	r3, [pc, #312]	; (4025d4 <main+0x304>)
  40249c:	9329      	str	r3, [sp, #164]	; 0xa4
	LavagemDiadia.image = &play;
  40249e:	4b4e      	ldr	r3, [pc, #312]	; (4025d8 <main+0x308>)
  4024a0:	9328      	str	r3, [sp, #160]	; 0xa0
	
	struct botao LavagemPesada;
	LavagemPesada.x = 20;
  4024a2:	2014      	movs	r0, #20
  4024a4:	f8ad 008a 	strh.w	r0, [sp, #138]	; 0x8a
	LavagemPesada.y = 50;
  4024a8:	f8ad 608c 	strh.w	r6, [sp, #140]	; 0x8c
	LavagemPesada.size = 100;
  4024ac:	f8ad 508e 	strh.w	r5, [sp, #142]	; 0x8e
	LavagemPesada.p_handler = pesada_callback;
  4024b0:	4a4a      	ldr	r2, [pc, #296]	; (4025dc <main+0x30c>)
  4024b2:	9225      	str	r2, [sp, #148]	; 0x94
	LavagemPesada.image = &play;
  4024b4:	9324      	str	r3, [sp, #144]	; 0x90

	
	


	ili9488_draw_pixmap(LavagemPesada.x, 
  4024b6:	f8df 8150 	ldr.w	r8, [pc, #336]	; 402608 <main+0x338>
  4024ba:	f8cd 8000 	str.w	r8, [sp]
  4024be:	462b      	mov	r3, r5
  4024c0:	462a      	mov	r2, r5
  4024c2:	4631      	mov	r1, r6
  4024c4:	4f46      	ldr	r7, [pc, #280]	; (4025e0 <main+0x310>)
  4024c6:	47b8      	blx	r7
						LavagemPesada.image->width, 
						LavagemPesada.image->height, 
						LavagemPesada.image->data);
	ili9488_draw_pixmap(LavagemDiadia.x,
						LavagemDiadia.y,
						LavagemDiadia.image->width,
  4024c8:	f8dd e0a0 	ldr.w	lr, [sp, #160]	; 0xa0
	ili9488_draw_pixmap(LavagemDiadia.x,
  4024cc:	f8be c006 	ldrh.w	ip, [lr, #6]
  4024d0:	f8be 2004 	ldrh.w	r2, [lr, #4]
  4024d4:	f8bd 109c 	ldrh.w	r1, [sp, #156]	; 0x9c
  4024d8:	f8bd 009a 	ldrh.w	r0, [sp, #154]	; 0x9a
  4024dc:	f8de 3000 	ldr.w	r3, [lr]
  4024e0:	9300      	str	r3, [sp, #0]
  4024e2:	4663      	mov	r3, ip
  4024e4:	47b8      	blx	r7
						LavagemDiadia.image->height,
						LavagemDiadia.image->data);
	ili9488_draw_pixmap(lavagemRapida.x,
  4024e6:	f8cd 8000 	str.w	r8, [sp]
  4024ea:	462b      	mov	r3, r5
  4024ec:	462a      	mov	r2, r5
  4024ee:	4631      	mov	r1, r6
  4024f0:	f44f 7082 	mov.w	r0, #260	; 0x104
  4024f4:	47b8      	blx	r7
						lavagemRapida.y,
						lavagemRapida.image->width,
						lavagemRapida.image->height,
						lavagemRapida.image->data);
	
	ili9488_set_foreground_color(COLOR_CONVERT(COLOR_BLACK));
  4024f6:	4620      	mov	r0, r4
  4024f8:	4b3a      	ldr	r3, [pc, #232]	; (4025e4 <main+0x314>)
  4024fa:	4798      	blx	r3
	ili9488_draw_string(LavagemPesada.x + LavagemPesada.image->width/2 -30,
  4024fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
						LavagemPesada.y + LavagemPesada.image->height+10, 
  4024fe:	f8bd 108c 	ldrh.w	r1, [sp, #140]	; 0x8c
  402502:	88da      	ldrh	r2, [r3, #6]
  402504:	4411      	add	r1, r2
	ili9488_draw_string(LavagemPesada.x + LavagemPesada.image->width/2 -30,
  402506:	889b      	ldrh	r3, [r3, #4]
  402508:	f8bd 008a 	ldrh.w	r0, [sp, #138]	; 0x8a
  40250c:	eb00 0053 	add.w	r0, r0, r3, lsr #1
  402510:	4a35      	ldr	r2, [pc, #212]	; (4025e8 <main+0x318>)
  402512:	310a      	adds	r1, #10
  402514:	381e      	subs	r0, #30
  402516:	4d35      	ldr	r5, [pc, #212]	; (4025ec <main+0x31c>)
  402518:	47a8      	blx	r5
						"Pesada" );
	ili9488_draw_string(LavagemDiadia.x + LavagemDiadia.image->width/2-30,
  40251a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
						LavagemDiadia.y + LavagemDiadia.image->height+10,
  40251c:	f8bd 109c 	ldrh.w	r1, [sp, #156]	; 0x9c
  402520:	88da      	ldrh	r2, [r3, #6]
  402522:	4411      	add	r1, r2
	ili9488_draw_string(LavagemDiadia.x + LavagemDiadia.image->width/2-30,
  402524:	889b      	ldrh	r3, [r3, #4]
  402526:	f8bd 009a 	ldrh.w	r0, [sp, #154]	; 0x9a
  40252a:	eb00 0053 	add.w	r0, r0, r3, lsr #1
  40252e:	4a30      	ldr	r2, [pc, #192]	; (4025f0 <main+0x320>)
  402530:	310a      	adds	r1, #10
  402532:	381e      	subs	r0, #30
  402534:	47a8      	blx	r5
						"Dia a Dia" );
	ili9488_draw_string(lavagemRapida.x + lavagemRapida.image->width/2-30,
  402536:	4a2f      	ldr	r2, [pc, #188]	; (4025f4 <main+0x324>)
  402538:	21a0      	movs	r1, #160	; 0xa0
  40253a:	f44f 708c 	mov.w	r0, #280	; 0x118
  40253e:	47a8      	blx	r5
						lavagemRapida.y + lavagemRapida.image->height+10,
						"Rapida" );
	
	struct botao botoes[] = {&LavagemPesada, &LavagemDiadia};
  402540:	941f      	str	r4, [sp, #124]	; 0x7c
  402542:	9420      	str	r4, [sp, #128]	; 0x80
  402544:	9421      	str	r4, [sp, #132]	; 0x84
  402546:	ab22      	add	r3, sp, #136	; 0x88
  402548:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
  40254c:	ab26      	add	r3, sp, #152	; 0x98
  40254e:	f8ad 307a 	strh.w	r3, [sp, #122]	; 0x7a
	/* -----------------------------------------------------*/

	while (true) {
		/* Check for any pending messages and run message handler if any
		 * message is found in the queue */
		if (mxt_is_message_pending(&device)) {
  402552:	4c29      	ldr	r4, [pc, #164]	; (4025f8 <main+0x328>)
			mxt_handler(&device, botoes, 2);
  402554:	4d29      	ldr	r5, [pc, #164]	; (4025fc <main+0x32c>)
  402556:	e059      	b.n	40260c <main+0x33c>
  402558:	0040064d 	.word	0x0040064d
  40255c:	004009b5 	.word	0x004009b5
  402560:	20401034 	.word	0x20401034
  402564:	00fcfcfc 	.word	0x00fcfcfc
  402568:	00400f21 	.word	0x00400f21
  40256c:	004021e1 	.word	0x004021e1
  402570:	400e1200 	.word	0x400e1200
  402574:	004013d5 	.word	0x004013d5
  402578:	004092fc 	.word	0x004092fc
  40257c:	00061a80 	.word	0x00061a80
  402580:	40018000 	.word	0x40018000
  402584:	00401a1d 	.word	0x00401a1d
  402588:	004001d5 	.word	0x004001d5
  40258c:	0040046d 	.word	0x0040046d
  402590:	00400525 	.word	0x00400525
  402594:	003228d8 	.word	0x003228d8
  402598:	20400001 	.word	0x20400001
  40259c:	004004ad 	.word	0x004004ad
  4025a0:	40028000 	.word	0x40028000
  4025a4:	20401030 	.word	0x20401030
  4025a8:	004020b1 	.word	0x004020b1
  4025ac:	2040102c 	.word	0x2040102c
  4025b0:	00401fd5 	.word	0x00401fd5
  4025b4:	20401028 	.word	0x20401028
  4025b8:	00401c45 	.word	0x00401c45
  4025bc:	00401c99 	.word	0x00401c99
  4025c0:	00401c9f 	.word	0x00401c9f
  4025c4:	20400010 	.word	0x20400010
  4025c8:	00402ce1 	.word	0x00402ce1
  4025cc:	0041088c 	.word	0x0041088c
  4025d0:	00402671 	.word	0x00402671
  4025d4:	00401f85 	.word	0x00401f85
  4025d8:	004108e4 	.word	0x004108e4
  4025dc:	00401f89 	.word	0x00401f89
  4025e0:	0040128d 	.word	0x0040128d
  4025e4:	00400e95 	.word	0x00400e95
  4025e8:	004108b0 	.word	0x004108b0
  4025ec:	004011dd 	.word	0x004011dd
  4025f0:	004108b8 	.word	0x004108b8
  4025f4:	004108c4 	.word	0x004108c4
  4025f8:	0040056d 	.word	0x0040056d
  4025fc:	00402209 	.word	0x00402209
  402600:	004017d1 	.word	0x004017d1
  402604:	08f0d180 	.word	0x08f0d180
  402608:	0040935c 	.word	0x0040935c
		if (mxt_is_message_pending(&device)) {
  40260c:	a82a      	add	r0, sp, #168	; 0xa8
  40260e:	47a0      	blx	r4
  402610:	2800      	cmp	r0, #0
  402612:	d0fb      	beq.n	40260c <main+0x33c>
			mxt_handler(&device, botoes, 2);
  402614:	2202      	movs	r2, #2
  402616:	a91e      	add	r1, sp, #120	; 0x78
  402618:	a82a      	add	r0, sp, #168	; 0xa8
  40261a:	47a8      	blx	r5
  40261c:	e7f6      	b.n	40260c <main+0x33c>
  40261e:	bf00      	nop

00402620 <__libc_init_array>:
  402620:	b570      	push	{r4, r5, r6, lr}
  402622:	4e0f      	ldr	r6, [pc, #60]	; (402660 <__libc_init_array+0x40>)
  402624:	4d0f      	ldr	r5, [pc, #60]	; (402664 <__libc_init_array+0x44>)
  402626:	1b76      	subs	r6, r6, r5
  402628:	10b6      	asrs	r6, r6, #2
  40262a:	bf18      	it	ne
  40262c:	2400      	movne	r4, #0
  40262e:	d005      	beq.n	40263c <__libc_init_array+0x1c>
  402630:	3401      	adds	r4, #1
  402632:	f855 3b04 	ldr.w	r3, [r5], #4
  402636:	4798      	blx	r3
  402638:	42a6      	cmp	r6, r4
  40263a:	d1f9      	bne.n	402630 <__libc_init_array+0x10>
  40263c:	4e0a      	ldr	r6, [pc, #40]	; (402668 <__libc_init_array+0x48>)
  40263e:	4d0b      	ldr	r5, [pc, #44]	; (40266c <__libc_init_array+0x4c>)
  402640:	1b76      	subs	r6, r6, r5
  402642:	f00e fab1 	bl	410ba8 <_init>
  402646:	10b6      	asrs	r6, r6, #2
  402648:	bf18      	it	ne
  40264a:	2400      	movne	r4, #0
  40264c:	d006      	beq.n	40265c <__libc_init_array+0x3c>
  40264e:	3401      	adds	r4, #1
  402650:	f855 3b04 	ldr.w	r3, [r5], #4
  402654:	4798      	blx	r3
  402656:	42a6      	cmp	r6, r4
  402658:	d1f9      	bne.n	40264e <__libc_init_array+0x2e>
  40265a:	bd70      	pop	{r4, r5, r6, pc}
  40265c:	bd70      	pop	{r4, r5, r6, pc}
  40265e:	bf00      	nop
  402660:	00410bb4 	.word	0x00410bb4
  402664:	00410bb4 	.word	0x00410bb4
  402668:	00410bbc 	.word	0x00410bbc
  40266c:	00410bb4 	.word	0x00410bb4

00402670 <iprintf>:
  402670:	b40f      	push	{r0, r1, r2, r3}
  402672:	b500      	push	{lr}
  402674:	4907      	ldr	r1, [pc, #28]	; (402694 <iprintf+0x24>)
  402676:	b083      	sub	sp, #12
  402678:	ab04      	add	r3, sp, #16
  40267a:	6808      	ldr	r0, [r1, #0]
  40267c:	f853 2b04 	ldr.w	r2, [r3], #4
  402680:	6881      	ldr	r1, [r0, #8]
  402682:	9301      	str	r3, [sp, #4]
  402684:	f001 ff98 	bl	4045b8 <_vfiprintf_r>
  402688:	b003      	add	sp, #12
  40268a:	f85d eb04 	ldr.w	lr, [sp], #4
  40268e:	b004      	add	sp, #16
  402690:	4770      	bx	lr
  402692:	bf00      	nop
  402694:	20400010 	.word	0x20400010

00402698 <malloc>:
  402698:	4b02      	ldr	r3, [pc, #8]	; (4026a4 <malloc+0xc>)
  40269a:	4601      	mov	r1, r0
  40269c:	6818      	ldr	r0, [r3, #0]
  40269e:	f000 b803 	b.w	4026a8 <_malloc_r>
  4026a2:	bf00      	nop
  4026a4:	20400010 	.word	0x20400010

004026a8 <_malloc_r>:
  4026a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4026ac:	f101 060b 	add.w	r6, r1, #11
  4026b0:	2e16      	cmp	r6, #22
  4026b2:	b083      	sub	sp, #12
  4026b4:	4605      	mov	r5, r0
  4026b6:	f240 809e 	bls.w	4027f6 <_malloc_r+0x14e>
  4026ba:	f036 0607 	bics.w	r6, r6, #7
  4026be:	f100 80bd 	bmi.w	40283c <_malloc_r+0x194>
  4026c2:	42b1      	cmp	r1, r6
  4026c4:	f200 80ba 	bhi.w	40283c <_malloc_r+0x194>
  4026c8:	f000 faec 	bl	402ca4 <__malloc_lock>
  4026cc:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4026d0:	f0c0 8293 	bcc.w	402bfa <_malloc_r+0x552>
  4026d4:	0a73      	lsrs	r3, r6, #9
  4026d6:	f000 80b8 	beq.w	40284a <_malloc_r+0x1a2>
  4026da:	2b04      	cmp	r3, #4
  4026dc:	f200 8179 	bhi.w	4029d2 <_malloc_r+0x32a>
  4026e0:	09b3      	lsrs	r3, r6, #6
  4026e2:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4026e6:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4026ea:	00c3      	lsls	r3, r0, #3
  4026ec:	4fbf      	ldr	r7, [pc, #764]	; (4029ec <_malloc_r+0x344>)
  4026ee:	443b      	add	r3, r7
  4026f0:	f1a3 0108 	sub.w	r1, r3, #8
  4026f4:	685c      	ldr	r4, [r3, #4]
  4026f6:	42a1      	cmp	r1, r4
  4026f8:	d106      	bne.n	402708 <_malloc_r+0x60>
  4026fa:	e00c      	b.n	402716 <_malloc_r+0x6e>
  4026fc:	2a00      	cmp	r2, #0
  4026fe:	f280 80aa 	bge.w	402856 <_malloc_r+0x1ae>
  402702:	68e4      	ldr	r4, [r4, #12]
  402704:	42a1      	cmp	r1, r4
  402706:	d006      	beq.n	402716 <_malloc_r+0x6e>
  402708:	6863      	ldr	r3, [r4, #4]
  40270a:	f023 0303 	bic.w	r3, r3, #3
  40270e:	1b9a      	subs	r2, r3, r6
  402710:	2a0f      	cmp	r2, #15
  402712:	ddf3      	ble.n	4026fc <_malloc_r+0x54>
  402714:	4670      	mov	r0, lr
  402716:	693c      	ldr	r4, [r7, #16]
  402718:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 402a00 <_malloc_r+0x358>
  40271c:	4574      	cmp	r4, lr
  40271e:	f000 81ab 	beq.w	402a78 <_malloc_r+0x3d0>
  402722:	6863      	ldr	r3, [r4, #4]
  402724:	f023 0303 	bic.w	r3, r3, #3
  402728:	1b9a      	subs	r2, r3, r6
  40272a:	2a0f      	cmp	r2, #15
  40272c:	f300 8190 	bgt.w	402a50 <_malloc_r+0x3a8>
  402730:	2a00      	cmp	r2, #0
  402732:	f8c7 e014 	str.w	lr, [r7, #20]
  402736:	f8c7 e010 	str.w	lr, [r7, #16]
  40273a:	f280 809d 	bge.w	402878 <_malloc_r+0x1d0>
  40273e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  402742:	f080 8161 	bcs.w	402a08 <_malloc_r+0x360>
  402746:	08db      	lsrs	r3, r3, #3
  402748:	f103 0c01 	add.w	ip, r3, #1
  40274c:	1099      	asrs	r1, r3, #2
  40274e:	687a      	ldr	r2, [r7, #4]
  402750:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  402754:	f8c4 8008 	str.w	r8, [r4, #8]
  402758:	2301      	movs	r3, #1
  40275a:	408b      	lsls	r3, r1
  40275c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  402760:	4313      	orrs	r3, r2
  402762:	3908      	subs	r1, #8
  402764:	60e1      	str	r1, [r4, #12]
  402766:	607b      	str	r3, [r7, #4]
  402768:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  40276c:	f8c8 400c 	str.w	r4, [r8, #12]
  402770:	1082      	asrs	r2, r0, #2
  402772:	2401      	movs	r4, #1
  402774:	4094      	lsls	r4, r2
  402776:	429c      	cmp	r4, r3
  402778:	f200 808b 	bhi.w	402892 <_malloc_r+0x1ea>
  40277c:	421c      	tst	r4, r3
  40277e:	d106      	bne.n	40278e <_malloc_r+0xe6>
  402780:	f020 0003 	bic.w	r0, r0, #3
  402784:	0064      	lsls	r4, r4, #1
  402786:	421c      	tst	r4, r3
  402788:	f100 0004 	add.w	r0, r0, #4
  40278c:	d0fa      	beq.n	402784 <_malloc_r+0xdc>
  40278e:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  402792:	46cc      	mov	ip, r9
  402794:	4680      	mov	r8, r0
  402796:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40279a:	459c      	cmp	ip, r3
  40279c:	d107      	bne.n	4027ae <_malloc_r+0x106>
  40279e:	e16d      	b.n	402a7c <_malloc_r+0x3d4>
  4027a0:	2a00      	cmp	r2, #0
  4027a2:	f280 817b 	bge.w	402a9c <_malloc_r+0x3f4>
  4027a6:	68db      	ldr	r3, [r3, #12]
  4027a8:	459c      	cmp	ip, r3
  4027aa:	f000 8167 	beq.w	402a7c <_malloc_r+0x3d4>
  4027ae:	6859      	ldr	r1, [r3, #4]
  4027b0:	f021 0103 	bic.w	r1, r1, #3
  4027b4:	1b8a      	subs	r2, r1, r6
  4027b6:	2a0f      	cmp	r2, #15
  4027b8:	ddf2      	ble.n	4027a0 <_malloc_r+0xf8>
  4027ba:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4027be:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4027c2:	9300      	str	r3, [sp, #0]
  4027c4:	199c      	adds	r4, r3, r6
  4027c6:	4628      	mov	r0, r5
  4027c8:	f046 0601 	orr.w	r6, r6, #1
  4027cc:	f042 0501 	orr.w	r5, r2, #1
  4027d0:	605e      	str	r6, [r3, #4]
  4027d2:	f8c8 c00c 	str.w	ip, [r8, #12]
  4027d6:	f8cc 8008 	str.w	r8, [ip, #8]
  4027da:	617c      	str	r4, [r7, #20]
  4027dc:	613c      	str	r4, [r7, #16]
  4027de:	f8c4 e00c 	str.w	lr, [r4, #12]
  4027e2:	f8c4 e008 	str.w	lr, [r4, #8]
  4027e6:	6065      	str	r5, [r4, #4]
  4027e8:	505a      	str	r2, [r3, r1]
  4027ea:	f000 fa61 	bl	402cb0 <__malloc_unlock>
  4027ee:	9b00      	ldr	r3, [sp, #0]
  4027f0:	f103 0408 	add.w	r4, r3, #8
  4027f4:	e01e      	b.n	402834 <_malloc_r+0x18c>
  4027f6:	2910      	cmp	r1, #16
  4027f8:	d820      	bhi.n	40283c <_malloc_r+0x194>
  4027fa:	f000 fa53 	bl	402ca4 <__malloc_lock>
  4027fe:	2610      	movs	r6, #16
  402800:	2318      	movs	r3, #24
  402802:	2002      	movs	r0, #2
  402804:	4f79      	ldr	r7, [pc, #484]	; (4029ec <_malloc_r+0x344>)
  402806:	443b      	add	r3, r7
  402808:	f1a3 0208 	sub.w	r2, r3, #8
  40280c:	685c      	ldr	r4, [r3, #4]
  40280e:	4294      	cmp	r4, r2
  402810:	f000 813d 	beq.w	402a8e <_malloc_r+0x3e6>
  402814:	6863      	ldr	r3, [r4, #4]
  402816:	68e1      	ldr	r1, [r4, #12]
  402818:	68a6      	ldr	r6, [r4, #8]
  40281a:	f023 0303 	bic.w	r3, r3, #3
  40281e:	4423      	add	r3, r4
  402820:	4628      	mov	r0, r5
  402822:	685a      	ldr	r2, [r3, #4]
  402824:	60f1      	str	r1, [r6, #12]
  402826:	f042 0201 	orr.w	r2, r2, #1
  40282a:	608e      	str	r6, [r1, #8]
  40282c:	605a      	str	r2, [r3, #4]
  40282e:	f000 fa3f 	bl	402cb0 <__malloc_unlock>
  402832:	3408      	adds	r4, #8
  402834:	4620      	mov	r0, r4
  402836:	b003      	add	sp, #12
  402838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40283c:	2400      	movs	r4, #0
  40283e:	230c      	movs	r3, #12
  402840:	4620      	mov	r0, r4
  402842:	602b      	str	r3, [r5, #0]
  402844:	b003      	add	sp, #12
  402846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40284a:	2040      	movs	r0, #64	; 0x40
  40284c:	f44f 7300 	mov.w	r3, #512	; 0x200
  402850:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  402854:	e74a      	b.n	4026ec <_malloc_r+0x44>
  402856:	4423      	add	r3, r4
  402858:	68e1      	ldr	r1, [r4, #12]
  40285a:	685a      	ldr	r2, [r3, #4]
  40285c:	68a6      	ldr	r6, [r4, #8]
  40285e:	f042 0201 	orr.w	r2, r2, #1
  402862:	60f1      	str	r1, [r6, #12]
  402864:	4628      	mov	r0, r5
  402866:	608e      	str	r6, [r1, #8]
  402868:	605a      	str	r2, [r3, #4]
  40286a:	f000 fa21 	bl	402cb0 <__malloc_unlock>
  40286e:	3408      	adds	r4, #8
  402870:	4620      	mov	r0, r4
  402872:	b003      	add	sp, #12
  402874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402878:	4423      	add	r3, r4
  40287a:	4628      	mov	r0, r5
  40287c:	685a      	ldr	r2, [r3, #4]
  40287e:	f042 0201 	orr.w	r2, r2, #1
  402882:	605a      	str	r2, [r3, #4]
  402884:	f000 fa14 	bl	402cb0 <__malloc_unlock>
  402888:	3408      	adds	r4, #8
  40288a:	4620      	mov	r0, r4
  40288c:	b003      	add	sp, #12
  40288e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402892:	68bc      	ldr	r4, [r7, #8]
  402894:	6863      	ldr	r3, [r4, #4]
  402896:	f023 0803 	bic.w	r8, r3, #3
  40289a:	45b0      	cmp	r8, r6
  40289c:	d304      	bcc.n	4028a8 <_malloc_r+0x200>
  40289e:	eba8 0306 	sub.w	r3, r8, r6
  4028a2:	2b0f      	cmp	r3, #15
  4028a4:	f300 8085 	bgt.w	4029b2 <_malloc_r+0x30a>
  4028a8:	f8df 9158 	ldr.w	r9, [pc, #344]	; 402a04 <_malloc_r+0x35c>
  4028ac:	4b50      	ldr	r3, [pc, #320]	; (4029f0 <_malloc_r+0x348>)
  4028ae:	f8d9 2000 	ldr.w	r2, [r9]
  4028b2:	681b      	ldr	r3, [r3, #0]
  4028b4:	3201      	adds	r2, #1
  4028b6:	4433      	add	r3, r6
  4028b8:	eb04 0a08 	add.w	sl, r4, r8
  4028bc:	f000 8155 	beq.w	402b6a <_malloc_r+0x4c2>
  4028c0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4028c4:	330f      	adds	r3, #15
  4028c6:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4028ca:	f02b 0b0f 	bic.w	fp, fp, #15
  4028ce:	4659      	mov	r1, fp
  4028d0:	4628      	mov	r0, r5
  4028d2:	f000 f9f3 	bl	402cbc <_sbrk_r>
  4028d6:	1c41      	adds	r1, r0, #1
  4028d8:	4602      	mov	r2, r0
  4028da:	f000 80fc 	beq.w	402ad6 <_malloc_r+0x42e>
  4028de:	4582      	cmp	sl, r0
  4028e0:	f200 80f7 	bhi.w	402ad2 <_malloc_r+0x42a>
  4028e4:	4b43      	ldr	r3, [pc, #268]	; (4029f4 <_malloc_r+0x34c>)
  4028e6:	6819      	ldr	r1, [r3, #0]
  4028e8:	4459      	add	r1, fp
  4028ea:	6019      	str	r1, [r3, #0]
  4028ec:	f000 814d 	beq.w	402b8a <_malloc_r+0x4e2>
  4028f0:	f8d9 0000 	ldr.w	r0, [r9]
  4028f4:	3001      	adds	r0, #1
  4028f6:	bf1b      	ittet	ne
  4028f8:	eba2 0a0a 	subne.w	sl, r2, sl
  4028fc:	4451      	addne	r1, sl
  4028fe:	f8c9 2000 	streq.w	r2, [r9]
  402902:	6019      	strne	r1, [r3, #0]
  402904:	f012 0107 	ands.w	r1, r2, #7
  402908:	f000 8115 	beq.w	402b36 <_malloc_r+0x48e>
  40290c:	f1c1 0008 	rsb	r0, r1, #8
  402910:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  402914:	4402      	add	r2, r0
  402916:	3108      	adds	r1, #8
  402918:	eb02 090b 	add.w	r9, r2, fp
  40291c:	f3c9 090b 	ubfx	r9, r9, #0, #12
  402920:	eba1 0909 	sub.w	r9, r1, r9
  402924:	4649      	mov	r1, r9
  402926:	4628      	mov	r0, r5
  402928:	9301      	str	r3, [sp, #4]
  40292a:	9200      	str	r2, [sp, #0]
  40292c:	f000 f9c6 	bl	402cbc <_sbrk_r>
  402930:	1c43      	adds	r3, r0, #1
  402932:	e89d 000c 	ldmia.w	sp, {r2, r3}
  402936:	f000 8143 	beq.w	402bc0 <_malloc_r+0x518>
  40293a:	1a80      	subs	r0, r0, r2
  40293c:	4448      	add	r0, r9
  40293e:	f040 0001 	orr.w	r0, r0, #1
  402942:	6819      	ldr	r1, [r3, #0]
  402944:	60ba      	str	r2, [r7, #8]
  402946:	4449      	add	r1, r9
  402948:	42bc      	cmp	r4, r7
  40294a:	6050      	str	r0, [r2, #4]
  40294c:	6019      	str	r1, [r3, #0]
  40294e:	d017      	beq.n	402980 <_malloc_r+0x2d8>
  402950:	f1b8 0f0f 	cmp.w	r8, #15
  402954:	f240 80fb 	bls.w	402b4e <_malloc_r+0x4a6>
  402958:	6860      	ldr	r0, [r4, #4]
  40295a:	f1a8 020c 	sub.w	r2, r8, #12
  40295e:	f022 0207 	bic.w	r2, r2, #7
  402962:	eb04 0e02 	add.w	lr, r4, r2
  402966:	f000 0001 	and.w	r0, r0, #1
  40296a:	f04f 0c05 	mov.w	ip, #5
  40296e:	4310      	orrs	r0, r2
  402970:	2a0f      	cmp	r2, #15
  402972:	6060      	str	r0, [r4, #4]
  402974:	f8ce c004 	str.w	ip, [lr, #4]
  402978:	f8ce c008 	str.w	ip, [lr, #8]
  40297c:	f200 8117 	bhi.w	402bae <_malloc_r+0x506>
  402980:	4b1d      	ldr	r3, [pc, #116]	; (4029f8 <_malloc_r+0x350>)
  402982:	68bc      	ldr	r4, [r7, #8]
  402984:	681a      	ldr	r2, [r3, #0]
  402986:	4291      	cmp	r1, r2
  402988:	bf88      	it	hi
  40298a:	6019      	strhi	r1, [r3, #0]
  40298c:	4b1b      	ldr	r3, [pc, #108]	; (4029fc <_malloc_r+0x354>)
  40298e:	681a      	ldr	r2, [r3, #0]
  402990:	4291      	cmp	r1, r2
  402992:	6862      	ldr	r2, [r4, #4]
  402994:	bf88      	it	hi
  402996:	6019      	strhi	r1, [r3, #0]
  402998:	f022 0203 	bic.w	r2, r2, #3
  40299c:	4296      	cmp	r6, r2
  40299e:	eba2 0306 	sub.w	r3, r2, r6
  4029a2:	d801      	bhi.n	4029a8 <_malloc_r+0x300>
  4029a4:	2b0f      	cmp	r3, #15
  4029a6:	dc04      	bgt.n	4029b2 <_malloc_r+0x30a>
  4029a8:	4628      	mov	r0, r5
  4029aa:	f000 f981 	bl	402cb0 <__malloc_unlock>
  4029ae:	2400      	movs	r4, #0
  4029b0:	e740      	b.n	402834 <_malloc_r+0x18c>
  4029b2:	19a2      	adds	r2, r4, r6
  4029b4:	f043 0301 	orr.w	r3, r3, #1
  4029b8:	f046 0601 	orr.w	r6, r6, #1
  4029bc:	6066      	str	r6, [r4, #4]
  4029be:	4628      	mov	r0, r5
  4029c0:	60ba      	str	r2, [r7, #8]
  4029c2:	6053      	str	r3, [r2, #4]
  4029c4:	f000 f974 	bl	402cb0 <__malloc_unlock>
  4029c8:	3408      	adds	r4, #8
  4029ca:	4620      	mov	r0, r4
  4029cc:	b003      	add	sp, #12
  4029ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4029d2:	2b14      	cmp	r3, #20
  4029d4:	d971      	bls.n	402aba <_malloc_r+0x412>
  4029d6:	2b54      	cmp	r3, #84	; 0x54
  4029d8:	f200 80a3 	bhi.w	402b22 <_malloc_r+0x47a>
  4029dc:	0b33      	lsrs	r3, r6, #12
  4029de:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4029e2:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4029e6:	00c3      	lsls	r3, r0, #3
  4029e8:	e680      	b.n	4026ec <_malloc_r+0x44>
  4029ea:	bf00      	nop
  4029ec:	20400440 	.word	0x20400440
  4029f0:	20401024 	.word	0x20401024
  4029f4:	20400ff4 	.word	0x20400ff4
  4029f8:	2040101c 	.word	0x2040101c
  4029fc:	20401020 	.word	0x20401020
  402a00:	20400448 	.word	0x20400448
  402a04:	20400848 	.word	0x20400848
  402a08:	0a5a      	lsrs	r2, r3, #9
  402a0a:	2a04      	cmp	r2, #4
  402a0c:	d95b      	bls.n	402ac6 <_malloc_r+0x41e>
  402a0e:	2a14      	cmp	r2, #20
  402a10:	f200 80ae 	bhi.w	402b70 <_malloc_r+0x4c8>
  402a14:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  402a18:	00c9      	lsls	r1, r1, #3
  402a1a:	325b      	adds	r2, #91	; 0x5b
  402a1c:	eb07 0c01 	add.w	ip, r7, r1
  402a20:	5879      	ldr	r1, [r7, r1]
  402a22:	f1ac 0c08 	sub.w	ip, ip, #8
  402a26:	458c      	cmp	ip, r1
  402a28:	f000 8088 	beq.w	402b3c <_malloc_r+0x494>
  402a2c:	684a      	ldr	r2, [r1, #4]
  402a2e:	f022 0203 	bic.w	r2, r2, #3
  402a32:	4293      	cmp	r3, r2
  402a34:	d273      	bcs.n	402b1e <_malloc_r+0x476>
  402a36:	6889      	ldr	r1, [r1, #8]
  402a38:	458c      	cmp	ip, r1
  402a3a:	d1f7      	bne.n	402a2c <_malloc_r+0x384>
  402a3c:	f8dc 200c 	ldr.w	r2, [ip, #12]
  402a40:	687b      	ldr	r3, [r7, #4]
  402a42:	60e2      	str	r2, [r4, #12]
  402a44:	f8c4 c008 	str.w	ip, [r4, #8]
  402a48:	6094      	str	r4, [r2, #8]
  402a4a:	f8cc 400c 	str.w	r4, [ip, #12]
  402a4e:	e68f      	b.n	402770 <_malloc_r+0xc8>
  402a50:	19a1      	adds	r1, r4, r6
  402a52:	f046 0c01 	orr.w	ip, r6, #1
  402a56:	f042 0601 	orr.w	r6, r2, #1
  402a5a:	f8c4 c004 	str.w	ip, [r4, #4]
  402a5e:	4628      	mov	r0, r5
  402a60:	6179      	str	r1, [r7, #20]
  402a62:	6139      	str	r1, [r7, #16]
  402a64:	f8c1 e00c 	str.w	lr, [r1, #12]
  402a68:	f8c1 e008 	str.w	lr, [r1, #8]
  402a6c:	604e      	str	r6, [r1, #4]
  402a6e:	50e2      	str	r2, [r4, r3]
  402a70:	f000 f91e 	bl	402cb0 <__malloc_unlock>
  402a74:	3408      	adds	r4, #8
  402a76:	e6dd      	b.n	402834 <_malloc_r+0x18c>
  402a78:	687b      	ldr	r3, [r7, #4]
  402a7a:	e679      	b.n	402770 <_malloc_r+0xc8>
  402a7c:	f108 0801 	add.w	r8, r8, #1
  402a80:	f018 0f03 	tst.w	r8, #3
  402a84:	f10c 0c08 	add.w	ip, ip, #8
  402a88:	f47f ae85 	bne.w	402796 <_malloc_r+0xee>
  402a8c:	e02d      	b.n	402aea <_malloc_r+0x442>
  402a8e:	68dc      	ldr	r4, [r3, #12]
  402a90:	42a3      	cmp	r3, r4
  402a92:	bf08      	it	eq
  402a94:	3002      	addeq	r0, #2
  402a96:	f43f ae3e 	beq.w	402716 <_malloc_r+0x6e>
  402a9a:	e6bb      	b.n	402814 <_malloc_r+0x16c>
  402a9c:	4419      	add	r1, r3
  402a9e:	461c      	mov	r4, r3
  402aa0:	684a      	ldr	r2, [r1, #4]
  402aa2:	68db      	ldr	r3, [r3, #12]
  402aa4:	f854 6f08 	ldr.w	r6, [r4, #8]!
  402aa8:	f042 0201 	orr.w	r2, r2, #1
  402aac:	604a      	str	r2, [r1, #4]
  402aae:	4628      	mov	r0, r5
  402ab0:	60f3      	str	r3, [r6, #12]
  402ab2:	609e      	str	r6, [r3, #8]
  402ab4:	f000 f8fc 	bl	402cb0 <__malloc_unlock>
  402ab8:	e6bc      	b.n	402834 <_malloc_r+0x18c>
  402aba:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  402abe:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  402ac2:	00c3      	lsls	r3, r0, #3
  402ac4:	e612      	b.n	4026ec <_malloc_r+0x44>
  402ac6:	099a      	lsrs	r2, r3, #6
  402ac8:	f102 0139 	add.w	r1, r2, #57	; 0x39
  402acc:	00c9      	lsls	r1, r1, #3
  402ace:	3238      	adds	r2, #56	; 0x38
  402ad0:	e7a4      	b.n	402a1c <_malloc_r+0x374>
  402ad2:	42bc      	cmp	r4, r7
  402ad4:	d054      	beq.n	402b80 <_malloc_r+0x4d8>
  402ad6:	68bc      	ldr	r4, [r7, #8]
  402ad8:	6862      	ldr	r2, [r4, #4]
  402ada:	f022 0203 	bic.w	r2, r2, #3
  402ade:	e75d      	b.n	40299c <_malloc_r+0x2f4>
  402ae0:	f859 3908 	ldr.w	r3, [r9], #-8
  402ae4:	4599      	cmp	r9, r3
  402ae6:	f040 8086 	bne.w	402bf6 <_malloc_r+0x54e>
  402aea:	f010 0f03 	tst.w	r0, #3
  402aee:	f100 30ff 	add.w	r0, r0, #4294967295
  402af2:	d1f5      	bne.n	402ae0 <_malloc_r+0x438>
  402af4:	687b      	ldr	r3, [r7, #4]
  402af6:	ea23 0304 	bic.w	r3, r3, r4
  402afa:	607b      	str	r3, [r7, #4]
  402afc:	0064      	lsls	r4, r4, #1
  402afe:	429c      	cmp	r4, r3
  402b00:	f63f aec7 	bhi.w	402892 <_malloc_r+0x1ea>
  402b04:	2c00      	cmp	r4, #0
  402b06:	f43f aec4 	beq.w	402892 <_malloc_r+0x1ea>
  402b0a:	421c      	tst	r4, r3
  402b0c:	4640      	mov	r0, r8
  402b0e:	f47f ae3e 	bne.w	40278e <_malloc_r+0xe6>
  402b12:	0064      	lsls	r4, r4, #1
  402b14:	421c      	tst	r4, r3
  402b16:	f100 0004 	add.w	r0, r0, #4
  402b1a:	d0fa      	beq.n	402b12 <_malloc_r+0x46a>
  402b1c:	e637      	b.n	40278e <_malloc_r+0xe6>
  402b1e:	468c      	mov	ip, r1
  402b20:	e78c      	b.n	402a3c <_malloc_r+0x394>
  402b22:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  402b26:	d815      	bhi.n	402b54 <_malloc_r+0x4ac>
  402b28:	0bf3      	lsrs	r3, r6, #15
  402b2a:	f103 0078 	add.w	r0, r3, #120	; 0x78
  402b2e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  402b32:	00c3      	lsls	r3, r0, #3
  402b34:	e5da      	b.n	4026ec <_malloc_r+0x44>
  402b36:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  402b3a:	e6ed      	b.n	402918 <_malloc_r+0x270>
  402b3c:	687b      	ldr	r3, [r7, #4]
  402b3e:	1092      	asrs	r2, r2, #2
  402b40:	2101      	movs	r1, #1
  402b42:	fa01 f202 	lsl.w	r2, r1, r2
  402b46:	4313      	orrs	r3, r2
  402b48:	607b      	str	r3, [r7, #4]
  402b4a:	4662      	mov	r2, ip
  402b4c:	e779      	b.n	402a42 <_malloc_r+0x39a>
  402b4e:	2301      	movs	r3, #1
  402b50:	6053      	str	r3, [r2, #4]
  402b52:	e729      	b.n	4029a8 <_malloc_r+0x300>
  402b54:	f240 5254 	movw	r2, #1364	; 0x554
  402b58:	4293      	cmp	r3, r2
  402b5a:	d822      	bhi.n	402ba2 <_malloc_r+0x4fa>
  402b5c:	0cb3      	lsrs	r3, r6, #18
  402b5e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  402b62:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  402b66:	00c3      	lsls	r3, r0, #3
  402b68:	e5c0      	b.n	4026ec <_malloc_r+0x44>
  402b6a:	f103 0b10 	add.w	fp, r3, #16
  402b6e:	e6ae      	b.n	4028ce <_malloc_r+0x226>
  402b70:	2a54      	cmp	r2, #84	; 0x54
  402b72:	d829      	bhi.n	402bc8 <_malloc_r+0x520>
  402b74:	0b1a      	lsrs	r2, r3, #12
  402b76:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  402b7a:	00c9      	lsls	r1, r1, #3
  402b7c:	326e      	adds	r2, #110	; 0x6e
  402b7e:	e74d      	b.n	402a1c <_malloc_r+0x374>
  402b80:	4b20      	ldr	r3, [pc, #128]	; (402c04 <_malloc_r+0x55c>)
  402b82:	6819      	ldr	r1, [r3, #0]
  402b84:	4459      	add	r1, fp
  402b86:	6019      	str	r1, [r3, #0]
  402b88:	e6b2      	b.n	4028f0 <_malloc_r+0x248>
  402b8a:	f3ca 000b 	ubfx	r0, sl, #0, #12
  402b8e:	2800      	cmp	r0, #0
  402b90:	f47f aeae 	bne.w	4028f0 <_malloc_r+0x248>
  402b94:	eb08 030b 	add.w	r3, r8, fp
  402b98:	68ba      	ldr	r2, [r7, #8]
  402b9a:	f043 0301 	orr.w	r3, r3, #1
  402b9e:	6053      	str	r3, [r2, #4]
  402ba0:	e6ee      	b.n	402980 <_malloc_r+0x2d8>
  402ba2:	207f      	movs	r0, #127	; 0x7f
  402ba4:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  402ba8:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  402bac:	e59e      	b.n	4026ec <_malloc_r+0x44>
  402bae:	f104 0108 	add.w	r1, r4, #8
  402bb2:	4628      	mov	r0, r5
  402bb4:	9300      	str	r3, [sp, #0]
  402bb6:	f003 fddb 	bl	406770 <_free_r>
  402bba:	9b00      	ldr	r3, [sp, #0]
  402bbc:	6819      	ldr	r1, [r3, #0]
  402bbe:	e6df      	b.n	402980 <_malloc_r+0x2d8>
  402bc0:	2001      	movs	r0, #1
  402bc2:	f04f 0900 	mov.w	r9, #0
  402bc6:	e6bc      	b.n	402942 <_malloc_r+0x29a>
  402bc8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  402bcc:	d805      	bhi.n	402bda <_malloc_r+0x532>
  402bce:	0bda      	lsrs	r2, r3, #15
  402bd0:	f102 0178 	add.w	r1, r2, #120	; 0x78
  402bd4:	00c9      	lsls	r1, r1, #3
  402bd6:	3277      	adds	r2, #119	; 0x77
  402bd8:	e720      	b.n	402a1c <_malloc_r+0x374>
  402bda:	f240 5154 	movw	r1, #1364	; 0x554
  402bde:	428a      	cmp	r2, r1
  402be0:	d805      	bhi.n	402bee <_malloc_r+0x546>
  402be2:	0c9a      	lsrs	r2, r3, #18
  402be4:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  402be8:	00c9      	lsls	r1, r1, #3
  402bea:	327c      	adds	r2, #124	; 0x7c
  402bec:	e716      	b.n	402a1c <_malloc_r+0x374>
  402bee:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  402bf2:	227e      	movs	r2, #126	; 0x7e
  402bf4:	e712      	b.n	402a1c <_malloc_r+0x374>
  402bf6:	687b      	ldr	r3, [r7, #4]
  402bf8:	e780      	b.n	402afc <_malloc_r+0x454>
  402bfa:	08f0      	lsrs	r0, r6, #3
  402bfc:	f106 0308 	add.w	r3, r6, #8
  402c00:	e600      	b.n	402804 <_malloc_r+0x15c>
  402c02:	bf00      	nop
  402c04:	20400ff4 	.word	0x20400ff4

00402c08 <memset>:
  402c08:	b470      	push	{r4, r5, r6}
  402c0a:	0786      	lsls	r6, r0, #30
  402c0c:	d046      	beq.n	402c9c <memset+0x94>
  402c0e:	1e54      	subs	r4, r2, #1
  402c10:	2a00      	cmp	r2, #0
  402c12:	d041      	beq.n	402c98 <memset+0x90>
  402c14:	b2ca      	uxtb	r2, r1
  402c16:	4603      	mov	r3, r0
  402c18:	e002      	b.n	402c20 <memset+0x18>
  402c1a:	f114 34ff 	adds.w	r4, r4, #4294967295
  402c1e:	d33b      	bcc.n	402c98 <memset+0x90>
  402c20:	f803 2b01 	strb.w	r2, [r3], #1
  402c24:	079d      	lsls	r5, r3, #30
  402c26:	d1f8      	bne.n	402c1a <memset+0x12>
  402c28:	2c03      	cmp	r4, #3
  402c2a:	d92e      	bls.n	402c8a <memset+0x82>
  402c2c:	b2cd      	uxtb	r5, r1
  402c2e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  402c32:	2c0f      	cmp	r4, #15
  402c34:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402c38:	d919      	bls.n	402c6e <memset+0x66>
  402c3a:	f103 0210 	add.w	r2, r3, #16
  402c3e:	4626      	mov	r6, r4
  402c40:	3e10      	subs	r6, #16
  402c42:	2e0f      	cmp	r6, #15
  402c44:	f842 5c10 	str.w	r5, [r2, #-16]
  402c48:	f842 5c0c 	str.w	r5, [r2, #-12]
  402c4c:	f842 5c08 	str.w	r5, [r2, #-8]
  402c50:	f842 5c04 	str.w	r5, [r2, #-4]
  402c54:	f102 0210 	add.w	r2, r2, #16
  402c58:	d8f2      	bhi.n	402c40 <memset+0x38>
  402c5a:	f1a4 0210 	sub.w	r2, r4, #16
  402c5e:	f022 020f 	bic.w	r2, r2, #15
  402c62:	f004 040f 	and.w	r4, r4, #15
  402c66:	3210      	adds	r2, #16
  402c68:	2c03      	cmp	r4, #3
  402c6a:	4413      	add	r3, r2
  402c6c:	d90d      	bls.n	402c8a <memset+0x82>
  402c6e:	461e      	mov	r6, r3
  402c70:	4622      	mov	r2, r4
  402c72:	3a04      	subs	r2, #4
  402c74:	2a03      	cmp	r2, #3
  402c76:	f846 5b04 	str.w	r5, [r6], #4
  402c7a:	d8fa      	bhi.n	402c72 <memset+0x6a>
  402c7c:	1f22      	subs	r2, r4, #4
  402c7e:	f022 0203 	bic.w	r2, r2, #3
  402c82:	3204      	adds	r2, #4
  402c84:	4413      	add	r3, r2
  402c86:	f004 0403 	and.w	r4, r4, #3
  402c8a:	b12c      	cbz	r4, 402c98 <memset+0x90>
  402c8c:	b2c9      	uxtb	r1, r1
  402c8e:	441c      	add	r4, r3
  402c90:	f803 1b01 	strb.w	r1, [r3], #1
  402c94:	429c      	cmp	r4, r3
  402c96:	d1fb      	bne.n	402c90 <memset+0x88>
  402c98:	bc70      	pop	{r4, r5, r6}
  402c9a:	4770      	bx	lr
  402c9c:	4614      	mov	r4, r2
  402c9e:	4603      	mov	r3, r0
  402ca0:	e7c2      	b.n	402c28 <memset+0x20>
  402ca2:	bf00      	nop

00402ca4 <__malloc_lock>:
  402ca4:	4801      	ldr	r0, [pc, #4]	; (402cac <__malloc_lock+0x8>)
  402ca6:	f004 b80b 	b.w	406cc0 <__retarget_lock_acquire_recursive>
  402caa:	bf00      	nop
  402cac:	20401054 	.word	0x20401054

00402cb0 <__malloc_unlock>:
  402cb0:	4801      	ldr	r0, [pc, #4]	; (402cb8 <__malloc_unlock+0x8>)
  402cb2:	f004 b807 	b.w	406cc4 <__retarget_lock_release_recursive>
  402cb6:	bf00      	nop
  402cb8:	20401054 	.word	0x20401054

00402cbc <_sbrk_r>:
  402cbc:	b538      	push	{r3, r4, r5, lr}
  402cbe:	4c07      	ldr	r4, [pc, #28]	; (402cdc <_sbrk_r+0x20>)
  402cc0:	2300      	movs	r3, #0
  402cc2:	4605      	mov	r5, r0
  402cc4:	4608      	mov	r0, r1
  402cc6:	6023      	str	r3, [r4, #0]
  402cc8:	f7ff f934 	bl	401f34 <_sbrk>
  402ccc:	1c43      	adds	r3, r0, #1
  402cce:	d000      	beq.n	402cd2 <_sbrk_r+0x16>
  402cd0:	bd38      	pop	{r3, r4, r5, pc}
  402cd2:	6823      	ldr	r3, [r4, #0]
  402cd4:	2b00      	cmp	r3, #0
  402cd6:	d0fb      	beq.n	402cd0 <_sbrk_r+0x14>
  402cd8:	602b      	str	r3, [r5, #0]
  402cda:	bd38      	pop	{r3, r4, r5, pc}
  402cdc:	20401068 	.word	0x20401068

00402ce0 <setbuf>:
  402ce0:	2900      	cmp	r1, #0
  402ce2:	bf0c      	ite	eq
  402ce4:	2202      	moveq	r2, #2
  402ce6:	2200      	movne	r2, #0
  402ce8:	f44f 6380 	mov.w	r3, #1024	; 0x400
  402cec:	f000 b800 	b.w	402cf0 <setvbuf>

00402cf0 <setvbuf>:
  402cf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  402cf4:	4c61      	ldr	r4, [pc, #388]	; (402e7c <setvbuf+0x18c>)
  402cf6:	6825      	ldr	r5, [r4, #0]
  402cf8:	b083      	sub	sp, #12
  402cfa:	4604      	mov	r4, r0
  402cfc:	460f      	mov	r7, r1
  402cfe:	4690      	mov	r8, r2
  402d00:	461e      	mov	r6, r3
  402d02:	b115      	cbz	r5, 402d0a <setvbuf+0x1a>
  402d04:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402d06:	2b00      	cmp	r3, #0
  402d08:	d064      	beq.n	402dd4 <setvbuf+0xe4>
  402d0a:	f1b8 0f02 	cmp.w	r8, #2
  402d0e:	d006      	beq.n	402d1e <setvbuf+0x2e>
  402d10:	f1b8 0f01 	cmp.w	r8, #1
  402d14:	f200 809f 	bhi.w	402e56 <setvbuf+0x166>
  402d18:	2e00      	cmp	r6, #0
  402d1a:	f2c0 809c 	blt.w	402e56 <setvbuf+0x166>
  402d1e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  402d20:	07d8      	lsls	r0, r3, #31
  402d22:	d534      	bpl.n	402d8e <setvbuf+0x9e>
  402d24:	4621      	mov	r1, r4
  402d26:	4628      	mov	r0, r5
  402d28:	f003 fba4 	bl	406474 <_fflush_r>
  402d2c:	6b21      	ldr	r1, [r4, #48]	; 0x30
  402d2e:	b141      	cbz	r1, 402d42 <setvbuf+0x52>
  402d30:	f104 0340 	add.w	r3, r4, #64	; 0x40
  402d34:	4299      	cmp	r1, r3
  402d36:	d002      	beq.n	402d3e <setvbuf+0x4e>
  402d38:	4628      	mov	r0, r5
  402d3a:	f003 fd19 	bl	406770 <_free_r>
  402d3e:	2300      	movs	r3, #0
  402d40:	6323      	str	r3, [r4, #48]	; 0x30
  402d42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402d46:	2200      	movs	r2, #0
  402d48:	61a2      	str	r2, [r4, #24]
  402d4a:	6062      	str	r2, [r4, #4]
  402d4c:	061a      	lsls	r2, r3, #24
  402d4e:	d43a      	bmi.n	402dc6 <setvbuf+0xd6>
  402d50:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  402d54:	f023 0303 	bic.w	r3, r3, #3
  402d58:	f1b8 0f02 	cmp.w	r8, #2
  402d5c:	81a3      	strh	r3, [r4, #12]
  402d5e:	d01d      	beq.n	402d9c <setvbuf+0xac>
  402d60:	ab01      	add	r3, sp, #4
  402d62:	466a      	mov	r2, sp
  402d64:	4621      	mov	r1, r4
  402d66:	4628      	mov	r0, r5
  402d68:	f003 ffae 	bl	406cc8 <__swhatbuf_r>
  402d6c:	89a3      	ldrh	r3, [r4, #12]
  402d6e:	4318      	orrs	r0, r3
  402d70:	81a0      	strh	r0, [r4, #12]
  402d72:	2e00      	cmp	r6, #0
  402d74:	d132      	bne.n	402ddc <setvbuf+0xec>
  402d76:	9e00      	ldr	r6, [sp, #0]
  402d78:	4630      	mov	r0, r6
  402d7a:	f7ff fc8d 	bl	402698 <malloc>
  402d7e:	4607      	mov	r7, r0
  402d80:	2800      	cmp	r0, #0
  402d82:	d06b      	beq.n	402e5c <setvbuf+0x16c>
  402d84:	89a3      	ldrh	r3, [r4, #12]
  402d86:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  402d8a:	81a3      	strh	r3, [r4, #12]
  402d8c:	e028      	b.n	402de0 <setvbuf+0xf0>
  402d8e:	89a3      	ldrh	r3, [r4, #12]
  402d90:	0599      	lsls	r1, r3, #22
  402d92:	d4c7      	bmi.n	402d24 <setvbuf+0x34>
  402d94:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402d96:	f003 ff93 	bl	406cc0 <__retarget_lock_acquire_recursive>
  402d9a:	e7c3      	b.n	402d24 <setvbuf+0x34>
  402d9c:	2500      	movs	r5, #0
  402d9e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402da0:	2600      	movs	r6, #0
  402da2:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402da6:	f043 0302 	orr.w	r3, r3, #2
  402daa:	2001      	movs	r0, #1
  402dac:	60a6      	str	r6, [r4, #8]
  402dae:	07ce      	lsls	r6, r1, #31
  402db0:	81a3      	strh	r3, [r4, #12]
  402db2:	6022      	str	r2, [r4, #0]
  402db4:	6122      	str	r2, [r4, #16]
  402db6:	6160      	str	r0, [r4, #20]
  402db8:	d401      	bmi.n	402dbe <setvbuf+0xce>
  402dba:	0598      	lsls	r0, r3, #22
  402dbc:	d53e      	bpl.n	402e3c <setvbuf+0x14c>
  402dbe:	4628      	mov	r0, r5
  402dc0:	b003      	add	sp, #12
  402dc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402dc6:	6921      	ldr	r1, [r4, #16]
  402dc8:	4628      	mov	r0, r5
  402dca:	f003 fcd1 	bl	406770 <_free_r>
  402dce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402dd2:	e7bd      	b.n	402d50 <setvbuf+0x60>
  402dd4:	4628      	mov	r0, r5
  402dd6:	f003 fba5 	bl	406524 <__sinit>
  402dda:	e796      	b.n	402d0a <setvbuf+0x1a>
  402ddc:	2f00      	cmp	r7, #0
  402dde:	d0cb      	beq.n	402d78 <setvbuf+0x88>
  402de0:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402de2:	2b00      	cmp	r3, #0
  402de4:	d033      	beq.n	402e4e <setvbuf+0x15e>
  402de6:	9b00      	ldr	r3, [sp, #0]
  402de8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  402dec:	6027      	str	r7, [r4, #0]
  402dee:	429e      	cmp	r6, r3
  402df0:	bf1c      	itt	ne
  402df2:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  402df6:	81a2      	strhne	r2, [r4, #12]
  402df8:	f1b8 0f01 	cmp.w	r8, #1
  402dfc:	bf04      	itt	eq
  402dfe:	f042 0201 	orreq.w	r2, r2, #1
  402e02:	81a2      	strheq	r2, [r4, #12]
  402e04:	b292      	uxth	r2, r2
  402e06:	f012 0308 	ands.w	r3, r2, #8
  402e0a:	6127      	str	r7, [r4, #16]
  402e0c:	6166      	str	r6, [r4, #20]
  402e0e:	d00e      	beq.n	402e2e <setvbuf+0x13e>
  402e10:	07d1      	lsls	r1, r2, #31
  402e12:	d51a      	bpl.n	402e4a <setvbuf+0x15a>
  402e14:	6e65      	ldr	r5, [r4, #100]	; 0x64
  402e16:	4276      	negs	r6, r6
  402e18:	2300      	movs	r3, #0
  402e1a:	f015 0501 	ands.w	r5, r5, #1
  402e1e:	61a6      	str	r6, [r4, #24]
  402e20:	60a3      	str	r3, [r4, #8]
  402e22:	d009      	beq.n	402e38 <setvbuf+0x148>
  402e24:	2500      	movs	r5, #0
  402e26:	4628      	mov	r0, r5
  402e28:	b003      	add	sp, #12
  402e2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402e2e:	60a3      	str	r3, [r4, #8]
  402e30:	6e65      	ldr	r5, [r4, #100]	; 0x64
  402e32:	f015 0501 	ands.w	r5, r5, #1
  402e36:	d1f5      	bne.n	402e24 <setvbuf+0x134>
  402e38:	0593      	lsls	r3, r2, #22
  402e3a:	d4c0      	bmi.n	402dbe <setvbuf+0xce>
  402e3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402e3e:	f003 ff41 	bl	406cc4 <__retarget_lock_release_recursive>
  402e42:	4628      	mov	r0, r5
  402e44:	b003      	add	sp, #12
  402e46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402e4a:	60a6      	str	r6, [r4, #8]
  402e4c:	e7f0      	b.n	402e30 <setvbuf+0x140>
  402e4e:	4628      	mov	r0, r5
  402e50:	f003 fb68 	bl	406524 <__sinit>
  402e54:	e7c7      	b.n	402de6 <setvbuf+0xf6>
  402e56:	f04f 35ff 	mov.w	r5, #4294967295
  402e5a:	e7b0      	b.n	402dbe <setvbuf+0xce>
  402e5c:	f8dd 9000 	ldr.w	r9, [sp]
  402e60:	45b1      	cmp	r9, r6
  402e62:	d004      	beq.n	402e6e <setvbuf+0x17e>
  402e64:	4648      	mov	r0, r9
  402e66:	f7ff fc17 	bl	402698 <malloc>
  402e6a:	4607      	mov	r7, r0
  402e6c:	b920      	cbnz	r0, 402e78 <setvbuf+0x188>
  402e6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402e72:	f04f 35ff 	mov.w	r5, #4294967295
  402e76:	e792      	b.n	402d9e <setvbuf+0xae>
  402e78:	464e      	mov	r6, r9
  402e7a:	e783      	b.n	402d84 <setvbuf+0x94>
  402e7c:	20400010 	.word	0x20400010

00402e80 <sprintf>:
  402e80:	b40e      	push	{r1, r2, r3}
  402e82:	b5f0      	push	{r4, r5, r6, r7, lr}
  402e84:	b09c      	sub	sp, #112	; 0x70
  402e86:	ab21      	add	r3, sp, #132	; 0x84
  402e88:	490f      	ldr	r1, [pc, #60]	; (402ec8 <sprintf+0x48>)
  402e8a:	f853 2b04 	ldr.w	r2, [r3], #4
  402e8e:	9301      	str	r3, [sp, #4]
  402e90:	4605      	mov	r5, r0
  402e92:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  402e96:	6808      	ldr	r0, [r1, #0]
  402e98:	9502      	str	r5, [sp, #8]
  402e9a:	f44f 7702 	mov.w	r7, #520	; 0x208
  402e9e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402ea2:	a902      	add	r1, sp, #8
  402ea4:	9506      	str	r5, [sp, #24]
  402ea6:	f8ad 7014 	strh.w	r7, [sp, #20]
  402eaa:	9404      	str	r4, [sp, #16]
  402eac:	9407      	str	r4, [sp, #28]
  402eae:	f8ad 6016 	strh.w	r6, [sp, #22]
  402eb2:	f000 f913 	bl	4030dc <_svfprintf_r>
  402eb6:	9b02      	ldr	r3, [sp, #8]
  402eb8:	2200      	movs	r2, #0
  402eba:	701a      	strb	r2, [r3, #0]
  402ebc:	b01c      	add	sp, #112	; 0x70
  402ebe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  402ec2:	b003      	add	sp, #12
  402ec4:	4770      	bx	lr
  402ec6:	bf00      	nop
  402ec8:	20400010 	.word	0x20400010

00402ecc <strcat>:
  402ecc:	0783      	lsls	r3, r0, #30
  402ece:	b510      	push	{r4, lr}
  402ed0:	4604      	mov	r4, r0
  402ed2:	d110      	bne.n	402ef6 <strcat+0x2a>
  402ed4:	6802      	ldr	r2, [r0, #0]
  402ed6:	f1a2 3301 	sub.w	r3, r2, #16843009	; 0x1010101
  402eda:	ea23 0302 	bic.w	r3, r3, r2
  402ede:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  402ee2:	d108      	bne.n	402ef6 <strcat+0x2a>
  402ee4:	f850 2f04 	ldr.w	r2, [r0, #4]!
  402ee8:	f1a2 3301 	sub.w	r3, r2, #16843009	; 0x1010101
  402eec:	ea23 0302 	bic.w	r3, r3, r2
  402ef0:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
  402ef4:	d0f6      	beq.n	402ee4 <strcat+0x18>
  402ef6:	7803      	ldrb	r3, [r0, #0]
  402ef8:	b11b      	cbz	r3, 402f02 <strcat+0x36>
  402efa:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  402efe:	2b00      	cmp	r3, #0
  402f00:	d1fb      	bne.n	402efa <strcat+0x2e>
  402f02:	f000 f803 	bl	402f0c <strcpy>
  402f06:	4620      	mov	r0, r4
  402f08:	bd10      	pop	{r4, pc}
  402f0a:	bf00      	nop

00402f0c <strcpy>:
  402f0c:	ea80 0201 	eor.w	r2, r0, r1
  402f10:	4684      	mov	ip, r0
  402f12:	f012 0f03 	tst.w	r2, #3
  402f16:	d14f      	bne.n	402fb8 <strcpy+0xac>
  402f18:	f011 0f03 	tst.w	r1, #3
  402f1c:	d132      	bne.n	402f84 <strcpy+0x78>
  402f1e:	f84d 4d04 	str.w	r4, [sp, #-4]!
  402f22:	f011 0f04 	tst.w	r1, #4
  402f26:	f851 3b04 	ldr.w	r3, [r1], #4
  402f2a:	d00b      	beq.n	402f44 <strcpy+0x38>
  402f2c:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  402f30:	439a      	bics	r2, r3
  402f32:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402f36:	bf04      	itt	eq
  402f38:	f84c 3b04 	streq.w	r3, [ip], #4
  402f3c:	f851 3b04 	ldreq.w	r3, [r1], #4
  402f40:	d116      	bne.n	402f70 <strcpy+0x64>
  402f42:	bf00      	nop
  402f44:	f851 4b04 	ldr.w	r4, [r1], #4
  402f48:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
  402f4c:	439a      	bics	r2, r3
  402f4e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402f52:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
  402f56:	d10b      	bne.n	402f70 <strcpy+0x64>
  402f58:	f84c 3b04 	str.w	r3, [ip], #4
  402f5c:	43a2      	bics	r2, r4
  402f5e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402f62:	bf04      	itt	eq
  402f64:	f851 3b04 	ldreq.w	r3, [r1], #4
  402f68:	f84c 4b04 	streq.w	r4, [ip], #4
  402f6c:	d0ea      	beq.n	402f44 <strcpy+0x38>
  402f6e:	4623      	mov	r3, r4
  402f70:	f80c 3b01 	strb.w	r3, [ip], #1
  402f74:	f013 0fff 	tst.w	r3, #255	; 0xff
  402f78:	ea4f 2333 	mov.w	r3, r3, ror #8
  402f7c:	d1f8      	bne.n	402f70 <strcpy+0x64>
  402f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
  402f82:	4770      	bx	lr
  402f84:	f011 0f01 	tst.w	r1, #1
  402f88:	d006      	beq.n	402f98 <strcpy+0x8c>
  402f8a:	f811 2b01 	ldrb.w	r2, [r1], #1
  402f8e:	f80c 2b01 	strb.w	r2, [ip], #1
  402f92:	2a00      	cmp	r2, #0
  402f94:	bf08      	it	eq
  402f96:	4770      	bxeq	lr
  402f98:	f011 0f02 	tst.w	r1, #2
  402f9c:	d0bf      	beq.n	402f1e <strcpy+0x12>
  402f9e:	f831 2b02 	ldrh.w	r2, [r1], #2
  402fa2:	f012 0fff 	tst.w	r2, #255	; 0xff
  402fa6:	bf16      	itet	ne
  402fa8:	f82c 2b02 	strhne.w	r2, [ip], #2
  402fac:	f88c 2000 	strbeq.w	r2, [ip]
  402fb0:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
  402fb4:	d1b3      	bne.n	402f1e <strcpy+0x12>
  402fb6:	4770      	bx	lr
  402fb8:	f811 2b01 	ldrb.w	r2, [r1], #1
  402fbc:	f80c 2b01 	strb.w	r2, [ip], #1
  402fc0:	2a00      	cmp	r2, #0
  402fc2:	d1f9      	bne.n	402fb8 <strcpy+0xac>
  402fc4:	4770      	bx	lr
  402fc6:	bf00      	nop
	...

00403000 <strlen>:
  403000:	f890 f000 	pld	[r0]
  403004:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  403008:	f020 0107 	bic.w	r1, r0, #7
  40300c:	f06f 0c00 	mvn.w	ip, #0
  403010:	f010 0407 	ands.w	r4, r0, #7
  403014:	f891 f020 	pld	[r1, #32]
  403018:	f040 8049 	bne.w	4030ae <strlen+0xae>
  40301c:	f04f 0400 	mov.w	r4, #0
  403020:	f06f 0007 	mvn.w	r0, #7
  403024:	e9d1 2300 	ldrd	r2, r3, [r1]
  403028:	f891 f040 	pld	[r1, #64]	; 0x40
  40302c:	f100 0008 	add.w	r0, r0, #8
  403030:	fa82 f24c 	uadd8	r2, r2, ip
  403034:	faa4 f28c 	sel	r2, r4, ip
  403038:	fa83 f34c 	uadd8	r3, r3, ip
  40303c:	faa2 f38c 	sel	r3, r2, ip
  403040:	bb4b      	cbnz	r3, 403096 <strlen+0x96>
  403042:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  403046:	fa82 f24c 	uadd8	r2, r2, ip
  40304a:	f100 0008 	add.w	r0, r0, #8
  40304e:	faa4 f28c 	sel	r2, r4, ip
  403052:	fa83 f34c 	uadd8	r3, r3, ip
  403056:	faa2 f38c 	sel	r3, r2, ip
  40305a:	b9e3      	cbnz	r3, 403096 <strlen+0x96>
  40305c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  403060:	fa82 f24c 	uadd8	r2, r2, ip
  403064:	f100 0008 	add.w	r0, r0, #8
  403068:	faa4 f28c 	sel	r2, r4, ip
  40306c:	fa83 f34c 	uadd8	r3, r3, ip
  403070:	faa2 f38c 	sel	r3, r2, ip
  403074:	b97b      	cbnz	r3, 403096 <strlen+0x96>
  403076:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40307a:	f101 0120 	add.w	r1, r1, #32
  40307e:	fa82 f24c 	uadd8	r2, r2, ip
  403082:	f100 0008 	add.w	r0, r0, #8
  403086:	faa4 f28c 	sel	r2, r4, ip
  40308a:	fa83 f34c 	uadd8	r3, r3, ip
  40308e:	faa2 f38c 	sel	r3, r2, ip
  403092:	2b00      	cmp	r3, #0
  403094:	d0c6      	beq.n	403024 <strlen+0x24>
  403096:	2a00      	cmp	r2, #0
  403098:	bf04      	itt	eq
  40309a:	3004      	addeq	r0, #4
  40309c:	461a      	moveq	r2, r3
  40309e:	ba12      	rev	r2, r2
  4030a0:	fab2 f282 	clz	r2, r2
  4030a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4030a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4030ac:	4770      	bx	lr
  4030ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4030b2:	f004 0503 	and.w	r5, r4, #3
  4030b6:	f1c4 0000 	rsb	r0, r4, #0
  4030ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4030be:	f014 0f04 	tst.w	r4, #4
  4030c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4030c6:	fa0c f505 	lsl.w	r5, ip, r5
  4030ca:	ea62 0205 	orn	r2, r2, r5
  4030ce:	bf1c      	itt	ne
  4030d0:	ea63 0305 	ornne	r3, r3, r5
  4030d4:	4662      	movne	r2, ip
  4030d6:	f04f 0400 	mov.w	r4, #0
  4030da:	e7a9      	b.n	403030 <strlen+0x30>

004030dc <_svfprintf_r>:
  4030dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4030e0:	b0c3      	sub	sp, #268	; 0x10c
  4030e2:	460c      	mov	r4, r1
  4030e4:	910b      	str	r1, [sp, #44]	; 0x2c
  4030e6:	4692      	mov	sl, r2
  4030e8:	930f      	str	r3, [sp, #60]	; 0x3c
  4030ea:	900c      	str	r0, [sp, #48]	; 0x30
  4030ec:	f003 fdd6 	bl	406c9c <_localeconv_r>
  4030f0:	6803      	ldr	r3, [r0, #0]
  4030f2:	931a      	str	r3, [sp, #104]	; 0x68
  4030f4:	4618      	mov	r0, r3
  4030f6:	f7ff ff83 	bl	403000 <strlen>
  4030fa:	89a3      	ldrh	r3, [r4, #12]
  4030fc:	9019      	str	r0, [sp, #100]	; 0x64
  4030fe:	0619      	lsls	r1, r3, #24
  403100:	d503      	bpl.n	40310a <_svfprintf_r+0x2e>
  403102:	6923      	ldr	r3, [r4, #16]
  403104:	2b00      	cmp	r3, #0
  403106:	f001 8003 	beq.w	404110 <_svfprintf_r+0x1034>
  40310a:	2300      	movs	r3, #0
  40310c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  403110:	9313      	str	r3, [sp, #76]	; 0x4c
  403112:	9315      	str	r3, [sp, #84]	; 0x54
  403114:	9314      	str	r3, [sp, #80]	; 0x50
  403116:	9327      	str	r3, [sp, #156]	; 0x9c
  403118:	9326      	str	r3, [sp, #152]	; 0x98
  40311a:	9318      	str	r3, [sp, #96]	; 0x60
  40311c:	931b      	str	r3, [sp, #108]	; 0x6c
  40311e:	9309      	str	r3, [sp, #36]	; 0x24
  403120:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  403124:	46c8      	mov	r8, r9
  403126:	9316      	str	r3, [sp, #88]	; 0x58
  403128:	9317      	str	r3, [sp, #92]	; 0x5c
  40312a:	f89a 3000 	ldrb.w	r3, [sl]
  40312e:	4654      	mov	r4, sl
  403130:	b1e3      	cbz	r3, 40316c <_svfprintf_r+0x90>
  403132:	2b25      	cmp	r3, #37	; 0x25
  403134:	d102      	bne.n	40313c <_svfprintf_r+0x60>
  403136:	e019      	b.n	40316c <_svfprintf_r+0x90>
  403138:	2b25      	cmp	r3, #37	; 0x25
  40313a:	d003      	beq.n	403144 <_svfprintf_r+0x68>
  40313c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  403140:	2b00      	cmp	r3, #0
  403142:	d1f9      	bne.n	403138 <_svfprintf_r+0x5c>
  403144:	eba4 050a 	sub.w	r5, r4, sl
  403148:	b185      	cbz	r5, 40316c <_svfprintf_r+0x90>
  40314a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40314c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40314e:	f8c8 a000 	str.w	sl, [r8]
  403152:	3301      	adds	r3, #1
  403154:	442a      	add	r2, r5
  403156:	2b07      	cmp	r3, #7
  403158:	f8c8 5004 	str.w	r5, [r8, #4]
  40315c:	9227      	str	r2, [sp, #156]	; 0x9c
  40315e:	9326      	str	r3, [sp, #152]	; 0x98
  403160:	dc7f      	bgt.n	403262 <_svfprintf_r+0x186>
  403162:	f108 0808 	add.w	r8, r8, #8
  403166:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403168:	442b      	add	r3, r5
  40316a:	9309      	str	r3, [sp, #36]	; 0x24
  40316c:	7823      	ldrb	r3, [r4, #0]
  40316e:	2b00      	cmp	r3, #0
  403170:	d07f      	beq.n	403272 <_svfprintf_r+0x196>
  403172:	2300      	movs	r3, #0
  403174:	461a      	mov	r2, r3
  403176:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40317a:	4619      	mov	r1, r3
  40317c:	930d      	str	r3, [sp, #52]	; 0x34
  40317e:	469b      	mov	fp, r3
  403180:	f04f 30ff 	mov.w	r0, #4294967295
  403184:	7863      	ldrb	r3, [r4, #1]
  403186:	900a      	str	r0, [sp, #40]	; 0x28
  403188:	f104 0a01 	add.w	sl, r4, #1
  40318c:	f10a 0a01 	add.w	sl, sl, #1
  403190:	f1a3 0020 	sub.w	r0, r3, #32
  403194:	2858      	cmp	r0, #88	; 0x58
  403196:	f200 83c1 	bhi.w	40391c <_svfprintf_r+0x840>
  40319a:	e8df f010 	tbh	[pc, r0, lsl #1]
  40319e:	0238      	.short	0x0238
  4031a0:	03bf03bf 	.word	0x03bf03bf
  4031a4:	03bf0240 	.word	0x03bf0240
  4031a8:	03bf03bf 	.word	0x03bf03bf
  4031ac:	03bf03bf 	.word	0x03bf03bf
  4031b0:	024503bf 	.word	0x024503bf
  4031b4:	03bf0203 	.word	0x03bf0203
  4031b8:	026b005d 	.word	0x026b005d
  4031bc:	028603bf 	.word	0x028603bf
  4031c0:	039d039d 	.word	0x039d039d
  4031c4:	039d039d 	.word	0x039d039d
  4031c8:	039d039d 	.word	0x039d039d
  4031cc:	039d039d 	.word	0x039d039d
  4031d0:	03bf039d 	.word	0x03bf039d
  4031d4:	03bf03bf 	.word	0x03bf03bf
  4031d8:	03bf03bf 	.word	0x03bf03bf
  4031dc:	03bf03bf 	.word	0x03bf03bf
  4031e0:	03bf03bf 	.word	0x03bf03bf
  4031e4:	033703bf 	.word	0x033703bf
  4031e8:	03bf0357 	.word	0x03bf0357
  4031ec:	03bf0357 	.word	0x03bf0357
  4031f0:	03bf03bf 	.word	0x03bf03bf
  4031f4:	039803bf 	.word	0x039803bf
  4031f8:	03bf03bf 	.word	0x03bf03bf
  4031fc:	03bf03ad 	.word	0x03bf03ad
  403200:	03bf03bf 	.word	0x03bf03bf
  403204:	03bf03bf 	.word	0x03bf03bf
  403208:	03bf0259 	.word	0x03bf0259
  40320c:	031e03bf 	.word	0x031e03bf
  403210:	03bf03bf 	.word	0x03bf03bf
  403214:	03bf03bf 	.word	0x03bf03bf
  403218:	03bf03bf 	.word	0x03bf03bf
  40321c:	03bf03bf 	.word	0x03bf03bf
  403220:	03bf03bf 	.word	0x03bf03bf
  403224:	02db02c6 	.word	0x02db02c6
  403228:	03570357 	.word	0x03570357
  40322c:	028b0357 	.word	0x028b0357
  403230:	03bf02db 	.word	0x03bf02db
  403234:	029003bf 	.word	0x029003bf
  403238:	029d03bf 	.word	0x029d03bf
  40323c:	02b401cc 	.word	0x02b401cc
  403240:	03bf0208 	.word	0x03bf0208
  403244:	03bf01e1 	.word	0x03bf01e1
  403248:	03bf007e 	.word	0x03bf007e
  40324c:	020d03bf 	.word	0x020d03bf
  403250:	980d      	ldr	r0, [sp, #52]	; 0x34
  403252:	930f      	str	r3, [sp, #60]	; 0x3c
  403254:	4240      	negs	r0, r0
  403256:	900d      	str	r0, [sp, #52]	; 0x34
  403258:	f04b 0b04 	orr.w	fp, fp, #4
  40325c:	f89a 3000 	ldrb.w	r3, [sl]
  403260:	e794      	b.n	40318c <_svfprintf_r+0xb0>
  403262:	aa25      	add	r2, sp, #148	; 0x94
  403264:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403266:	980c      	ldr	r0, [sp, #48]	; 0x30
  403268:	f004 fbf4 	bl	407a54 <__ssprint_r>
  40326c:	b940      	cbnz	r0, 403280 <_svfprintf_r+0x1a4>
  40326e:	46c8      	mov	r8, r9
  403270:	e779      	b.n	403166 <_svfprintf_r+0x8a>
  403272:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  403274:	b123      	cbz	r3, 403280 <_svfprintf_r+0x1a4>
  403276:	980c      	ldr	r0, [sp, #48]	; 0x30
  403278:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40327a:	aa25      	add	r2, sp, #148	; 0x94
  40327c:	f004 fbea 	bl	407a54 <__ssprint_r>
  403280:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403282:	899b      	ldrh	r3, [r3, #12]
  403284:	f013 0f40 	tst.w	r3, #64	; 0x40
  403288:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40328a:	bf18      	it	ne
  40328c:	f04f 33ff 	movne.w	r3, #4294967295
  403290:	9309      	str	r3, [sp, #36]	; 0x24
  403292:	9809      	ldr	r0, [sp, #36]	; 0x24
  403294:	b043      	add	sp, #268	; 0x10c
  403296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40329a:	f01b 0f20 	tst.w	fp, #32
  40329e:	9311      	str	r3, [sp, #68]	; 0x44
  4032a0:	f040 81dd 	bne.w	40365e <_svfprintf_r+0x582>
  4032a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4032a6:	f01b 0f10 	tst.w	fp, #16
  4032aa:	4613      	mov	r3, r2
  4032ac:	f040 856e 	bne.w	403d8c <_svfprintf_r+0xcb0>
  4032b0:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4032b4:	f000 856a 	beq.w	403d8c <_svfprintf_r+0xcb0>
  4032b8:	8814      	ldrh	r4, [r2, #0]
  4032ba:	3204      	adds	r2, #4
  4032bc:	2500      	movs	r5, #0
  4032be:	2301      	movs	r3, #1
  4032c0:	920f      	str	r2, [sp, #60]	; 0x3c
  4032c2:	2700      	movs	r7, #0
  4032c4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4032c8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4032ca:	1c4a      	adds	r2, r1, #1
  4032cc:	f000 8265 	beq.w	40379a <_svfprintf_r+0x6be>
  4032d0:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  4032d4:	9207      	str	r2, [sp, #28]
  4032d6:	ea54 0205 	orrs.w	r2, r4, r5
  4032da:	f040 8264 	bne.w	4037a6 <_svfprintf_r+0x6ca>
  4032de:	2900      	cmp	r1, #0
  4032e0:	f040 843c 	bne.w	403b5c <_svfprintf_r+0xa80>
  4032e4:	2b00      	cmp	r3, #0
  4032e6:	f040 84d7 	bne.w	403c98 <_svfprintf_r+0xbbc>
  4032ea:	f01b 0301 	ands.w	r3, fp, #1
  4032ee:	930e      	str	r3, [sp, #56]	; 0x38
  4032f0:	f000 8604 	beq.w	403efc <_svfprintf_r+0xe20>
  4032f4:	ae42      	add	r6, sp, #264	; 0x108
  4032f6:	2330      	movs	r3, #48	; 0x30
  4032f8:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4032fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4032fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403300:	4293      	cmp	r3, r2
  403302:	bfb8      	it	lt
  403304:	4613      	movlt	r3, r2
  403306:	9308      	str	r3, [sp, #32]
  403308:	2300      	movs	r3, #0
  40330a:	9312      	str	r3, [sp, #72]	; 0x48
  40330c:	b117      	cbz	r7, 403314 <_svfprintf_r+0x238>
  40330e:	9b08      	ldr	r3, [sp, #32]
  403310:	3301      	adds	r3, #1
  403312:	9308      	str	r3, [sp, #32]
  403314:	9b07      	ldr	r3, [sp, #28]
  403316:	f013 0302 	ands.w	r3, r3, #2
  40331a:	9310      	str	r3, [sp, #64]	; 0x40
  40331c:	d002      	beq.n	403324 <_svfprintf_r+0x248>
  40331e:	9b08      	ldr	r3, [sp, #32]
  403320:	3302      	adds	r3, #2
  403322:	9308      	str	r3, [sp, #32]
  403324:	9b07      	ldr	r3, [sp, #28]
  403326:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  40332a:	f040 830e 	bne.w	40394a <_svfprintf_r+0x86e>
  40332e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403330:	9a08      	ldr	r2, [sp, #32]
  403332:	eba3 0b02 	sub.w	fp, r3, r2
  403336:	f1bb 0f00 	cmp.w	fp, #0
  40333a:	f340 8306 	ble.w	40394a <_svfprintf_r+0x86e>
  40333e:	f1bb 0f10 	cmp.w	fp, #16
  403342:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403344:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403346:	dd29      	ble.n	40339c <_svfprintf_r+0x2c0>
  403348:	4643      	mov	r3, r8
  40334a:	4621      	mov	r1, r4
  40334c:	46a8      	mov	r8, r5
  40334e:	2710      	movs	r7, #16
  403350:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403352:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403354:	e006      	b.n	403364 <_svfprintf_r+0x288>
  403356:	f1ab 0b10 	sub.w	fp, fp, #16
  40335a:	f1bb 0f10 	cmp.w	fp, #16
  40335e:	f103 0308 	add.w	r3, r3, #8
  403362:	dd18      	ble.n	403396 <_svfprintf_r+0x2ba>
  403364:	3201      	adds	r2, #1
  403366:	48b7      	ldr	r0, [pc, #732]	; (403644 <_svfprintf_r+0x568>)
  403368:	9226      	str	r2, [sp, #152]	; 0x98
  40336a:	3110      	adds	r1, #16
  40336c:	2a07      	cmp	r2, #7
  40336e:	9127      	str	r1, [sp, #156]	; 0x9c
  403370:	e883 0081 	stmia.w	r3, {r0, r7}
  403374:	ddef      	ble.n	403356 <_svfprintf_r+0x27a>
  403376:	aa25      	add	r2, sp, #148	; 0x94
  403378:	4629      	mov	r1, r5
  40337a:	4620      	mov	r0, r4
  40337c:	f004 fb6a 	bl	407a54 <__ssprint_r>
  403380:	2800      	cmp	r0, #0
  403382:	f47f af7d 	bne.w	403280 <_svfprintf_r+0x1a4>
  403386:	f1ab 0b10 	sub.w	fp, fp, #16
  40338a:	f1bb 0f10 	cmp.w	fp, #16
  40338e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403390:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403392:	464b      	mov	r3, r9
  403394:	dce6      	bgt.n	403364 <_svfprintf_r+0x288>
  403396:	4645      	mov	r5, r8
  403398:	460c      	mov	r4, r1
  40339a:	4698      	mov	r8, r3
  40339c:	3201      	adds	r2, #1
  40339e:	4ba9      	ldr	r3, [pc, #676]	; (403644 <_svfprintf_r+0x568>)
  4033a0:	9226      	str	r2, [sp, #152]	; 0x98
  4033a2:	445c      	add	r4, fp
  4033a4:	2a07      	cmp	r2, #7
  4033a6:	9427      	str	r4, [sp, #156]	; 0x9c
  4033a8:	e888 0808 	stmia.w	r8, {r3, fp}
  4033ac:	f300 8498 	bgt.w	403ce0 <_svfprintf_r+0xc04>
  4033b0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4033b4:	f108 0808 	add.w	r8, r8, #8
  4033b8:	b177      	cbz	r7, 4033d8 <_svfprintf_r+0x2fc>
  4033ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4033bc:	3301      	adds	r3, #1
  4033be:	3401      	adds	r4, #1
  4033c0:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4033c4:	2201      	movs	r2, #1
  4033c6:	2b07      	cmp	r3, #7
  4033c8:	9427      	str	r4, [sp, #156]	; 0x9c
  4033ca:	9326      	str	r3, [sp, #152]	; 0x98
  4033cc:	e888 0006 	stmia.w	r8, {r1, r2}
  4033d0:	f300 83db 	bgt.w	403b8a <_svfprintf_r+0xaae>
  4033d4:	f108 0808 	add.w	r8, r8, #8
  4033d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4033da:	b16b      	cbz	r3, 4033f8 <_svfprintf_r+0x31c>
  4033dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4033de:	3301      	adds	r3, #1
  4033e0:	3402      	adds	r4, #2
  4033e2:	a91e      	add	r1, sp, #120	; 0x78
  4033e4:	2202      	movs	r2, #2
  4033e6:	2b07      	cmp	r3, #7
  4033e8:	9427      	str	r4, [sp, #156]	; 0x9c
  4033ea:	9326      	str	r3, [sp, #152]	; 0x98
  4033ec:	e888 0006 	stmia.w	r8, {r1, r2}
  4033f0:	f300 83d6 	bgt.w	403ba0 <_svfprintf_r+0xac4>
  4033f4:	f108 0808 	add.w	r8, r8, #8
  4033f8:	2d80      	cmp	r5, #128	; 0x80
  4033fa:	f000 8315 	beq.w	403a28 <_svfprintf_r+0x94c>
  4033fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403400:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403402:	1a9f      	subs	r7, r3, r2
  403404:	2f00      	cmp	r7, #0
  403406:	dd36      	ble.n	403476 <_svfprintf_r+0x39a>
  403408:	2f10      	cmp	r7, #16
  40340a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40340c:	4d8e      	ldr	r5, [pc, #568]	; (403648 <_svfprintf_r+0x56c>)
  40340e:	dd27      	ble.n	403460 <_svfprintf_r+0x384>
  403410:	4642      	mov	r2, r8
  403412:	4621      	mov	r1, r4
  403414:	46b0      	mov	r8, r6
  403416:	f04f 0b10 	mov.w	fp, #16
  40341a:	462e      	mov	r6, r5
  40341c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40341e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403420:	e004      	b.n	40342c <_svfprintf_r+0x350>
  403422:	3f10      	subs	r7, #16
  403424:	2f10      	cmp	r7, #16
  403426:	f102 0208 	add.w	r2, r2, #8
  40342a:	dd15      	ble.n	403458 <_svfprintf_r+0x37c>
  40342c:	3301      	adds	r3, #1
  40342e:	3110      	adds	r1, #16
  403430:	2b07      	cmp	r3, #7
  403432:	9127      	str	r1, [sp, #156]	; 0x9c
  403434:	9326      	str	r3, [sp, #152]	; 0x98
  403436:	e882 0840 	stmia.w	r2, {r6, fp}
  40343a:	ddf2      	ble.n	403422 <_svfprintf_r+0x346>
  40343c:	aa25      	add	r2, sp, #148	; 0x94
  40343e:	4629      	mov	r1, r5
  403440:	4620      	mov	r0, r4
  403442:	f004 fb07 	bl	407a54 <__ssprint_r>
  403446:	2800      	cmp	r0, #0
  403448:	f47f af1a 	bne.w	403280 <_svfprintf_r+0x1a4>
  40344c:	3f10      	subs	r7, #16
  40344e:	2f10      	cmp	r7, #16
  403450:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403452:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403454:	464a      	mov	r2, r9
  403456:	dce9      	bgt.n	40342c <_svfprintf_r+0x350>
  403458:	4635      	mov	r5, r6
  40345a:	460c      	mov	r4, r1
  40345c:	4646      	mov	r6, r8
  40345e:	4690      	mov	r8, r2
  403460:	3301      	adds	r3, #1
  403462:	443c      	add	r4, r7
  403464:	2b07      	cmp	r3, #7
  403466:	9427      	str	r4, [sp, #156]	; 0x9c
  403468:	9326      	str	r3, [sp, #152]	; 0x98
  40346a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40346e:	f300 8381 	bgt.w	403b74 <_svfprintf_r+0xa98>
  403472:	f108 0808 	add.w	r8, r8, #8
  403476:	9b07      	ldr	r3, [sp, #28]
  403478:	05df      	lsls	r7, r3, #23
  40347a:	f100 8268 	bmi.w	40394e <_svfprintf_r+0x872>
  40347e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403480:	990e      	ldr	r1, [sp, #56]	; 0x38
  403482:	f8c8 6000 	str.w	r6, [r8]
  403486:	3301      	adds	r3, #1
  403488:	440c      	add	r4, r1
  40348a:	2b07      	cmp	r3, #7
  40348c:	9427      	str	r4, [sp, #156]	; 0x9c
  40348e:	f8c8 1004 	str.w	r1, [r8, #4]
  403492:	9326      	str	r3, [sp, #152]	; 0x98
  403494:	f300 834d 	bgt.w	403b32 <_svfprintf_r+0xa56>
  403498:	f108 0808 	add.w	r8, r8, #8
  40349c:	9b07      	ldr	r3, [sp, #28]
  40349e:	075b      	lsls	r3, r3, #29
  4034a0:	d53a      	bpl.n	403518 <_svfprintf_r+0x43c>
  4034a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4034a4:	9a08      	ldr	r2, [sp, #32]
  4034a6:	1a9d      	subs	r5, r3, r2
  4034a8:	2d00      	cmp	r5, #0
  4034aa:	dd35      	ble.n	403518 <_svfprintf_r+0x43c>
  4034ac:	2d10      	cmp	r5, #16
  4034ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4034b0:	dd20      	ble.n	4034f4 <_svfprintf_r+0x418>
  4034b2:	2610      	movs	r6, #16
  4034b4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4034b6:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  4034ba:	e004      	b.n	4034c6 <_svfprintf_r+0x3ea>
  4034bc:	3d10      	subs	r5, #16
  4034be:	2d10      	cmp	r5, #16
  4034c0:	f108 0808 	add.w	r8, r8, #8
  4034c4:	dd16      	ble.n	4034f4 <_svfprintf_r+0x418>
  4034c6:	3301      	adds	r3, #1
  4034c8:	4a5e      	ldr	r2, [pc, #376]	; (403644 <_svfprintf_r+0x568>)
  4034ca:	9326      	str	r3, [sp, #152]	; 0x98
  4034cc:	3410      	adds	r4, #16
  4034ce:	2b07      	cmp	r3, #7
  4034d0:	9427      	str	r4, [sp, #156]	; 0x9c
  4034d2:	e888 0044 	stmia.w	r8, {r2, r6}
  4034d6:	ddf1      	ble.n	4034bc <_svfprintf_r+0x3e0>
  4034d8:	aa25      	add	r2, sp, #148	; 0x94
  4034da:	4659      	mov	r1, fp
  4034dc:	4638      	mov	r0, r7
  4034de:	f004 fab9 	bl	407a54 <__ssprint_r>
  4034e2:	2800      	cmp	r0, #0
  4034e4:	f47f aecc 	bne.w	403280 <_svfprintf_r+0x1a4>
  4034e8:	3d10      	subs	r5, #16
  4034ea:	2d10      	cmp	r5, #16
  4034ec:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4034ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4034f0:	46c8      	mov	r8, r9
  4034f2:	dce8      	bgt.n	4034c6 <_svfprintf_r+0x3ea>
  4034f4:	3301      	adds	r3, #1
  4034f6:	4a53      	ldr	r2, [pc, #332]	; (403644 <_svfprintf_r+0x568>)
  4034f8:	9326      	str	r3, [sp, #152]	; 0x98
  4034fa:	442c      	add	r4, r5
  4034fc:	2b07      	cmp	r3, #7
  4034fe:	9427      	str	r4, [sp, #156]	; 0x9c
  403500:	e888 0024 	stmia.w	r8, {r2, r5}
  403504:	dd08      	ble.n	403518 <_svfprintf_r+0x43c>
  403506:	aa25      	add	r2, sp, #148	; 0x94
  403508:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40350a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40350c:	f004 faa2 	bl	407a54 <__ssprint_r>
  403510:	2800      	cmp	r0, #0
  403512:	f47f aeb5 	bne.w	403280 <_svfprintf_r+0x1a4>
  403516:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403518:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40351a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40351c:	9908      	ldr	r1, [sp, #32]
  40351e:	428a      	cmp	r2, r1
  403520:	bfac      	ite	ge
  403522:	189b      	addge	r3, r3, r2
  403524:	185b      	addlt	r3, r3, r1
  403526:	9309      	str	r3, [sp, #36]	; 0x24
  403528:	2c00      	cmp	r4, #0
  40352a:	f040 830d 	bne.w	403b48 <_svfprintf_r+0xa6c>
  40352e:	2300      	movs	r3, #0
  403530:	9326      	str	r3, [sp, #152]	; 0x98
  403532:	46c8      	mov	r8, r9
  403534:	e5f9      	b.n	40312a <_svfprintf_r+0x4e>
  403536:	9311      	str	r3, [sp, #68]	; 0x44
  403538:	f01b 0320 	ands.w	r3, fp, #32
  40353c:	f040 81e3 	bne.w	403906 <_svfprintf_r+0x82a>
  403540:	f01b 0210 	ands.w	r2, fp, #16
  403544:	f040 842e 	bne.w	403da4 <_svfprintf_r+0xcc8>
  403548:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  40354c:	f000 842a 	beq.w	403da4 <_svfprintf_r+0xcc8>
  403550:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403552:	4613      	mov	r3, r2
  403554:	460a      	mov	r2, r1
  403556:	3204      	adds	r2, #4
  403558:	880c      	ldrh	r4, [r1, #0]
  40355a:	920f      	str	r2, [sp, #60]	; 0x3c
  40355c:	2500      	movs	r5, #0
  40355e:	e6b0      	b.n	4032c2 <_svfprintf_r+0x1e6>
  403560:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403562:	9311      	str	r3, [sp, #68]	; 0x44
  403564:	6816      	ldr	r6, [r2, #0]
  403566:	2400      	movs	r4, #0
  403568:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  40356c:	1d15      	adds	r5, r2, #4
  40356e:	2e00      	cmp	r6, #0
  403570:	f000 86a7 	beq.w	4042c2 <_svfprintf_r+0x11e6>
  403574:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403576:	1c53      	adds	r3, r2, #1
  403578:	f000 8609 	beq.w	40418e <_svfprintf_r+0x10b2>
  40357c:	4621      	mov	r1, r4
  40357e:	4630      	mov	r0, r6
  403580:	f003 fc36 	bl	406df0 <memchr>
  403584:	2800      	cmp	r0, #0
  403586:	f000 86e1 	beq.w	40434c <_svfprintf_r+0x1270>
  40358a:	1b83      	subs	r3, r0, r6
  40358c:	930e      	str	r3, [sp, #56]	; 0x38
  40358e:	940a      	str	r4, [sp, #40]	; 0x28
  403590:	950f      	str	r5, [sp, #60]	; 0x3c
  403592:	f8cd b01c 	str.w	fp, [sp, #28]
  403596:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40359a:	9308      	str	r3, [sp, #32]
  40359c:	9412      	str	r4, [sp, #72]	; 0x48
  40359e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4035a2:	e6b3      	b.n	40330c <_svfprintf_r+0x230>
  4035a4:	f89a 3000 	ldrb.w	r3, [sl]
  4035a8:	2201      	movs	r2, #1
  4035aa:	212b      	movs	r1, #43	; 0x2b
  4035ac:	e5ee      	b.n	40318c <_svfprintf_r+0xb0>
  4035ae:	f04b 0b20 	orr.w	fp, fp, #32
  4035b2:	f89a 3000 	ldrb.w	r3, [sl]
  4035b6:	e5e9      	b.n	40318c <_svfprintf_r+0xb0>
  4035b8:	9311      	str	r3, [sp, #68]	; 0x44
  4035ba:	2a00      	cmp	r2, #0
  4035bc:	f040 8795 	bne.w	4044ea <_svfprintf_r+0x140e>
  4035c0:	4b22      	ldr	r3, [pc, #136]	; (40364c <_svfprintf_r+0x570>)
  4035c2:	9318      	str	r3, [sp, #96]	; 0x60
  4035c4:	f01b 0f20 	tst.w	fp, #32
  4035c8:	f040 8111 	bne.w	4037ee <_svfprintf_r+0x712>
  4035cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4035ce:	f01b 0f10 	tst.w	fp, #16
  4035d2:	4613      	mov	r3, r2
  4035d4:	f040 83e1 	bne.w	403d9a <_svfprintf_r+0xcbe>
  4035d8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4035dc:	f000 83dd 	beq.w	403d9a <_svfprintf_r+0xcbe>
  4035e0:	3304      	adds	r3, #4
  4035e2:	8814      	ldrh	r4, [r2, #0]
  4035e4:	930f      	str	r3, [sp, #60]	; 0x3c
  4035e6:	2500      	movs	r5, #0
  4035e8:	f01b 0f01 	tst.w	fp, #1
  4035ec:	f000 810c 	beq.w	403808 <_svfprintf_r+0x72c>
  4035f0:	ea54 0305 	orrs.w	r3, r4, r5
  4035f4:	f000 8108 	beq.w	403808 <_svfprintf_r+0x72c>
  4035f8:	2330      	movs	r3, #48	; 0x30
  4035fa:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4035fe:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  403602:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  403606:	f04b 0b02 	orr.w	fp, fp, #2
  40360a:	2302      	movs	r3, #2
  40360c:	e659      	b.n	4032c2 <_svfprintf_r+0x1e6>
  40360e:	f89a 3000 	ldrb.w	r3, [sl]
  403612:	2900      	cmp	r1, #0
  403614:	f47f adba 	bne.w	40318c <_svfprintf_r+0xb0>
  403618:	2201      	movs	r2, #1
  40361a:	2120      	movs	r1, #32
  40361c:	e5b6      	b.n	40318c <_svfprintf_r+0xb0>
  40361e:	f04b 0b01 	orr.w	fp, fp, #1
  403622:	f89a 3000 	ldrb.w	r3, [sl]
  403626:	e5b1      	b.n	40318c <_svfprintf_r+0xb0>
  403628:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40362a:	6823      	ldr	r3, [r4, #0]
  40362c:	930d      	str	r3, [sp, #52]	; 0x34
  40362e:	4618      	mov	r0, r3
  403630:	2800      	cmp	r0, #0
  403632:	4623      	mov	r3, r4
  403634:	f103 0304 	add.w	r3, r3, #4
  403638:	f6ff ae0a 	blt.w	403250 <_svfprintf_r+0x174>
  40363c:	930f      	str	r3, [sp, #60]	; 0x3c
  40363e:	f89a 3000 	ldrb.w	r3, [sl]
  403642:	e5a3      	b.n	40318c <_svfprintf_r+0xb0>
  403644:	00410948 	.word	0x00410948
  403648:	00410958 	.word	0x00410958
  40364c:	00410928 	.word	0x00410928
  403650:	f04b 0b10 	orr.w	fp, fp, #16
  403654:	f01b 0f20 	tst.w	fp, #32
  403658:	9311      	str	r3, [sp, #68]	; 0x44
  40365a:	f43f ae23 	beq.w	4032a4 <_svfprintf_r+0x1c8>
  40365e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403660:	3507      	adds	r5, #7
  403662:	f025 0307 	bic.w	r3, r5, #7
  403666:	f103 0208 	add.w	r2, r3, #8
  40366a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40366e:	920f      	str	r2, [sp, #60]	; 0x3c
  403670:	2301      	movs	r3, #1
  403672:	e626      	b.n	4032c2 <_svfprintf_r+0x1e6>
  403674:	f89a 3000 	ldrb.w	r3, [sl]
  403678:	2b2a      	cmp	r3, #42	; 0x2a
  40367a:	f10a 0401 	add.w	r4, sl, #1
  40367e:	f000 8727 	beq.w	4044d0 <_svfprintf_r+0x13f4>
  403682:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  403686:	2809      	cmp	r0, #9
  403688:	46a2      	mov	sl, r4
  40368a:	f200 86ad 	bhi.w	4043e8 <_svfprintf_r+0x130c>
  40368e:	2300      	movs	r3, #0
  403690:	461c      	mov	r4, r3
  403692:	f81a 3b01 	ldrb.w	r3, [sl], #1
  403696:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40369a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40369e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4036a2:	2809      	cmp	r0, #9
  4036a4:	d9f5      	bls.n	403692 <_svfprintf_r+0x5b6>
  4036a6:	940a      	str	r4, [sp, #40]	; 0x28
  4036a8:	e572      	b.n	403190 <_svfprintf_r+0xb4>
  4036aa:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4036ae:	f89a 3000 	ldrb.w	r3, [sl]
  4036b2:	e56b      	b.n	40318c <_svfprintf_r+0xb0>
  4036b4:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4036b8:	f89a 3000 	ldrb.w	r3, [sl]
  4036bc:	e566      	b.n	40318c <_svfprintf_r+0xb0>
  4036be:	f89a 3000 	ldrb.w	r3, [sl]
  4036c2:	2b6c      	cmp	r3, #108	; 0x6c
  4036c4:	bf03      	ittte	eq
  4036c6:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4036ca:	f04b 0b20 	orreq.w	fp, fp, #32
  4036ce:	f10a 0a01 	addeq.w	sl, sl, #1
  4036d2:	f04b 0b10 	orrne.w	fp, fp, #16
  4036d6:	e559      	b.n	40318c <_svfprintf_r+0xb0>
  4036d8:	2a00      	cmp	r2, #0
  4036da:	f040 8711 	bne.w	404500 <_svfprintf_r+0x1424>
  4036de:	f01b 0f20 	tst.w	fp, #32
  4036e2:	f040 84f9 	bne.w	4040d8 <_svfprintf_r+0xffc>
  4036e6:	f01b 0f10 	tst.w	fp, #16
  4036ea:	f040 84ac 	bne.w	404046 <_svfprintf_r+0xf6a>
  4036ee:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4036f2:	f000 84a8 	beq.w	404046 <_svfprintf_r+0xf6a>
  4036f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4036f8:	6813      	ldr	r3, [r2, #0]
  4036fa:	3204      	adds	r2, #4
  4036fc:	920f      	str	r2, [sp, #60]	; 0x3c
  4036fe:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  403702:	801a      	strh	r2, [r3, #0]
  403704:	e511      	b.n	40312a <_svfprintf_r+0x4e>
  403706:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403708:	4bb3      	ldr	r3, [pc, #716]	; (4039d8 <_svfprintf_r+0x8fc>)
  40370a:	680c      	ldr	r4, [r1, #0]
  40370c:	9318      	str	r3, [sp, #96]	; 0x60
  40370e:	2230      	movs	r2, #48	; 0x30
  403710:	2378      	movs	r3, #120	; 0x78
  403712:	3104      	adds	r1, #4
  403714:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  403718:	9311      	str	r3, [sp, #68]	; 0x44
  40371a:	f04b 0b02 	orr.w	fp, fp, #2
  40371e:	910f      	str	r1, [sp, #60]	; 0x3c
  403720:	2500      	movs	r5, #0
  403722:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  403726:	2302      	movs	r3, #2
  403728:	e5cb      	b.n	4032c2 <_svfprintf_r+0x1e6>
  40372a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40372c:	9311      	str	r3, [sp, #68]	; 0x44
  40372e:	680a      	ldr	r2, [r1, #0]
  403730:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  403734:	2300      	movs	r3, #0
  403736:	460a      	mov	r2, r1
  403738:	461f      	mov	r7, r3
  40373a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40373e:	3204      	adds	r2, #4
  403740:	2301      	movs	r3, #1
  403742:	9308      	str	r3, [sp, #32]
  403744:	f8cd b01c 	str.w	fp, [sp, #28]
  403748:	970a      	str	r7, [sp, #40]	; 0x28
  40374a:	9712      	str	r7, [sp, #72]	; 0x48
  40374c:	920f      	str	r2, [sp, #60]	; 0x3c
  40374e:	930e      	str	r3, [sp, #56]	; 0x38
  403750:	ae28      	add	r6, sp, #160	; 0xa0
  403752:	e5df      	b.n	403314 <_svfprintf_r+0x238>
  403754:	9311      	str	r3, [sp, #68]	; 0x44
  403756:	2a00      	cmp	r2, #0
  403758:	f040 86ea 	bne.w	404530 <_svfprintf_r+0x1454>
  40375c:	f01b 0f20 	tst.w	fp, #32
  403760:	d15d      	bne.n	40381e <_svfprintf_r+0x742>
  403762:	f01b 0f10 	tst.w	fp, #16
  403766:	f040 8308 	bne.w	403d7a <_svfprintf_r+0xc9e>
  40376a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40376e:	f000 8304 	beq.w	403d7a <_svfprintf_r+0xc9e>
  403772:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403774:	f9b1 4000 	ldrsh.w	r4, [r1]
  403778:	3104      	adds	r1, #4
  40377a:	17e5      	asrs	r5, r4, #31
  40377c:	4622      	mov	r2, r4
  40377e:	462b      	mov	r3, r5
  403780:	910f      	str	r1, [sp, #60]	; 0x3c
  403782:	2a00      	cmp	r2, #0
  403784:	f173 0300 	sbcs.w	r3, r3, #0
  403788:	db58      	blt.n	40383c <_svfprintf_r+0x760>
  40378a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40378c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403790:	1c4a      	adds	r2, r1, #1
  403792:	f04f 0301 	mov.w	r3, #1
  403796:	f47f ad9b 	bne.w	4032d0 <_svfprintf_r+0x1f4>
  40379a:	ea54 0205 	orrs.w	r2, r4, r5
  40379e:	f000 81df 	beq.w	403b60 <_svfprintf_r+0xa84>
  4037a2:	f8cd b01c 	str.w	fp, [sp, #28]
  4037a6:	2b01      	cmp	r3, #1
  4037a8:	f000 827b 	beq.w	403ca2 <_svfprintf_r+0xbc6>
  4037ac:	2b02      	cmp	r3, #2
  4037ae:	f040 8206 	bne.w	403bbe <_svfprintf_r+0xae2>
  4037b2:	9818      	ldr	r0, [sp, #96]	; 0x60
  4037b4:	464e      	mov	r6, r9
  4037b6:	0923      	lsrs	r3, r4, #4
  4037b8:	f004 010f 	and.w	r1, r4, #15
  4037bc:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  4037c0:	092a      	lsrs	r2, r5, #4
  4037c2:	461c      	mov	r4, r3
  4037c4:	4615      	mov	r5, r2
  4037c6:	5c43      	ldrb	r3, [r0, r1]
  4037c8:	f806 3d01 	strb.w	r3, [r6, #-1]!
  4037cc:	ea54 0305 	orrs.w	r3, r4, r5
  4037d0:	d1f1      	bne.n	4037b6 <_svfprintf_r+0x6da>
  4037d2:	eba9 0306 	sub.w	r3, r9, r6
  4037d6:	930e      	str	r3, [sp, #56]	; 0x38
  4037d8:	e590      	b.n	4032fc <_svfprintf_r+0x220>
  4037da:	9311      	str	r3, [sp, #68]	; 0x44
  4037dc:	2a00      	cmp	r2, #0
  4037de:	f040 86a3 	bne.w	404528 <_svfprintf_r+0x144c>
  4037e2:	4b7e      	ldr	r3, [pc, #504]	; (4039dc <_svfprintf_r+0x900>)
  4037e4:	9318      	str	r3, [sp, #96]	; 0x60
  4037e6:	f01b 0f20 	tst.w	fp, #32
  4037ea:	f43f aeef 	beq.w	4035cc <_svfprintf_r+0x4f0>
  4037ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4037f0:	3507      	adds	r5, #7
  4037f2:	f025 0307 	bic.w	r3, r5, #7
  4037f6:	f103 0208 	add.w	r2, r3, #8
  4037fa:	f01b 0f01 	tst.w	fp, #1
  4037fe:	920f      	str	r2, [sp, #60]	; 0x3c
  403800:	e9d3 4500 	ldrd	r4, r5, [r3]
  403804:	f47f aef4 	bne.w	4035f0 <_svfprintf_r+0x514>
  403808:	2302      	movs	r3, #2
  40380a:	e55a      	b.n	4032c2 <_svfprintf_r+0x1e6>
  40380c:	9311      	str	r3, [sp, #68]	; 0x44
  40380e:	2a00      	cmp	r2, #0
  403810:	f040 8686 	bne.w	404520 <_svfprintf_r+0x1444>
  403814:	f04b 0b10 	orr.w	fp, fp, #16
  403818:	f01b 0f20 	tst.w	fp, #32
  40381c:	d0a1      	beq.n	403762 <_svfprintf_r+0x686>
  40381e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403820:	3507      	adds	r5, #7
  403822:	f025 0507 	bic.w	r5, r5, #7
  403826:	e9d5 2300 	ldrd	r2, r3, [r5]
  40382a:	2a00      	cmp	r2, #0
  40382c:	f105 0108 	add.w	r1, r5, #8
  403830:	461d      	mov	r5, r3
  403832:	f173 0300 	sbcs.w	r3, r3, #0
  403836:	910f      	str	r1, [sp, #60]	; 0x3c
  403838:	4614      	mov	r4, r2
  40383a:	daa6      	bge.n	40378a <_svfprintf_r+0x6ae>
  40383c:	272d      	movs	r7, #45	; 0x2d
  40383e:	4264      	negs	r4, r4
  403840:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  403844:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403848:	2301      	movs	r3, #1
  40384a:	e53d      	b.n	4032c8 <_svfprintf_r+0x1ec>
  40384c:	9311      	str	r3, [sp, #68]	; 0x44
  40384e:	2a00      	cmp	r2, #0
  403850:	f040 8662 	bne.w	404518 <_svfprintf_r+0x143c>
  403854:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403856:	3507      	adds	r5, #7
  403858:	f025 0307 	bic.w	r3, r5, #7
  40385c:	f103 0208 	add.w	r2, r3, #8
  403860:	920f      	str	r2, [sp, #60]	; 0x3c
  403862:	681a      	ldr	r2, [r3, #0]
  403864:	9215      	str	r2, [sp, #84]	; 0x54
  403866:	685b      	ldr	r3, [r3, #4]
  403868:	9314      	str	r3, [sp, #80]	; 0x50
  40386a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40386c:	9d15      	ldr	r5, [sp, #84]	; 0x54
  40386e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  403872:	4628      	mov	r0, r5
  403874:	4621      	mov	r1, r4
  403876:	f04f 32ff 	mov.w	r2, #4294967295
  40387a:	4b59      	ldr	r3, [pc, #356]	; (4039e0 <_svfprintf_r+0x904>)
  40387c:	f004 ffb8 	bl	4087f0 <__aeabi_dcmpun>
  403880:	2800      	cmp	r0, #0
  403882:	f040 834a 	bne.w	403f1a <_svfprintf_r+0xe3e>
  403886:	4628      	mov	r0, r5
  403888:	4621      	mov	r1, r4
  40388a:	f04f 32ff 	mov.w	r2, #4294967295
  40388e:	4b54      	ldr	r3, [pc, #336]	; (4039e0 <_svfprintf_r+0x904>)
  403890:	f004 ff90 	bl	4087b4 <__aeabi_dcmple>
  403894:	2800      	cmp	r0, #0
  403896:	f040 8340 	bne.w	403f1a <_svfprintf_r+0xe3e>
  40389a:	a815      	add	r0, sp, #84	; 0x54
  40389c:	c80d      	ldmia	r0, {r0, r2, r3}
  40389e:	9914      	ldr	r1, [sp, #80]	; 0x50
  4038a0:	f004 ff7e 	bl	4087a0 <__aeabi_dcmplt>
  4038a4:	2800      	cmp	r0, #0
  4038a6:	f040 8530 	bne.w	40430a <_svfprintf_r+0x122e>
  4038aa:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4038ae:	4e4d      	ldr	r6, [pc, #308]	; (4039e4 <_svfprintf_r+0x908>)
  4038b0:	4b4d      	ldr	r3, [pc, #308]	; (4039e8 <_svfprintf_r+0x90c>)
  4038b2:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  4038b6:	9007      	str	r0, [sp, #28]
  4038b8:	9811      	ldr	r0, [sp, #68]	; 0x44
  4038ba:	2203      	movs	r2, #3
  4038bc:	2100      	movs	r1, #0
  4038be:	9208      	str	r2, [sp, #32]
  4038c0:	910a      	str	r1, [sp, #40]	; 0x28
  4038c2:	2847      	cmp	r0, #71	; 0x47
  4038c4:	bfd8      	it	le
  4038c6:	461e      	movle	r6, r3
  4038c8:	920e      	str	r2, [sp, #56]	; 0x38
  4038ca:	9112      	str	r1, [sp, #72]	; 0x48
  4038cc:	e51e      	b.n	40330c <_svfprintf_r+0x230>
  4038ce:	f04b 0b08 	orr.w	fp, fp, #8
  4038d2:	f89a 3000 	ldrb.w	r3, [sl]
  4038d6:	e459      	b.n	40318c <_svfprintf_r+0xb0>
  4038d8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4038dc:	2300      	movs	r3, #0
  4038de:	461c      	mov	r4, r3
  4038e0:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4038e4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4038e8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4038ec:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4038f0:	2809      	cmp	r0, #9
  4038f2:	d9f5      	bls.n	4038e0 <_svfprintf_r+0x804>
  4038f4:	940d      	str	r4, [sp, #52]	; 0x34
  4038f6:	e44b      	b.n	403190 <_svfprintf_r+0xb4>
  4038f8:	f04b 0b10 	orr.w	fp, fp, #16
  4038fc:	9311      	str	r3, [sp, #68]	; 0x44
  4038fe:	f01b 0320 	ands.w	r3, fp, #32
  403902:	f43f ae1d 	beq.w	403540 <_svfprintf_r+0x464>
  403906:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403908:	3507      	adds	r5, #7
  40390a:	f025 0307 	bic.w	r3, r5, #7
  40390e:	f103 0208 	add.w	r2, r3, #8
  403912:	e9d3 4500 	ldrd	r4, r5, [r3]
  403916:	920f      	str	r2, [sp, #60]	; 0x3c
  403918:	2300      	movs	r3, #0
  40391a:	e4d2      	b.n	4032c2 <_svfprintf_r+0x1e6>
  40391c:	9311      	str	r3, [sp, #68]	; 0x44
  40391e:	2a00      	cmp	r2, #0
  403920:	f040 85e7 	bne.w	4044f2 <_svfprintf_r+0x1416>
  403924:	9a11      	ldr	r2, [sp, #68]	; 0x44
  403926:	2a00      	cmp	r2, #0
  403928:	f43f aca3 	beq.w	403272 <_svfprintf_r+0x196>
  40392c:	2300      	movs	r3, #0
  40392e:	2101      	movs	r1, #1
  403930:	461f      	mov	r7, r3
  403932:	9108      	str	r1, [sp, #32]
  403934:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  403938:	f8cd b01c 	str.w	fp, [sp, #28]
  40393c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  403940:	930a      	str	r3, [sp, #40]	; 0x28
  403942:	9312      	str	r3, [sp, #72]	; 0x48
  403944:	910e      	str	r1, [sp, #56]	; 0x38
  403946:	ae28      	add	r6, sp, #160	; 0xa0
  403948:	e4e4      	b.n	403314 <_svfprintf_r+0x238>
  40394a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40394c:	e534      	b.n	4033b8 <_svfprintf_r+0x2dc>
  40394e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403950:	2b65      	cmp	r3, #101	; 0x65
  403952:	f340 80a7 	ble.w	403aa4 <_svfprintf_r+0x9c8>
  403956:	a815      	add	r0, sp, #84	; 0x54
  403958:	c80d      	ldmia	r0, {r0, r2, r3}
  40395a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40395c:	f004 ff16 	bl	40878c <__aeabi_dcmpeq>
  403960:	2800      	cmp	r0, #0
  403962:	f000 8150 	beq.w	403c06 <_svfprintf_r+0xb2a>
  403966:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403968:	4a20      	ldr	r2, [pc, #128]	; (4039ec <_svfprintf_r+0x910>)
  40396a:	f8c8 2000 	str.w	r2, [r8]
  40396e:	3301      	adds	r3, #1
  403970:	3401      	adds	r4, #1
  403972:	2201      	movs	r2, #1
  403974:	2b07      	cmp	r3, #7
  403976:	9427      	str	r4, [sp, #156]	; 0x9c
  403978:	9326      	str	r3, [sp, #152]	; 0x98
  40397a:	f8c8 2004 	str.w	r2, [r8, #4]
  40397e:	f300 836a 	bgt.w	404056 <_svfprintf_r+0xf7a>
  403982:	f108 0808 	add.w	r8, r8, #8
  403986:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403988:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40398a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40398c:	4293      	cmp	r3, r2
  40398e:	db03      	blt.n	403998 <_svfprintf_r+0x8bc>
  403990:	9b07      	ldr	r3, [sp, #28]
  403992:	07dd      	lsls	r5, r3, #31
  403994:	f57f ad82 	bpl.w	40349c <_svfprintf_r+0x3c0>
  403998:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40399a:	9919      	ldr	r1, [sp, #100]	; 0x64
  40399c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40399e:	f8c8 2000 	str.w	r2, [r8]
  4039a2:	3301      	adds	r3, #1
  4039a4:	440c      	add	r4, r1
  4039a6:	2b07      	cmp	r3, #7
  4039a8:	f8c8 1004 	str.w	r1, [r8, #4]
  4039ac:	9427      	str	r4, [sp, #156]	; 0x9c
  4039ae:	9326      	str	r3, [sp, #152]	; 0x98
  4039b0:	f300 839e 	bgt.w	4040f0 <_svfprintf_r+0x1014>
  4039b4:	f108 0808 	add.w	r8, r8, #8
  4039b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4039ba:	1e5e      	subs	r6, r3, #1
  4039bc:	2e00      	cmp	r6, #0
  4039be:	f77f ad6d 	ble.w	40349c <_svfprintf_r+0x3c0>
  4039c2:	2e10      	cmp	r6, #16
  4039c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4039c6:	4d0a      	ldr	r5, [pc, #40]	; (4039f0 <_svfprintf_r+0x914>)
  4039c8:	f340 81f5 	ble.w	403db6 <_svfprintf_r+0xcda>
  4039cc:	4622      	mov	r2, r4
  4039ce:	2710      	movs	r7, #16
  4039d0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4039d4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4039d6:	e013      	b.n	403a00 <_svfprintf_r+0x924>
  4039d8:	00410928 	.word	0x00410928
  4039dc:	00410914 	.word	0x00410914
  4039e0:	7fefffff 	.word	0x7fefffff
  4039e4:	00410908 	.word	0x00410908
  4039e8:	00410904 	.word	0x00410904
  4039ec:	00410944 	.word	0x00410944
  4039f0:	00410958 	.word	0x00410958
  4039f4:	f108 0808 	add.w	r8, r8, #8
  4039f8:	3e10      	subs	r6, #16
  4039fa:	2e10      	cmp	r6, #16
  4039fc:	f340 81da 	ble.w	403db4 <_svfprintf_r+0xcd8>
  403a00:	3301      	adds	r3, #1
  403a02:	3210      	adds	r2, #16
  403a04:	2b07      	cmp	r3, #7
  403a06:	9227      	str	r2, [sp, #156]	; 0x9c
  403a08:	9326      	str	r3, [sp, #152]	; 0x98
  403a0a:	e888 00a0 	stmia.w	r8, {r5, r7}
  403a0e:	ddf1      	ble.n	4039f4 <_svfprintf_r+0x918>
  403a10:	aa25      	add	r2, sp, #148	; 0x94
  403a12:	4621      	mov	r1, r4
  403a14:	4658      	mov	r0, fp
  403a16:	f004 f81d 	bl	407a54 <__ssprint_r>
  403a1a:	2800      	cmp	r0, #0
  403a1c:	f47f ac30 	bne.w	403280 <_svfprintf_r+0x1a4>
  403a20:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403a22:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403a24:	46c8      	mov	r8, r9
  403a26:	e7e7      	b.n	4039f8 <_svfprintf_r+0x91c>
  403a28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a2a:	9a08      	ldr	r2, [sp, #32]
  403a2c:	1a9f      	subs	r7, r3, r2
  403a2e:	2f00      	cmp	r7, #0
  403a30:	f77f ace5 	ble.w	4033fe <_svfprintf_r+0x322>
  403a34:	2f10      	cmp	r7, #16
  403a36:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403a38:	4db6      	ldr	r5, [pc, #728]	; (403d14 <_svfprintf_r+0xc38>)
  403a3a:	dd27      	ble.n	403a8c <_svfprintf_r+0x9b0>
  403a3c:	4642      	mov	r2, r8
  403a3e:	4621      	mov	r1, r4
  403a40:	46b0      	mov	r8, r6
  403a42:	f04f 0b10 	mov.w	fp, #16
  403a46:	462e      	mov	r6, r5
  403a48:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403a4a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403a4c:	e004      	b.n	403a58 <_svfprintf_r+0x97c>
  403a4e:	3f10      	subs	r7, #16
  403a50:	2f10      	cmp	r7, #16
  403a52:	f102 0208 	add.w	r2, r2, #8
  403a56:	dd15      	ble.n	403a84 <_svfprintf_r+0x9a8>
  403a58:	3301      	adds	r3, #1
  403a5a:	3110      	adds	r1, #16
  403a5c:	2b07      	cmp	r3, #7
  403a5e:	9127      	str	r1, [sp, #156]	; 0x9c
  403a60:	9326      	str	r3, [sp, #152]	; 0x98
  403a62:	e882 0840 	stmia.w	r2, {r6, fp}
  403a66:	ddf2      	ble.n	403a4e <_svfprintf_r+0x972>
  403a68:	aa25      	add	r2, sp, #148	; 0x94
  403a6a:	4629      	mov	r1, r5
  403a6c:	4620      	mov	r0, r4
  403a6e:	f003 fff1 	bl	407a54 <__ssprint_r>
  403a72:	2800      	cmp	r0, #0
  403a74:	f47f ac04 	bne.w	403280 <_svfprintf_r+0x1a4>
  403a78:	3f10      	subs	r7, #16
  403a7a:	2f10      	cmp	r7, #16
  403a7c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403a7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403a80:	464a      	mov	r2, r9
  403a82:	dce9      	bgt.n	403a58 <_svfprintf_r+0x97c>
  403a84:	4635      	mov	r5, r6
  403a86:	460c      	mov	r4, r1
  403a88:	4646      	mov	r6, r8
  403a8a:	4690      	mov	r8, r2
  403a8c:	3301      	adds	r3, #1
  403a8e:	443c      	add	r4, r7
  403a90:	2b07      	cmp	r3, #7
  403a92:	9427      	str	r4, [sp, #156]	; 0x9c
  403a94:	9326      	str	r3, [sp, #152]	; 0x98
  403a96:	e888 00a0 	stmia.w	r8, {r5, r7}
  403a9a:	f300 8232 	bgt.w	403f02 <_svfprintf_r+0xe26>
  403a9e:	f108 0808 	add.w	r8, r8, #8
  403aa2:	e4ac      	b.n	4033fe <_svfprintf_r+0x322>
  403aa4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403aa6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403aa8:	2b01      	cmp	r3, #1
  403aaa:	f340 81fe 	ble.w	403eaa <_svfprintf_r+0xdce>
  403aae:	3701      	adds	r7, #1
  403ab0:	3401      	adds	r4, #1
  403ab2:	2301      	movs	r3, #1
  403ab4:	2f07      	cmp	r7, #7
  403ab6:	9427      	str	r4, [sp, #156]	; 0x9c
  403ab8:	9726      	str	r7, [sp, #152]	; 0x98
  403aba:	f8c8 6000 	str.w	r6, [r8]
  403abe:	f8c8 3004 	str.w	r3, [r8, #4]
  403ac2:	f300 8203 	bgt.w	403ecc <_svfprintf_r+0xdf0>
  403ac6:	f108 0808 	add.w	r8, r8, #8
  403aca:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403acc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  403ace:	f8c8 3000 	str.w	r3, [r8]
  403ad2:	3701      	adds	r7, #1
  403ad4:	4414      	add	r4, r2
  403ad6:	2f07      	cmp	r7, #7
  403ad8:	9427      	str	r4, [sp, #156]	; 0x9c
  403ada:	9726      	str	r7, [sp, #152]	; 0x98
  403adc:	f8c8 2004 	str.w	r2, [r8, #4]
  403ae0:	f300 8200 	bgt.w	403ee4 <_svfprintf_r+0xe08>
  403ae4:	f108 0808 	add.w	r8, r8, #8
  403ae8:	a815      	add	r0, sp, #84	; 0x54
  403aea:	c80d      	ldmia	r0, {r0, r2, r3}
  403aec:	9914      	ldr	r1, [sp, #80]	; 0x50
  403aee:	f004 fe4d 	bl	40878c <__aeabi_dcmpeq>
  403af2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403af4:	2800      	cmp	r0, #0
  403af6:	f040 8101 	bne.w	403cfc <_svfprintf_r+0xc20>
  403afa:	3b01      	subs	r3, #1
  403afc:	3701      	adds	r7, #1
  403afe:	3601      	adds	r6, #1
  403b00:	441c      	add	r4, r3
  403b02:	2f07      	cmp	r7, #7
  403b04:	9726      	str	r7, [sp, #152]	; 0x98
  403b06:	9427      	str	r4, [sp, #156]	; 0x9c
  403b08:	f8c8 6000 	str.w	r6, [r8]
  403b0c:	f8c8 3004 	str.w	r3, [r8, #4]
  403b10:	f300 8127 	bgt.w	403d62 <_svfprintf_r+0xc86>
  403b14:	f108 0808 	add.w	r8, r8, #8
  403b18:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  403b1a:	f8c8 2004 	str.w	r2, [r8, #4]
  403b1e:	3701      	adds	r7, #1
  403b20:	4414      	add	r4, r2
  403b22:	ab21      	add	r3, sp, #132	; 0x84
  403b24:	2f07      	cmp	r7, #7
  403b26:	9427      	str	r4, [sp, #156]	; 0x9c
  403b28:	9726      	str	r7, [sp, #152]	; 0x98
  403b2a:	f8c8 3000 	str.w	r3, [r8]
  403b2e:	f77f acb3 	ble.w	403498 <_svfprintf_r+0x3bc>
  403b32:	aa25      	add	r2, sp, #148	; 0x94
  403b34:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b36:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b38:	f003 ff8c 	bl	407a54 <__ssprint_r>
  403b3c:	2800      	cmp	r0, #0
  403b3e:	f47f ab9f 	bne.w	403280 <_svfprintf_r+0x1a4>
  403b42:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b44:	46c8      	mov	r8, r9
  403b46:	e4a9      	b.n	40349c <_svfprintf_r+0x3c0>
  403b48:	aa25      	add	r2, sp, #148	; 0x94
  403b4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b4c:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b4e:	f003 ff81 	bl	407a54 <__ssprint_r>
  403b52:	2800      	cmp	r0, #0
  403b54:	f43f aceb 	beq.w	40352e <_svfprintf_r+0x452>
  403b58:	f7ff bb92 	b.w	403280 <_svfprintf_r+0x1a4>
  403b5c:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403b60:	2b01      	cmp	r3, #1
  403b62:	f000 8134 	beq.w	403dce <_svfprintf_r+0xcf2>
  403b66:	2b02      	cmp	r3, #2
  403b68:	d125      	bne.n	403bb6 <_svfprintf_r+0xada>
  403b6a:	f8cd b01c 	str.w	fp, [sp, #28]
  403b6e:	2400      	movs	r4, #0
  403b70:	2500      	movs	r5, #0
  403b72:	e61e      	b.n	4037b2 <_svfprintf_r+0x6d6>
  403b74:	aa25      	add	r2, sp, #148	; 0x94
  403b76:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b78:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b7a:	f003 ff6b 	bl	407a54 <__ssprint_r>
  403b7e:	2800      	cmp	r0, #0
  403b80:	f47f ab7e 	bne.w	403280 <_svfprintf_r+0x1a4>
  403b84:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b86:	46c8      	mov	r8, r9
  403b88:	e475      	b.n	403476 <_svfprintf_r+0x39a>
  403b8a:	aa25      	add	r2, sp, #148	; 0x94
  403b8c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b8e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403b90:	f003 ff60 	bl	407a54 <__ssprint_r>
  403b94:	2800      	cmp	r0, #0
  403b96:	f47f ab73 	bne.w	403280 <_svfprintf_r+0x1a4>
  403b9a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403b9c:	46c8      	mov	r8, r9
  403b9e:	e41b      	b.n	4033d8 <_svfprintf_r+0x2fc>
  403ba0:	aa25      	add	r2, sp, #148	; 0x94
  403ba2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ba4:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ba6:	f003 ff55 	bl	407a54 <__ssprint_r>
  403baa:	2800      	cmp	r0, #0
  403bac:	f47f ab68 	bne.w	403280 <_svfprintf_r+0x1a4>
  403bb0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403bb2:	46c8      	mov	r8, r9
  403bb4:	e420      	b.n	4033f8 <_svfprintf_r+0x31c>
  403bb6:	f8cd b01c 	str.w	fp, [sp, #28]
  403bba:	2400      	movs	r4, #0
  403bbc:	2500      	movs	r5, #0
  403bbe:	4649      	mov	r1, r9
  403bc0:	e000      	b.n	403bc4 <_svfprintf_r+0xae8>
  403bc2:	4631      	mov	r1, r6
  403bc4:	08e2      	lsrs	r2, r4, #3
  403bc6:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  403bca:	08e8      	lsrs	r0, r5, #3
  403bcc:	f004 0307 	and.w	r3, r4, #7
  403bd0:	4605      	mov	r5, r0
  403bd2:	4614      	mov	r4, r2
  403bd4:	3330      	adds	r3, #48	; 0x30
  403bd6:	ea54 0205 	orrs.w	r2, r4, r5
  403bda:	f801 3c01 	strb.w	r3, [r1, #-1]
  403bde:	f101 36ff 	add.w	r6, r1, #4294967295
  403be2:	d1ee      	bne.n	403bc2 <_svfprintf_r+0xae6>
  403be4:	9a07      	ldr	r2, [sp, #28]
  403be6:	07d2      	lsls	r2, r2, #31
  403be8:	f57f adf3 	bpl.w	4037d2 <_svfprintf_r+0x6f6>
  403bec:	2b30      	cmp	r3, #48	; 0x30
  403bee:	f43f adf0 	beq.w	4037d2 <_svfprintf_r+0x6f6>
  403bf2:	3902      	subs	r1, #2
  403bf4:	2330      	movs	r3, #48	; 0x30
  403bf6:	f806 3c01 	strb.w	r3, [r6, #-1]
  403bfa:	eba9 0301 	sub.w	r3, r9, r1
  403bfe:	930e      	str	r3, [sp, #56]	; 0x38
  403c00:	460e      	mov	r6, r1
  403c02:	f7ff bb7b 	b.w	4032fc <_svfprintf_r+0x220>
  403c06:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403c08:	2900      	cmp	r1, #0
  403c0a:	f340 822e 	ble.w	40406a <_svfprintf_r+0xf8e>
  403c0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403c12:	4293      	cmp	r3, r2
  403c14:	bfa8      	it	ge
  403c16:	4613      	movge	r3, r2
  403c18:	2b00      	cmp	r3, #0
  403c1a:	461f      	mov	r7, r3
  403c1c:	dd0d      	ble.n	403c3a <_svfprintf_r+0xb5e>
  403c1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403c20:	f8c8 6000 	str.w	r6, [r8]
  403c24:	3301      	adds	r3, #1
  403c26:	443c      	add	r4, r7
  403c28:	2b07      	cmp	r3, #7
  403c2a:	9427      	str	r4, [sp, #156]	; 0x9c
  403c2c:	f8c8 7004 	str.w	r7, [r8, #4]
  403c30:	9326      	str	r3, [sp, #152]	; 0x98
  403c32:	f300 831f 	bgt.w	404274 <_svfprintf_r+0x1198>
  403c36:	f108 0808 	add.w	r8, r8, #8
  403c3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403c3c:	2f00      	cmp	r7, #0
  403c3e:	bfa8      	it	ge
  403c40:	1bdb      	subge	r3, r3, r7
  403c42:	2b00      	cmp	r3, #0
  403c44:	461f      	mov	r7, r3
  403c46:	f340 80d6 	ble.w	403df6 <_svfprintf_r+0xd1a>
  403c4a:	2f10      	cmp	r7, #16
  403c4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403c4e:	4d31      	ldr	r5, [pc, #196]	; (403d14 <_svfprintf_r+0xc38>)
  403c50:	f340 81ed 	ble.w	40402e <_svfprintf_r+0xf52>
  403c54:	4642      	mov	r2, r8
  403c56:	4621      	mov	r1, r4
  403c58:	46b0      	mov	r8, r6
  403c5a:	f04f 0b10 	mov.w	fp, #16
  403c5e:	462e      	mov	r6, r5
  403c60:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403c62:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403c64:	e004      	b.n	403c70 <_svfprintf_r+0xb94>
  403c66:	3208      	adds	r2, #8
  403c68:	3f10      	subs	r7, #16
  403c6a:	2f10      	cmp	r7, #16
  403c6c:	f340 81db 	ble.w	404026 <_svfprintf_r+0xf4a>
  403c70:	3301      	adds	r3, #1
  403c72:	3110      	adds	r1, #16
  403c74:	2b07      	cmp	r3, #7
  403c76:	9127      	str	r1, [sp, #156]	; 0x9c
  403c78:	9326      	str	r3, [sp, #152]	; 0x98
  403c7a:	e882 0840 	stmia.w	r2, {r6, fp}
  403c7e:	ddf2      	ble.n	403c66 <_svfprintf_r+0xb8a>
  403c80:	aa25      	add	r2, sp, #148	; 0x94
  403c82:	4629      	mov	r1, r5
  403c84:	4620      	mov	r0, r4
  403c86:	f003 fee5 	bl	407a54 <__ssprint_r>
  403c8a:	2800      	cmp	r0, #0
  403c8c:	f47f aaf8 	bne.w	403280 <_svfprintf_r+0x1a4>
  403c90:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403c92:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403c94:	464a      	mov	r2, r9
  403c96:	e7e7      	b.n	403c68 <_svfprintf_r+0xb8c>
  403c98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c9a:	930e      	str	r3, [sp, #56]	; 0x38
  403c9c:	464e      	mov	r6, r9
  403c9e:	f7ff bb2d 	b.w	4032fc <_svfprintf_r+0x220>
  403ca2:	2d00      	cmp	r5, #0
  403ca4:	bf08      	it	eq
  403ca6:	2c0a      	cmpeq	r4, #10
  403ca8:	f0c0 808f 	bcc.w	403dca <_svfprintf_r+0xcee>
  403cac:	464e      	mov	r6, r9
  403cae:	4620      	mov	r0, r4
  403cb0:	4629      	mov	r1, r5
  403cb2:	220a      	movs	r2, #10
  403cb4:	2300      	movs	r3, #0
  403cb6:	f004 fdd9 	bl	40886c <__aeabi_uldivmod>
  403cba:	3230      	adds	r2, #48	; 0x30
  403cbc:	f806 2d01 	strb.w	r2, [r6, #-1]!
  403cc0:	4620      	mov	r0, r4
  403cc2:	4629      	mov	r1, r5
  403cc4:	2300      	movs	r3, #0
  403cc6:	220a      	movs	r2, #10
  403cc8:	f004 fdd0 	bl	40886c <__aeabi_uldivmod>
  403ccc:	4604      	mov	r4, r0
  403cce:	460d      	mov	r5, r1
  403cd0:	ea54 0305 	orrs.w	r3, r4, r5
  403cd4:	d1eb      	bne.n	403cae <_svfprintf_r+0xbd2>
  403cd6:	eba9 0306 	sub.w	r3, r9, r6
  403cda:	930e      	str	r3, [sp, #56]	; 0x38
  403cdc:	f7ff bb0e 	b.w	4032fc <_svfprintf_r+0x220>
  403ce0:	aa25      	add	r2, sp, #148	; 0x94
  403ce2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ce4:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ce6:	f003 feb5 	bl	407a54 <__ssprint_r>
  403cea:	2800      	cmp	r0, #0
  403cec:	f47f aac8 	bne.w	403280 <_svfprintf_r+0x1a4>
  403cf0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403cf4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403cf6:	46c8      	mov	r8, r9
  403cf8:	f7ff bb5e 	b.w	4033b8 <_svfprintf_r+0x2dc>
  403cfc:	1e5e      	subs	r6, r3, #1
  403cfe:	2e00      	cmp	r6, #0
  403d00:	f77f af0a 	ble.w	403b18 <_svfprintf_r+0xa3c>
  403d04:	2e10      	cmp	r6, #16
  403d06:	4d03      	ldr	r5, [pc, #12]	; (403d14 <_svfprintf_r+0xc38>)
  403d08:	dd22      	ble.n	403d50 <_svfprintf_r+0xc74>
  403d0a:	4622      	mov	r2, r4
  403d0c:	f04f 0b10 	mov.w	fp, #16
  403d10:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403d12:	e006      	b.n	403d22 <_svfprintf_r+0xc46>
  403d14:	00410958 	.word	0x00410958
  403d18:	3e10      	subs	r6, #16
  403d1a:	2e10      	cmp	r6, #16
  403d1c:	f108 0808 	add.w	r8, r8, #8
  403d20:	dd15      	ble.n	403d4e <_svfprintf_r+0xc72>
  403d22:	3701      	adds	r7, #1
  403d24:	3210      	adds	r2, #16
  403d26:	2f07      	cmp	r7, #7
  403d28:	9227      	str	r2, [sp, #156]	; 0x9c
  403d2a:	9726      	str	r7, [sp, #152]	; 0x98
  403d2c:	e888 0820 	stmia.w	r8, {r5, fp}
  403d30:	ddf2      	ble.n	403d18 <_svfprintf_r+0xc3c>
  403d32:	aa25      	add	r2, sp, #148	; 0x94
  403d34:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403d36:	4620      	mov	r0, r4
  403d38:	f003 fe8c 	bl	407a54 <__ssprint_r>
  403d3c:	2800      	cmp	r0, #0
  403d3e:	f47f aa9f 	bne.w	403280 <_svfprintf_r+0x1a4>
  403d42:	3e10      	subs	r6, #16
  403d44:	2e10      	cmp	r6, #16
  403d46:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403d48:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403d4a:	46c8      	mov	r8, r9
  403d4c:	dce9      	bgt.n	403d22 <_svfprintf_r+0xc46>
  403d4e:	4614      	mov	r4, r2
  403d50:	3701      	adds	r7, #1
  403d52:	4434      	add	r4, r6
  403d54:	2f07      	cmp	r7, #7
  403d56:	9427      	str	r4, [sp, #156]	; 0x9c
  403d58:	9726      	str	r7, [sp, #152]	; 0x98
  403d5a:	e888 0060 	stmia.w	r8, {r5, r6}
  403d5e:	f77f aed9 	ble.w	403b14 <_svfprintf_r+0xa38>
  403d62:	aa25      	add	r2, sp, #148	; 0x94
  403d64:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403d66:	980c      	ldr	r0, [sp, #48]	; 0x30
  403d68:	f003 fe74 	bl	407a54 <__ssprint_r>
  403d6c:	2800      	cmp	r0, #0
  403d6e:	f47f aa87 	bne.w	403280 <_svfprintf_r+0x1a4>
  403d72:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403d74:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403d76:	46c8      	mov	r8, r9
  403d78:	e6ce      	b.n	403b18 <_svfprintf_r+0xa3c>
  403d7a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403d7c:	6814      	ldr	r4, [r2, #0]
  403d7e:	4613      	mov	r3, r2
  403d80:	3304      	adds	r3, #4
  403d82:	17e5      	asrs	r5, r4, #31
  403d84:	930f      	str	r3, [sp, #60]	; 0x3c
  403d86:	4622      	mov	r2, r4
  403d88:	462b      	mov	r3, r5
  403d8a:	e4fa      	b.n	403782 <_svfprintf_r+0x6a6>
  403d8c:	3204      	adds	r2, #4
  403d8e:	681c      	ldr	r4, [r3, #0]
  403d90:	920f      	str	r2, [sp, #60]	; 0x3c
  403d92:	2301      	movs	r3, #1
  403d94:	2500      	movs	r5, #0
  403d96:	f7ff ba94 	b.w	4032c2 <_svfprintf_r+0x1e6>
  403d9a:	681c      	ldr	r4, [r3, #0]
  403d9c:	3304      	adds	r3, #4
  403d9e:	930f      	str	r3, [sp, #60]	; 0x3c
  403da0:	2500      	movs	r5, #0
  403da2:	e421      	b.n	4035e8 <_svfprintf_r+0x50c>
  403da4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403da6:	460a      	mov	r2, r1
  403da8:	3204      	adds	r2, #4
  403daa:	680c      	ldr	r4, [r1, #0]
  403dac:	920f      	str	r2, [sp, #60]	; 0x3c
  403dae:	2500      	movs	r5, #0
  403db0:	f7ff ba87 	b.w	4032c2 <_svfprintf_r+0x1e6>
  403db4:	4614      	mov	r4, r2
  403db6:	3301      	adds	r3, #1
  403db8:	4434      	add	r4, r6
  403dba:	2b07      	cmp	r3, #7
  403dbc:	9427      	str	r4, [sp, #156]	; 0x9c
  403dbe:	9326      	str	r3, [sp, #152]	; 0x98
  403dc0:	e888 0060 	stmia.w	r8, {r5, r6}
  403dc4:	f77f ab68 	ble.w	403498 <_svfprintf_r+0x3bc>
  403dc8:	e6b3      	b.n	403b32 <_svfprintf_r+0xa56>
  403dca:	f8dd b01c 	ldr.w	fp, [sp, #28]
  403dce:	f8cd b01c 	str.w	fp, [sp, #28]
  403dd2:	ae42      	add	r6, sp, #264	; 0x108
  403dd4:	3430      	adds	r4, #48	; 0x30
  403dd6:	2301      	movs	r3, #1
  403dd8:	f806 4d41 	strb.w	r4, [r6, #-65]!
  403ddc:	930e      	str	r3, [sp, #56]	; 0x38
  403dde:	f7ff ba8d 	b.w	4032fc <_svfprintf_r+0x220>
  403de2:	aa25      	add	r2, sp, #148	; 0x94
  403de4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403de6:	980c      	ldr	r0, [sp, #48]	; 0x30
  403de8:	f003 fe34 	bl	407a54 <__ssprint_r>
  403dec:	2800      	cmp	r0, #0
  403dee:	f47f aa47 	bne.w	403280 <_svfprintf_r+0x1a4>
  403df2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403df4:	46c8      	mov	r8, r9
  403df6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403df8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403dfa:	429a      	cmp	r2, r3
  403dfc:	db44      	blt.n	403e88 <_svfprintf_r+0xdac>
  403dfe:	9b07      	ldr	r3, [sp, #28]
  403e00:	07d9      	lsls	r1, r3, #31
  403e02:	d441      	bmi.n	403e88 <_svfprintf_r+0xdac>
  403e04:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403e06:	9812      	ldr	r0, [sp, #72]	; 0x48
  403e08:	1a9a      	subs	r2, r3, r2
  403e0a:	1a1d      	subs	r5, r3, r0
  403e0c:	4295      	cmp	r5, r2
  403e0e:	bfa8      	it	ge
  403e10:	4615      	movge	r5, r2
  403e12:	2d00      	cmp	r5, #0
  403e14:	dd0e      	ble.n	403e34 <_svfprintf_r+0xd58>
  403e16:	9926      	ldr	r1, [sp, #152]	; 0x98
  403e18:	f8c8 5004 	str.w	r5, [r8, #4]
  403e1c:	3101      	adds	r1, #1
  403e1e:	4406      	add	r6, r0
  403e20:	442c      	add	r4, r5
  403e22:	2907      	cmp	r1, #7
  403e24:	f8c8 6000 	str.w	r6, [r8]
  403e28:	9427      	str	r4, [sp, #156]	; 0x9c
  403e2a:	9126      	str	r1, [sp, #152]	; 0x98
  403e2c:	f300 823b 	bgt.w	4042a6 <_svfprintf_r+0x11ca>
  403e30:	f108 0808 	add.w	r8, r8, #8
  403e34:	2d00      	cmp	r5, #0
  403e36:	bfac      	ite	ge
  403e38:	1b56      	subge	r6, r2, r5
  403e3a:	4616      	movlt	r6, r2
  403e3c:	2e00      	cmp	r6, #0
  403e3e:	f77f ab2d 	ble.w	40349c <_svfprintf_r+0x3c0>
  403e42:	2e10      	cmp	r6, #16
  403e44:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403e46:	4db0      	ldr	r5, [pc, #704]	; (404108 <_svfprintf_r+0x102c>)
  403e48:	ddb5      	ble.n	403db6 <_svfprintf_r+0xcda>
  403e4a:	4622      	mov	r2, r4
  403e4c:	2710      	movs	r7, #16
  403e4e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403e52:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403e54:	e004      	b.n	403e60 <_svfprintf_r+0xd84>
  403e56:	f108 0808 	add.w	r8, r8, #8
  403e5a:	3e10      	subs	r6, #16
  403e5c:	2e10      	cmp	r6, #16
  403e5e:	dda9      	ble.n	403db4 <_svfprintf_r+0xcd8>
  403e60:	3301      	adds	r3, #1
  403e62:	3210      	adds	r2, #16
  403e64:	2b07      	cmp	r3, #7
  403e66:	9227      	str	r2, [sp, #156]	; 0x9c
  403e68:	9326      	str	r3, [sp, #152]	; 0x98
  403e6a:	e888 00a0 	stmia.w	r8, {r5, r7}
  403e6e:	ddf2      	ble.n	403e56 <_svfprintf_r+0xd7a>
  403e70:	aa25      	add	r2, sp, #148	; 0x94
  403e72:	4621      	mov	r1, r4
  403e74:	4658      	mov	r0, fp
  403e76:	f003 fded 	bl	407a54 <__ssprint_r>
  403e7a:	2800      	cmp	r0, #0
  403e7c:	f47f aa00 	bne.w	403280 <_svfprintf_r+0x1a4>
  403e80:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403e82:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403e84:	46c8      	mov	r8, r9
  403e86:	e7e8      	b.n	403e5a <_svfprintf_r+0xd7e>
  403e88:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403e8a:	9819      	ldr	r0, [sp, #100]	; 0x64
  403e8c:	991a      	ldr	r1, [sp, #104]	; 0x68
  403e8e:	f8c8 1000 	str.w	r1, [r8]
  403e92:	3301      	adds	r3, #1
  403e94:	4404      	add	r4, r0
  403e96:	2b07      	cmp	r3, #7
  403e98:	9427      	str	r4, [sp, #156]	; 0x9c
  403e9a:	f8c8 0004 	str.w	r0, [r8, #4]
  403e9e:	9326      	str	r3, [sp, #152]	; 0x98
  403ea0:	f300 81f5 	bgt.w	40428e <_svfprintf_r+0x11b2>
  403ea4:	f108 0808 	add.w	r8, r8, #8
  403ea8:	e7ac      	b.n	403e04 <_svfprintf_r+0xd28>
  403eaa:	9b07      	ldr	r3, [sp, #28]
  403eac:	07da      	lsls	r2, r3, #31
  403eae:	f53f adfe 	bmi.w	403aae <_svfprintf_r+0x9d2>
  403eb2:	3701      	adds	r7, #1
  403eb4:	3401      	adds	r4, #1
  403eb6:	2301      	movs	r3, #1
  403eb8:	2f07      	cmp	r7, #7
  403eba:	9427      	str	r4, [sp, #156]	; 0x9c
  403ebc:	9726      	str	r7, [sp, #152]	; 0x98
  403ebe:	f8c8 6000 	str.w	r6, [r8]
  403ec2:	f8c8 3004 	str.w	r3, [r8, #4]
  403ec6:	f77f ae25 	ble.w	403b14 <_svfprintf_r+0xa38>
  403eca:	e74a      	b.n	403d62 <_svfprintf_r+0xc86>
  403ecc:	aa25      	add	r2, sp, #148	; 0x94
  403ece:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ed0:	980c      	ldr	r0, [sp, #48]	; 0x30
  403ed2:	f003 fdbf 	bl	407a54 <__ssprint_r>
  403ed6:	2800      	cmp	r0, #0
  403ed8:	f47f a9d2 	bne.w	403280 <_svfprintf_r+0x1a4>
  403edc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403ede:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403ee0:	46c8      	mov	r8, r9
  403ee2:	e5f2      	b.n	403aca <_svfprintf_r+0x9ee>
  403ee4:	aa25      	add	r2, sp, #148	; 0x94
  403ee6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403ee8:	980c      	ldr	r0, [sp, #48]	; 0x30
  403eea:	f003 fdb3 	bl	407a54 <__ssprint_r>
  403eee:	2800      	cmp	r0, #0
  403ef0:	f47f a9c6 	bne.w	403280 <_svfprintf_r+0x1a4>
  403ef4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403ef6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403ef8:	46c8      	mov	r8, r9
  403efa:	e5f5      	b.n	403ae8 <_svfprintf_r+0xa0c>
  403efc:	464e      	mov	r6, r9
  403efe:	f7ff b9fd 	b.w	4032fc <_svfprintf_r+0x220>
  403f02:	aa25      	add	r2, sp, #148	; 0x94
  403f04:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403f06:	980c      	ldr	r0, [sp, #48]	; 0x30
  403f08:	f003 fda4 	bl	407a54 <__ssprint_r>
  403f0c:	2800      	cmp	r0, #0
  403f0e:	f47f a9b7 	bne.w	403280 <_svfprintf_r+0x1a4>
  403f12:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403f14:	46c8      	mov	r8, r9
  403f16:	f7ff ba72 	b.w	4033fe <_svfprintf_r+0x322>
  403f1a:	9c15      	ldr	r4, [sp, #84]	; 0x54
  403f1c:	4622      	mov	r2, r4
  403f1e:	4620      	mov	r0, r4
  403f20:	9c14      	ldr	r4, [sp, #80]	; 0x50
  403f22:	4623      	mov	r3, r4
  403f24:	4621      	mov	r1, r4
  403f26:	f004 fc63 	bl	4087f0 <__aeabi_dcmpun>
  403f2a:	2800      	cmp	r0, #0
  403f2c:	f040 8286 	bne.w	40443c <_svfprintf_r+0x1360>
  403f30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f32:	3301      	adds	r3, #1
  403f34:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403f36:	f023 0320 	bic.w	r3, r3, #32
  403f3a:	930e      	str	r3, [sp, #56]	; 0x38
  403f3c:	f000 81e2 	beq.w	404304 <_svfprintf_r+0x1228>
  403f40:	2b47      	cmp	r3, #71	; 0x47
  403f42:	f000 811e 	beq.w	404182 <_svfprintf_r+0x10a6>
  403f46:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  403f4a:	9307      	str	r3, [sp, #28]
  403f4c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403f4e:	1e1f      	subs	r7, r3, #0
  403f50:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403f52:	9308      	str	r3, [sp, #32]
  403f54:	bfbb      	ittet	lt
  403f56:	463b      	movlt	r3, r7
  403f58:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403f5c:	2300      	movge	r3, #0
  403f5e:	232d      	movlt	r3, #45	; 0x2d
  403f60:	9310      	str	r3, [sp, #64]	; 0x40
  403f62:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403f64:	2b66      	cmp	r3, #102	; 0x66
  403f66:	f000 81bb 	beq.w	4042e0 <_svfprintf_r+0x1204>
  403f6a:	2b46      	cmp	r3, #70	; 0x46
  403f6c:	f000 80df 	beq.w	40412e <_svfprintf_r+0x1052>
  403f70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403f72:	9a08      	ldr	r2, [sp, #32]
  403f74:	2b45      	cmp	r3, #69	; 0x45
  403f76:	bf0c      	ite	eq
  403f78:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  403f7a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403f7c:	a823      	add	r0, sp, #140	; 0x8c
  403f7e:	a920      	add	r1, sp, #128	; 0x80
  403f80:	bf08      	it	eq
  403f82:	1c5d      	addeq	r5, r3, #1
  403f84:	9004      	str	r0, [sp, #16]
  403f86:	9103      	str	r1, [sp, #12]
  403f88:	a81f      	add	r0, sp, #124	; 0x7c
  403f8a:	2102      	movs	r1, #2
  403f8c:	463b      	mov	r3, r7
  403f8e:	9002      	str	r0, [sp, #8]
  403f90:	9501      	str	r5, [sp, #4]
  403f92:	9100      	str	r1, [sp, #0]
  403f94:	980c      	ldr	r0, [sp, #48]	; 0x30
  403f96:	f001 faa3 	bl	4054e0 <_dtoa_r>
  403f9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403f9c:	2b67      	cmp	r3, #103	; 0x67
  403f9e:	4606      	mov	r6, r0
  403fa0:	f040 81e0 	bne.w	404364 <_svfprintf_r+0x1288>
  403fa4:	f01b 0f01 	tst.w	fp, #1
  403fa8:	f000 8246 	beq.w	404438 <_svfprintf_r+0x135c>
  403fac:	1974      	adds	r4, r6, r5
  403fae:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403fb0:	9808      	ldr	r0, [sp, #32]
  403fb2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403fb4:	4639      	mov	r1, r7
  403fb6:	f004 fbe9 	bl	40878c <__aeabi_dcmpeq>
  403fba:	2800      	cmp	r0, #0
  403fbc:	f040 8165 	bne.w	40428a <_svfprintf_r+0x11ae>
  403fc0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403fc2:	42a3      	cmp	r3, r4
  403fc4:	d206      	bcs.n	403fd4 <_svfprintf_r+0xef8>
  403fc6:	2130      	movs	r1, #48	; 0x30
  403fc8:	1c5a      	adds	r2, r3, #1
  403fca:	9223      	str	r2, [sp, #140]	; 0x8c
  403fcc:	7019      	strb	r1, [r3, #0]
  403fce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403fd0:	429c      	cmp	r4, r3
  403fd2:	d8f9      	bhi.n	403fc8 <_svfprintf_r+0xeec>
  403fd4:	1b9b      	subs	r3, r3, r6
  403fd6:	9313      	str	r3, [sp, #76]	; 0x4c
  403fd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403fda:	2b47      	cmp	r3, #71	; 0x47
  403fdc:	f000 80e9 	beq.w	4041b2 <_svfprintf_r+0x10d6>
  403fe0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403fe2:	2b65      	cmp	r3, #101	; 0x65
  403fe4:	f340 81cd 	ble.w	404382 <_svfprintf_r+0x12a6>
  403fe8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403fea:	2b66      	cmp	r3, #102	; 0x66
  403fec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403fee:	9312      	str	r3, [sp, #72]	; 0x48
  403ff0:	f000 819e 	beq.w	404330 <_svfprintf_r+0x1254>
  403ff4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403ff6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403ff8:	4619      	mov	r1, r3
  403ffa:	4291      	cmp	r1, r2
  403ffc:	f300 818a 	bgt.w	404314 <_svfprintf_r+0x1238>
  404000:	f01b 0f01 	tst.w	fp, #1
  404004:	f040 8213 	bne.w	40442e <_svfprintf_r+0x1352>
  404008:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40400c:	9308      	str	r3, [sp, #32]
  40400e:	2367      	movs	r3, #103	; 0x67
  404010:	920e      	str	r2, [sp, #56]	; 0x38
  404012:	9311      	str	r3, [sp, #68]	; 0x44
  404014:	9b10      	ldr	r3, [sp, #64]	; 0x40
  404016:	2b00      	cmp	r3, #0
  404018:	f040 80c4 	bne.w	4041a4 <_svfprintf_r+0x10c8>
  40401c:	930a      	str	r3, [sp, #40]	; 0x28
  40401e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404022:	f7ff b973 	b.w	40330c <_svfprintf_r+0x230>
  404026:	4635      	mov	r5, r6
  404028:	460c      	mov	r4, r1
  40402a:	4646      	mov	r6, r8
  40402c:	4690      	mov	r8, r2
  40402e:	3301      	adds	r3, #1
  404030:	443c      	add	r4, r7
  404032:	2b07      	cmp	r3, #7
  404034:	9427      	str	r4, [sp, #156]	; 0x9c
  404036:	9326      	str	r3, [sp, #152]	; 0x98
  404038:	e888 00a0 	stmia.w	r8, {r5, r7}
  40403c:	f73f aed1 	bgt.w	403de2 <_svfprintf_r+0xd06>
  404040:	f108 0808 	add.w	r8, r8, #8
  404044:	e6d7      	b.n	403df6 <_svfprintf_r+0xd1a>
  404046:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404048:	6813      	ldr	r3, [r2, #0]
  40404a:	3204      	adds	r2, #4
  40404c:	920f      	str	r2, [sp, #60]	; 0x3c
  40404e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404050:	601a      	str	r2, [r3, #0]
  404052:	f7ff b86a 	b.w	40312a <_svfprintf_r+0x4e>
  404056:	aa25      	add	r2, sp, #148	; 0x94
  404058:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40405a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40405c:	f003 fcfa 	bl	407a54 <__ssprint_r>
  404060:	2800      	cmp	r0, #0
  404062:	f47f a90d 	bne.w	403280 <_svfprintf_r+0x1a4>
  404066:	46c8      	mov	r8, r9
  404068:	e48d      	b.n	403986 <_svfprintf_r+0x8aa>
  40406a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40406c:	4a27      	ldr	r2, [pc, #156]	; (40410c <_svfprintf_r+0x1030>)
  40406e:	f8c8 2000 	str.w	r2, [r8]
  404072:	3301      	adds	r3, #1
  404074:	3401      	adds	r4, #1
  404076:	2201      	movs	r2, #1
  404078:	2b07      	cmp	r3, #7
  40407a:	9427      	str	r4, [sp, #156]	; 0x9c
  40407c:	9326      	str	r3, [sp, #152]	; 0x98
  40407e:	f8c8 2004 	str.w	r2, [r8, #4]
  404082:	dc72      	bgt.n	40416a <_svfprintf_r+0x108e>
  404084:	f108 0808 	add.w	r8, r8, #8
  404088:	b929      	cbnz	r1, 404096 <_svfprintf_r+0xfba>
  40408a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40408c:	b91b      	cbnz	r3, 404096 <_svfprintf_r+0xfba>
  40408e:	9b07      	ldr	r3, [sp, #28]
  404090:	07d8      	lsls	r0, r3, #31
  404092:	f57f aa03 	bpl.w	40349c <_svfprintf_r+0x3c0>
  404096:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404098:	9819      	ldr	r0, [sp, #100]	; 0x64
  40409a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40409c:	f8c8 2000 	str.w	r2, [r8]
  4040a0:	3301      	adds	r3, #1
  4040a2:	4602      	mov	r2, r0
  4040a4:	4422      	add	r2, r4
  4040a6:	2b07      	cmp	r3, #7
  4040a8:	9227      	str	r2, [sp, #156]	; 0x9c
  4040aa:	f8c8 0004 	str.w	r0, [r8, #4]
  4040ae:	9326      	str	r3, [sp, #152]	; 0x98
  4040b0:	f300 818d 	bgt.w	4043ce <_svfprintf_r+0x12f2>
  4040b4:	f108 0808 	add.w	r8, r8, #8
  4040b8:	2900      	cmp	r1, #0
  4040ba:	f2c0 8165 	blt.w	404388 <_svfprintf_r+0x12ac>
  4040be:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4040c0:	f8c8 6000 	str.w	r6, [r8]
  4040c4:	3301      	adds	r3, #1
  4040c6:	188c      	adds	r4, r1, r2
  4040c8:	2b07      	cmp	r3, #7
  4040ca:	9427      	str	r4, [sp, #156]	; 0x9c
  4040cc:	9326      	str	r3, [sp, #152]	; 0x98
  4040ce:	f8c8 1004 	str.w	r1, [r8, #4]
  4040d2:	f77f a9e1 	ble.w	403498 <_svfprintf_r+0x3bc>
  4040d6:	e52c      	b.n	403b32 <_svfprintf_r+0xa56>
  4040d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4040da:	9909      	ldr	r1, [sp, #36]	; 0x24
  4040dc:	6813      	ldr	r3, [r2, #0]
  4040de:	17cd      	asrs	r5, r1, #31
  4040e0:	4608      	mov	r0, r1
  4040e2:	3204      	adds	r2, #4
  4040e4:	4629      	mov	r1, r5
  4040e6:	920f      	str	r2, [sp, #60]	; 0x3c
  4040e8:	e9c3 0100 	strd	r0, r1, [r3]
  4040ec:	f7ff b81d 	b.w	40312a <_svfprintf_r+0x4e>
  4040f0:	aa25      	add	r2, sp, #148	; 0x94
  4040f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4040f4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4040f6:	f003 fcad 	bl	407a54 <__ssprint_r>
  4040fa:	2800      	cmp	r0, #0
  4040fc:	f47f a8c0 	bne.w	403280 <_svfprintf_r+0x1a4>
  404100:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404102:	46c8      	mov	r8, r9
  404104:	e458      	b.n	4039b8 <_svfprintf_r+0x8dc>
  404106:	bf00      	nop
  404108:	00410958 	.word	0x00410958
  40410c:	00410944 	.word	0x00410944
  404110:	2140      	movs	r1, #64	; 0x40
  404112:	980c      	ldr	r0, [sp, #48]	; 0x30
  404114:	f7fe fac8 	bl	4026a8 <_malloc_r>
  404118:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40411a:	6010      	str	r0, [r2, #0]
  40411c:	6110      	str	r0, [r2, #16]
  40411e:	2800      	cmp	r0, #0
  404120:	f000 81f2 	beq.w	404508 <_svfprintf_r+0x142c>
  404124:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404126:	2340      	movs	r3, #64	; 0x40
  404128:	6153      	str	r3, [r2, #20]
  40412a:	f7fe bfee 	b.w	40310a <_svfprintf_r+0x2e>
  40412e:	a823      	add	r0, sp, #140	; 0x8c
  404130:	a920      	add	r1, sp, #128	; 0x80
  404132:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  404134:	9004      	str	r0, [sp, #16]
  404136:	9103      	str	r1, [sp, #12]
  404138:	a81f      	add	r0, sp, #124	; 0x7c
  40413a:	2103      	movs	r1, #3
  40413c:	9002      	str	r0, [sp, #8]
  40413e:	9a08      	ldr	r2, [sp, #32]
  404140:	9401      	str	r4, [sp, #4]
  404142:	463b      	mov	r3, r7
  404144:	9100      	str	r1, [sp, #0]
  404146:	980c      	ldr	r0, [sp, #48]	; 0x30
  404148:	f001 f9ca 	bl	4054e0 <_dtoa_r>
  40414c:	4625      	mov	r5, r4
  40414e:	4606      	mov	r6, r0
  404150:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404152:	2b46      	cmp	r3, #70	; 0x46
  404154:	eb06 0405 	add.w	r4, r6, r5
  404158:	f47f af29 	bne.w	403fae <_svfprintf_r+0xed2>
  40415c:	7833      	ldrb	r3, [r6, #0]
  40415e:	2b30      	cmp	r3, #48	; 0x30
  404160:	f000 8178 	beq.w	404454 <_svfprintf_r+0x1378>
  404164:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  404166:	442c      	add	r4, r5
  404168:	e721      	b.n	403fae <_svfprintf_r+0xed2>
  40416a:	aa25      	add	r2, sp, #148	; 0x94
  40416c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40416e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404170:	f003 fc70 	bl	407a54 <__ssprint_r>
  404174:	2800      	cmp	r0, #0
  404176:	f47f a883 	bne.w	403280 <_svfprintf_r+0x1a4>
  40417a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40417c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40417e:	46c8      	mov	r8, r9
  404180:	e782      	b.n	404088 <_svfprintf_r+0xfac>
  404182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404184:	2b00      	cmp	r3, #0
  404186:	bf08      	it	eq
  404188:	2301      	moveq	r3, #1
  40418a:	930a      	str	r3, [sp, #40]	; 0x28
  40418c:	e6db      	b.n	403f46 <_svfprintf_r+0xe6a>
  40418e:	4630      	mov	r0, r6
  404190:	940a      	str	r4, [sp, #40]	; 0x28
  404192:	f7fe ff35 	bl	403000 <strlen>
  404196:	950f      	str	r5, [sp, #60]	; 0x3c
  404198:	900e      	str	r0, [sp, #56]	; 0x38
  40419a:	f8cd b01c 	str.w	fp, [sp, #28]
  40419e:	4603      	mov	r3, r0
  4041a0:	f7ff b9f9 	b.w	403596 <_svfprintf_r+0x4ba>
  4041a4:	272d      	movs	r7, #45	; 0x2d
  4041a6:	2300      	movs	r3, #0
  4041a8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4041ac:	930a      	str	r3, [sp, #40]	; 0x28
  4041ae:	f7ff b8ae 	b.w	40330e <_svfprintf_r+0x232>
  4041b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4041b4:	9312      	str	r3, [sp, #72]	; 0x48
  4041b6:	461a      	mov	r2, r3
  4041b8:	3303      	adds	r3, #3
  4041ba:	db04      	blt.n	4041c6 <_svfprintf_r+0x10ea>
  4041bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041be:	4619      	mov	r1, r3
  4041c0:	4291      	cmp	r1, r2
  4041c2:	f6bf af17 	bge.w	403ff4 <_svfprintf_r+0xf18>
  4041c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4041c8:	3b02      	subs	r3, #2
  4041ca:	9311      	str	r3, [sp, #68]	; 0x44
  4041cc:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  4041d0:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  4041d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4041d6:	3b01      	subs	r3, #1
  4041d8:	2b00      	cmp	r3, #0
  4041da:	931f      	str	r3, [sp, #124]	; 0x7c
  4041dc:	bfbd      	ittte	lt
  4041de:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  4041e0:	f1c3 0301 	rsblt	r3, r3, #1
  4041e4:	222d      	movlt	r2, #45	; 0x2d
  4041e6:	222b      	movge	r2, #43	; 0x2b
  4041e8:	2b09      	cmp	r3, #9
  4041ea:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4041ee:	f340 8116 	ble.w	40441e <_svfprintf_r+0x1342>
  4041f2:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  4041f6:	4620      	mov	r0, r4
  4041f8:	4dab      	ldr	r5, [pc, #684]	; (4044a8 <_svfprintf_r+0x13cc>)
  4041fa:	e000      	b.n	4041fe <_svfprintf_r+0x1122>
  4041fc:	4610      	mov	r0, r2
  4041fe:	fb85 1203 	smull	r1, r2, r5, r3
  404202:	17d9      	asrs	r1, r3, #31
  404204:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  404208:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  40420c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  404210:	3230      	adds	r2, #48	; 0x30
  404212:	2909      	cmp	r1, #9
  404214:	f800 2c01 	strb.w	r2, [r0, #-1]
  404218:	460b      	mov	r3, r1
  40421a:	f100 32ff 	add.w	r2, r0, #4294967295
  40421e:	dced      	bgt.n	4041fc <_svfprintf_r+0x1120>
  404220:	3330      	adds	r3, #48	; 0x30
  404222:	3802      	subs	r0, #2
  404224:	b2d9      	uxtb	r1, r3
  404226:	4284      	cmp	r4, r0
  404228:	f802 1c01 	strb.w	r1, [r2, #-1]
  40422c:	f240 8165 	bls.w	4044fa <_svfprintf_r+0x141e>
  404230:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  404234:	4613      	mov	r3, r2
  404236:	e001      	b.n	40423c <_svfprintf_r+0x1160>
  404238:	f813 1b01 	ldrb.w	r1, [r3], #1
  40423c:	f800 1b01 	strb.w	r1, [r0], #1
  404240:	42a3      	cmp	r3, r4
  404242:	d1f9      	bne.n	404238 <_svfprintf_r+0x115c>
  404244:	3301      	adds	r3, #1
  404246:	1a9b      	subs	r3, r3, r2
  404248:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  40424c:	4413      	add	r3, r2
  40424e:	aa21      	add	r2, sp, #132	; 0x84
  404250:	1a9b      	subs	r3, r3, r2
  404252:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  404254:	931b      	str	r3, [sp, #108]	; 0x6c
  404256:	2a01      	cmp	r2, #1
  404258:	4413      	add	r3, r2
  40425a:	930e      	str	r3, [sp, #56]	; 0x38
  40425c:	f340 8119 	ble.w	404492 <_svfprintf_r+0x13b6>
  404260:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404262:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404264:	4413      	add	r3, r2
  404266:	930e      	str	r3, [sp, #56]	; 0x38
  404268:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40426c:	9308      	str	r3, [sp, #32]
  40426e:	2300      	movs	r3, #0
  404270:	9312      	str	r3, [sp, #72]	; 0x48
  404272:	e6cf      	b.n	404014 <_svfprintf_r+0xf38>
  404274:	aa25      	add	r2, sp, #148	; 0x94
  404276:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404278:	980c      	ldr	r0, [sp, #48]	; 0x30
  40427a:	f003 fbeb 	bl	407a54 <__ssprint_r>
  40427e:	2800      	cmp	r0, #0
  404280:	f47e affe 	bne.w	403280 <_svfprintf_r+0x1a4>
  404284:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404286:	46c8      	mov	r8, r9
  404288:	e4d7      	b.n	403c3a <_svfprintf_r+0xb5e>
  40428a:	4623      	mov	r3, r4
  40428c:	e6a2      	b.n	403fd4 <_svfprintf_r+0xef8>
  40428e:	aa25      	add	r2, sp, #148	; 0x94
  404290:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404292:	980c      	ldr	r0, [sp, #48]	; 0x30
  404294:	f003 fbde 	bl	407a54 <__ssprint_r>
  404298:	2800      	cmp	r0, #0
  40429a:	f47e aff1 	bne.w	403280 <_svfprintf_r+0x1a4>
  40429e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4042a0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4042a2:	46c8      	mov	r8, r9
  4042a4:	e5ae      	b.n	403e04 <_svfprintf_r+0xd28>
  4042a6:	aa25      	add	r2, sp, #148	; 0x94
  4042a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4042aa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4042ac:	f003 fbd2 	bl	407a54 <__ssprint_r>
  4042b0:	2800      	cmp	r0, #0
  4042b2:	f47e afe5 	bne.w	403280 <_svfprintf_r+0x1a4>
  4042b6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4042b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4042ba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4042bc:	1a9a      	subs	r2, r3, r2
  4042be:	46c8      	mov	r8, r9
  4042c0:	e5b8      	b.n	403e34 <_svfprintf_r+0xd58>
  4042c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042c4:	9612      	str	r6, [sp, #72]	; 0x48
  4042c6:	2b06      	cmp	r3, #6
  4042c8:	bf28      	it	cs
  4042ca:	2306      	movcs	r3, #6
  4042cc:	960a      	str	r6, [sp, #40]	; 0x28
  4042ce:	4637      	mov	r7, r6
  4042d0:	9308      	str	r3, [sp, #32]
  4042d2:	950f      	str	r5, [sp, #60]	; 0x3c
  4042d4:	f8cd b01c 	str.w	fp, [sp, #28]
  4042d8:	930e      	str	r3, [sp, #56]	; 0x38
  4042da:	4e74      	ldr	r6, [pc, #464]	; (4044ac <_svfprintf_r+0x13d0>)
  4042dc:	f7ff b816 	b.w	40330c <_svfprintf_r+0x230>
  4042e0:	a823      	add	r0, sp, #140	; 0x8c
  4042e2:	a920      	add	r1, sp, #128	; 0x80
  4042e4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4042e6:	9004      	str	r0, [sp, #16]
  4042e8:	9103      	str	r1, [sp, #12]
  4042ea:	a81f      	add	r0, sp, #124	; 0x7c
  4042ec:	2103      	movs	r1, #3
  4042ee:	9002      	str	r0, [sp, #8]
  4042f0:	9a08      	ldr	r2, [sp, #32]
  4042f2:	9501      	str	r5, [sp, #4]
  4042f4:	463b      	mov	r3, r7
  4042f6:	9100      	str	r1, [sp, #0]
  4042f8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4042fa:	f001 f8f1 	bl	4054e0 <_dtoa_r>
  4042fe:	4606      	mov	r6, r0
  404300:	1944      	adds	r4, r0, r5
  404302:	e72b      	b.n	40415c <_svfprintf_r+0x1080>
  404304:	2306      	movs	r3, #6
  404306:	930a      	str	r3, [sp, #40]	; 0x28
  404308:	e61d      	b.n	403f46 <_svfprintf_r+0xe6a>
  40430a:	272d      	movs	r7, #45	; 0x2d
  40430c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404310:	f7ff bacd 	b.w	4038ae <_svfprintf_r+0x7d2>
  404314:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404316:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404318:	4413      	add	r3, r2
  40431a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40431c:	930e      	str	r3, [sp, #56]	; 0x38
  40431e:	2a00      	cmp	r2, #0
  404320:	f340 80b0 	ble.w	404484 <_svfprintf_r+0x13a8>
  404324:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404328:	9308      	str	r3, [sp, #32]
  40432a:	2367      	movs	r3, #103	; 0x67
  40432c:	9311      	str	r3, [sp, #68]	; 0x44
  40432e:	e671      	b.n	404014 <_svfprintf_r+0xf38>
  404330:	2b00      	cmp	r3, #0
  404332:	f340 80c3 	ble.w	4044bc <_svfprintf_r+0x13e0>
  404336:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404338:	2a00      	cmp	r2, #0
  40433a:	f040 8099 	bne.w	404470 <_svfprintf_r+0x1394>
  40433e:	f01b 0f01 	tst.w	fp, #1
  404342:	f040 8095 	bne.w	404470 <_svfprintf_r+0x1394>
  404346:	9308      	str	r3, [sp, #32]
  404348:	930e      	str	r3, [sp, #56]	; 0x38
  40434a:	e663      	b.n	404014 <_svfprintf_r+0xf38>
  40434c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40434e:	9308      	str	r3, [sp, #32]
  404350:	930e      	str	r3, [sp, #56]	; 0x38
  404352:	900a      	str	r0, [sp, #40]	; 0x28
  404354:	950f      	str	r5, [sp, #60]	; 0x3c
  404356:	f8cd b01c 	str.w	fp, [sp, #28]
  40435a:	9012      	str	r0, [sp, #72]	; 0x48
  40435c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404360:	f7fe bfd4 	b.w	40330c <_svfprintf_r+0x230>
  404364:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404366:	2b47      	cmp	r3, #71	; 0x47
  404368:	f47f ae20 	bne.w	403fac <_svfprintf_r+0xed0>
  40436c:	f01b 0f01 	tst.w	fp, #1
  404370:	f47f aeee 	bne.w	404150 <_svfprintf_r+0x1074>
  404374:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404376:	1b9b      	subs	r3, r3, r6
  404378:	9313      	str	r3, [sp, #76]	; 0x4c
  40437a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40437c:	2b47      	cmp	r3, #71	; 0x47
  40437e:	f43f af18 	beq.w	4041b2 <_svfprintf_r+0x10d6>
  404382:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404384:	9312      	str	r3, [sp, #72]	; 0x48
  404386:	e721      	b.n	4041cc <_svfprintf_r+0x10f0>
  404388:	424f      	negs	r7, r1
  40438a:	3110      	adds	r1, #16
  40438c:	4d48      	ldr	r5, [pc, #288]	; (4044b0 <_svfprintf_r+0x13d4>)
  40438e:	da2f      	bge.n	4043f0 <_svfprintf_r+0x1314>
  404390:	2410      	movs	r4, #16
  404392:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404396:	e004      	b.n	4043a2 <_svfprintf_r+0x12c6>
  404398:	f108 0808 	add.w	r8, r8, #8
  40439c:	3f10      	subs	r7, #16
  40439e:	2f10      	cmp	r7, #16
  4043a0:	dd26      	ble.n	4043f0 <_svfprintf_r+0x1314>
  4043a2:	3301      	adds	r3, #1
  4043a4:	3210      	adds	r2, #16
  4043a6:	2b07      	cmp	r3, #7
  4043a8:	9227      	str	r2, [sp, #156]	; 0x9c
  4043aa:	9326      	str	r3, [sp, #152]	; 0x98
  4043ac:	f8c8 5000 	str.w	r5, [r8]
  4043b0:	f8c8 4004 	str.w	r4, [r8, #4]
  4043b4:	ddf0      	ble.n	404398 <_svfprintf_r+0x12bc>
  4043b6:	aa25      	add	r2, sp, #148	; 0x94
  4043b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4043ba:	4658      	mov	r0, fp
  4043bc:	f003 fb4a 	bl	407a54 <__ssprint_r>
  4043c0:	2800      	cmp	r0, #0
  4043c2:	f47e af5d 	bne.w	403280 <_svfprintf_r+0x1a4>
  4043c6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4043c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4043ca:	46c8      	mov	r8, r9
  4043cc:	e7e6      	b.n	40439c <_svfprintf_r+0x12c0>
  4043ce:	aa25      	add	r2, sp, #148	; 0x94
  4043d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4043d2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4043d4:	f003 fb3e 	bl	407a54 <__ssprint_r>
  4043d8:	2800      	cmp	r0, #0
  4043da:	f47e af51 	bne.w	403280 <_svfprintf_r+0x1a4>
  4043de:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4043e0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4043e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4043e4:	46c8      	mov	r8, r9
  4043e6:	e667      	b.n	4040b8 <_svfprintf_r+0xfdc>
  4043e8:	2000      	movs	r0, #0
  4043ea:	900a      	str	r0, [sp, #40]	; 0x28
  4043ec:	f7fe bed0 	b.w	403190 <_svfprintf_r+0xb4>
  4043f0:	3301      	adds	r3, #1
  4043f2:	443a      	add	r2, r7
  4043f4:	2b07      	cmp	r3, #7
  4043f6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4043fa:	9227      	str	r2, [sp, #156]	; 0x9c
  4043fc:	9326      	str	r3, [sp, #152]	; 0x98
  4043fe:	f108 0808 	add.w	r8, r8, #8
  404402:	f77f ae5c 	ble.w	4040be <_svfprintf_r+0xfe2>
  404406:	aa25      	add	r2, sp, #148	; 0x94
  404408:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40440a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40440c:	f003 fb22 	bl	407a54 <__ssprint_r>
  404410:	2800      	cmp	r0, #0
  404412:	f47e af35 	bne.w	403280 <_svfprintf_r+0x1a4>
  404416:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404418:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40441a:	46c8      	mov	r8, r9
  40441c:	e64f      	b.n	4040be <_svfprintf_r+0xfe2>
  40441e:	3330      	adds	r3, #48	; 0x30
  404420:	2230      	movs	r2, #48	; 0x30
  404422:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  404426:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40442a:	ab22      	add	r3, sp, #136	; 0x88
  40442c:	e70f      	b.n	40424e <_svfprintf_r+0x1172>
  40442e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404430:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404432:	4413      	add	r3, r2
  404434:	930e      	str	r3, [sp, #56]	; 0x38
  404436:	e775      	b.n	404324 <_svfprintf_r+0x1248>
  404438:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40443a:	e5cb      	b.n	403fd4 <_svfprintf_r+0xef8>
  40443c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40443e:	4e1d      	ldr	r6, [pc, #116]	; (4044b4 <_svfprintf_r+0x13d8>)
  404440:	2b00      	cmp	r3, #0
  404442:	bfb6      	itet	lt
  404444:	272d      	movlt	r7, #45	; 0x2d
  404446:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40444a:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40444e:	4b1a      	ldr	r3, [pc, #104]	; (4044b8 <_svfprintf_r+0x13dc>)
  404450:	f7ff ba2f 	b.w	4038b2 <_svfprintf_r+0x7d6>
  404454:	9a16      	ldr	r2, [sp, #88]	; 0x58
  404456:	9808      	ldr	r0, [sp, #32]
  404458:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40445a:	4639      	mov	r1, r7
  40445c:	f004 f996 	bl	40878c <__aeabi_dcmpeq>
  404460:	2800      	cmp	r0, #0
  404462:	f47f ae7f 	bne.w	404164 <_svfprintf_r+0x1088>
  404466:	f1c5 0501 	rsb	r5, r5, #1
  40446a:	951f      	str	r5, [sp, #124]	; 0x7c
  40446c:	442c      	add	r4, r5
  40446e:	e59e      	b.n	403fae <_svfprintf_r+0xed2>
  404470:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404472:	9a19      	ldr	r2, [sp, #100]	; 0x64
  404474:	4413      	add	r3, r2
  404476:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404478:	441a      	add	r2, r3
  40447a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40447e:	920e      	str	r2, [sp, #56]	; 0x38
  404480:	9308      	str	r3, [sp, #32]
  404482:	e5c7      	b.n	404014 <_svfprintf_r+0xf38>
  404484:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404486:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404488:	f1c3 0301 	rsb	r3, r3, #1
  40448c:	441a      	add	r2, r3
  40448e:	4613      	mov	r3, r2
  404490:	e7d0      	b.n	404434 <_svfprintf_r+0x1358>
  404492:	f01b 0301 	ands.w	r3, fp, #1
  404496:	9312      	str	r3, [sp, #72]	; 0x48
  404498:	f47f aee2 	bne.w	404260 <_svfprintf_r+0x1184>
  40449c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40449e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4044a2:	9308      	str	r3, [sp, #32]
  4044a4:	e5b6      	b.n	404014 <_svfprintf_r+0xf38>
  4044a6:	bf00      	nop
  4044a8:	66666667 	.word	0x66666667
  4044ac:	0041093c 	.word	0x0041093c
  4044b0:	00410958 	.word	0x00410958
  4044b4:	00410910 	.word	0x00410910
  4044b8:	0041090c 	.word	0x0041090c
  4044bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4044be:	b913      	cbnz	r3, 4044c6 <_svfprintf_r+0x13ea>
  4044c0:	f01b 0f01 	tst.w	fp, #1
  4044c4:	d002      	beq.n	4044cc <_svfprintf_r+0x13f0>
  4044c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4044c8:	3301      	adds	r3, #1
  4044ca:	e7d4      	b.n	404476 <_svfprintf_r+0x139a>
  4044cc:	2301      	movs	r3, #1
  4044ce:	e73a      	b.n	404346 <_svfprintf_r+0x126a>
  4044d0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4044d2:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4044d6:	6828      	ldr	r0, [r5, #0]
  4044d8:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4044dc:	900a      	str	r0, [sp, #40]	; 0x28
  4044de:	4628      	mov	r0, r5
  4044e0:	3004      	adds	r0, #4
  4044e2:	46a2      	mov	sl, r4
  4044e4:	900f      	str	r0, [sp, #60]	; 0x3c
  4044e6:	f7fe be51 	b.w	40318c <_svfprintf_r+0xb0>
  4044ea:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4044ee:	f7ff b867 	b.w	4035c0 <_svfprintf_r+0x4e4>
  4044f2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4044f6:	f7ff ba15 	b.w	403924 <_svfprintf_r+0x848>
  4044fa:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4044fe:	e6a6      	b.n	40424e <_svfprintf_r+0x1172>
  404500:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404504:	f7ff b8eb 	b.w	4036de <_svfprintf_r+0x602>
  404508:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40450a:	230c      	movs	r3, #12
  40450c:	6013      	str	r3, [r2, #0]
  40450e:	f04f 33ff 	mov.w	r3, #4294967295
  404512:	9309      	str	r3, [sp, #36]	; 0x24
  404514:	f7fe bebd 	b.w	403292 <_svfprintf_r+0x1b6>
  404518:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40451c:	f7ff b99a 	b.w	403854 <_svfprintf_r+0x778>
  404520:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404524:	f7ff b976 	b.w	403814 <_svfprintf_r+0x738>
  404528:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40452c:	f7ff b959 	b.w	4037e2 <_svfprintf_r+0x706>
  404530:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  404534:	f7ff b912 	b.w	40375c <_svfprintf_r+0x680>

00404538 <__sprint_r.part.0>:
  404538:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40453c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  40453e:	049c      	lsls	r4, r3, #18
  404540:	4693      	mov	fp, r2
  404542:	d52f      	bpl.n	4045a4 <__sprint_r.part.0+0x6c>
  404544:	6893      	ldr	r3, [r2, #8]
  404546:	6812      	ldr	r2, [r2, #0]
  404548:	b353      	cbz	r3, 4045a0 <__sprint_r.part.0+0x68>
  40454a:	460e      	mov	r6, r1
  40454c:	4607      	mov	r7, r0
  40454e:	f102 0908 	add.w	r9, r2, #8
  404552:	e919 0420 	ldmdb	r9, {r5, sl}
  404556:	ea5f 089a 	movs.w	r8, sl, lsr #2
  40455a:	d017      	beq.n	40458c <__sprint_r.part.0+0x54>
  40455c:	3d04      	subs	r5, #4
  40455e:	2400      	movs	r4, #0
  404560:	e001      	b.n	404566 <__sprint_r.part.0+0x2e>
  404562:	45a0      	cmp	r8, r4
  404564:	d010      	beq.n	404588 <__sprint_r.part.0+0x50>
  404566:	4632      	mov	r2, r6
  404568:	f855 1f04 	ldr.w	r1, [r5, #4]!
  40456c:	4638      	mov	r0, r7
  40456e:	f002 f87b 	bl	406668 <_fputwc_r>
  404572:	1c43      	adds	r3, r0, #1
  404574:	f104 0401 	add.w	r4, r4, #1
  404578:	d1f3      	bne.n	404562 <__sprint_r.part.0+0x2a>
  40457a:	2300      	movs	r3, #0
  40457c:	f8cb 3008 	str.w	r3, [fp, #8]
  404580:	f8cb 3004 	str.w	r3, [fp, #4]
  404584:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404588:	f8db 3008 	ldr.w	r3, [fp, #8]
  40458c:	f02a 0a03 	bic.w	sl, sl, #3
  404590:	eba3 030a 	sub.w	r3, r3, sl
  404594:	f8cb 3008 	str.w	r3, [fp, #8]
  404598:	f109 0908 	add.w	r9, r9, #8
  40459c:	2b00      	cmp	r3, #0
  40459e:	d1d8      	bne.n	404552 <__sprint_r.part.0+0x1a>
  4045a0:	2000      	movs	r0, #0
  4045a2:	e7ea      	b.n	40457a <__sprint_r.part.0+0x42>
  4045a4:	f002 f9ca 	bl	40693c <__sfvwrite_r>
  4045a8:	2300      	movs	r3, #0
  4045aa:	f8cb 3008 	str.w	r3, [fp, #8]
  4045ae:	f8cb 3004 	str.w	r3, [fp, #4]
  4045b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045b6:	bf00      	nop

004045b8 <_vfiprintf_r>:
  4045b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4045bc:	b0ad      	sub	sp, #180	; 0xb4
  4045be:	461d      	mov	r5, r3
  4045c0:	468b      	mov	fp, r1
  4045c2:	4690      	mov	r8, r2
  4045c4:	9307      	str	r3, [sp, #28]
  4045c6:	9006      	str	r0, [sp, #24]
  4045c8:	b118      	cbz	r0, 4045d2 <_vfiprintf_r+0x1a>
  4045ca:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4045cc:	2b00      	cmp	r3, #0
  4045ce:	f000 80f3 	beq.w	4047b8 <_vfiprintf_r+0x200>
  4045d2:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4045d6:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4045da:	07df      	lsls	r7, r3, #31
  4045dc:	b281      	uxth	r1, r0
  4045de:	d402      	bmi.n	4045e6 <_vfiprintf_r+0x2e>
  4045e0:	058e      	lsls	r6, r1, #22
  4045e2:	f140 80fc 	bpl.w	4047de <_vfiprintf_r+0x226>
  4045e6:	048c      	lsls	r4, r1, #18
  4045e8:	d40a      	bmi.n	404600 <_vfiprintf_r+0x48>
  4045ea:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4045ee:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
  4045f2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4045f6:	f8ab 100c 	strh.w	r1, [fp, #12]
  4045fa:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
  4045fe:	b289      	uxth	r1, r1
  404600:	0708      	lsls	r0, r1, #28
  404602:	f140 80b3 	bpl.w	40476c <_vfiprintf_r+0x1b4>
  404606:	f8db 3010 	ldr.w	r3, [fp, #16]
  40460a:	2b00      	cmp	r3, #0
  40460c:	f000 80ae 	beq.w	40476c <_vfiprintf_r+0x1b4>
  404610:	f001 031a 	and.w	r3, r1, #26
  404614:	2b0a      	cmp	r3, #10
  404616:	f000 80b5 	beq.w	404784 <_vfiprintf_r+0x1cc>
  40461a:	2300      	movs	r3, #0
  40461c:	f10d 0970 	add.w	r9, sp, #112	; 0x70
  404620:	930b      	str	r3, [sp, #44]	; 0x2c
  404622:	9311      	str	r3, [sp, #68]	; 0x44
  404624:	9310      	str	r3, [sp, #64]	; 0x40
  404626:	9303      	str	r3, [sp, #12]
  404628:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  40462c:	46ca      	mov	sl, r9
  40462e:	f8cd b010 	str.w	fp, [sp, #16]
  404632:	f898 3000 	ldrb.w	r3, [r8]
  404636:	4644      	mov	r4, r8
  404638:	b1fb      	cbz	r3, 40467a <_vfiprintf_r+0xc2>
  40463a:	2b25      	cmp	r3, #37	; 0x25
  40463c:	d102      	bne.n	404644 <_vfiprintf_r+0x8c>
  40463e:	e01c      	b.n	40467a <_vfiprintf_r+0xc2>
  404640:	2b25      	cmp	r3, #37	; 0x25
  404642:	d003      	beq.n	40464c <_vfiprintf_r+0x94>
  404644:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  404648:	2b00      	cmp	r3, #0
  40464a:	d1f9      	bne.n	404640 <_vfiprintf_r+0x88>
  40464c:	eba4 0508 	sub.w	r5, r4, r8
  404650:	b19d      	cbz	r5, 40467a <_vfiprintf_r+0xc2>
  404652:	9b10      	ldr	r3, [sp, #64]	; 0x40
  404654:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404656:	f8ca 8000 	str.w	r8, [sl]
  40465a:	3301      	adds	r3, #1
  40465c:	442a      	add	r2, r5
  40465e:	2b07      	cmp	r3, #7
  404660:	f8ca 5004 	str.w	r5, [sl, #4]
  404664:	9211      	str	r2, [sp, #68]	; 0x44
  404666:	9310      	str	r3, [sp, #64]	; 0x40
  404668:	dd7a      	ble.n	404760 <_vfiprintf_r+0x1a8>
  40466a:	2a00      	cmp	r2, #0
  40466c:	f040 84b0 	bne.w	404fd0 <_vfiprintf_r+0xa18>
  404670:	9b03      	ldr	r3, [sp, #12]
  404672:	9210      	str	r2, [sp, #64]	; 0x40
  404674:	442b      	add	r3, r5
  404676:	46ca      	mov	sl, r9
  404678:	9303      	str	r3, [sp, #12]
  40467a:	7823      	ldrb	r3, [r4, #0]
  40467c:	2b00      	cmp	r3, #0
  40467e:	f000 83e0 	beq.w	404e42 <_vfiprintf_r+0x88a>
  404682:	2000      	movs	r0, #0
  404684:	f04f 0300 	mov.w	r3, #0
  404688:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
  40468c:	f104 0801 	add.w	r8, r4, #1
  404690:	7862      	ldrb	r2, [r4, #1]
  404692:	4605      	mov	r5, r0
  404694:	4606      	mov	r6, r0
  404696:	4603      	mov	r3, r0
  404698:	f04f 34ff 	mov.w	r4, #4294967295
  40469c:	f108 0801 	add.w	r8, r8, #1
  4046a0:	f1a2 0120 	sub.w	r1, r2, #32
  4046a4:	2958      	cmp	r1, #88	; 0x58
  4046a6:	f200 82de 	bhi.w	404c66 <_vfiprintf_r+0x6ae>
  4046aa:	e8df f011 	tbh	[pc, r1, lsl #1]
  4046ae:	0221      	.short	0x0221
  4046b0:	02dc02dc 	.word	0x02dc02dc
  4046b4:	02dc0229 	.word	0x02dc0229
  4046b8:	02dc02dc 	.word	0x02dc02dc
  4046bc:	02dc02dc 	.word	0x02dc02dc
  4046c0:	028902dc 	.word	0x028902dc
  4046c4:	02dc0295 	.word	0x02dc0295
  4046c8:	02bd00a2 	.word	0x02bd00a2
  4046cc:	019f02dc 	.word	0x019f02dc
  4046d0:	01a401a4 	.word	0x01a401a4
  4046d4:	01a401a4 	.word	0x01a401a4
  4046d8:	01a401a4 	.word	0x01a401a4
  4046dc:	01a401a4 	.word	0x01a401a4
  4046e0:	02dc01a4 	.word	0x02dc01a4
  4046e4:	02dc02dc 	.word	0x02dc02dc
  4046e8:	02dc02dc 	.word	0x02dc02dc
  4046ec:	02dc02dc 	.word	0x02dc02dc
  4046f0:	02dc02dc 	.word	0x02dc02dc
  4046f4:	01b202dc 	.word	0x01b202dc
  4046f8:	02dc02dc 	.word	0x02dc02dc
  4046fc:	02dc02dc 	.word	0x02dc02dc
  404700:	02dc02dc 	.word	0x02dc02dc
  404704:	02dc02dc 	.word	0x02dc02dc
  404708:	02dc02dc 	.word	0x02dc02dc
  40470c:	02dc0197 	.word	0x02dc0197
  404710:	02dc02dc 	.word	0x02dc02dc
  404714:	02dc02dc 	.word	0x02dc02dc
  404718:	02dc019b 	.word	0x02dc019b
  40471c:	025302dc 	.word	0x025302dc
  404720:	02dc02dc 	.word	0x02dc02dc
  404724:	02dc02dc 	.word	0x02dc02dc
  404728:	02dc02dc 	.word	0x02dc02dc
  40472c:	02dc02dc 	.word	0x02dc02dc
  404730:	02dc02dc 	.word	0x02dc02dc
  404734:	021b025a 	.word	0x021b025a
  404738:	02dc02dc 	.word	0x02dc02dc
  40473c:	026e02dc 	.word	0x026e02dc
  404740:	02dc021b 	.word	0x02dc021b
  404744:	027302dc 	.word	0x027302dc
  404748:	01f502dc 	.word	0x01f502dc
  40474c:	02090182 	.word	0x02090182
  404750:	02dc02d7 	.word	0x02dc02d7
  404754:	02dc029a 	.word	0x02dc029a
  404758:	02dc00a7 	.word	0x02dc00a7
  40475c:	022e02dc 	.word	0x022e02dc
  404760:	f10a 0a08 	add.w	sl, sl, #8
  404764:	9b03      	ldr	r3, [sp, #12]
  404766:	442b      	add	r3, r5
  404768:	9303      	str	r3, [sp, #12]
  40476a:	e786      	b.n	40467a <_vfiprintf_r+0xc2>
  40476c:	4659      	mov	r1, fp
  40476e:	9806      	ldr	r0, [sp, #24]
  404770:	f000 fdac 	bl	4052cc <__swsetup_r>
  404774:	bb18      	cbnz	r0, 4047be <_vfiprintf_r+0x206>
  404776:	f8bb 100c 	ldrh.w	r1, [fp, #12]
  40477a:	f001 031a 	and.w	r3, r1, #26
  40477e:	2b0a      	cmp	r3, #10
  404780:	f47f af4b 	bne.w	40461a <_vfiprintf_r+0x62>
  404784:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  404788:	2b00      	cmp	r3, #0
  40478a:	f6ff af46 	blt.w	40461a <_vfiprintf_r+0x62>
  40478e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  404792:	07db      	lsls	r3, r3, #31
  404794:	d405      	bmi.n	4047a2 <_vfiprintf_r+0x1ea>
  404796:	058f      	lsls	r7, r1, #22
  404798:	d403      	bmi.n	4047a2 <_vfiprintf_r+0x1ea>
  40479a:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  40479e:	f002 fa91 	bl	406cc4 <__retarget_lock_release_recursive>
  4047a2:	462b      	mov	r3, r5
  4047a4:	4642      	mov	r2, r8
  4047a6:	4659      	mov	r1, fp
  4047a8:	9806      	ldr	r0, [sp, #24]
  4047aa:	f000 fd4d 	bl	405248 <__sbprintf>
  4047ae:	9003      	str	r0, [sp, #12]
  4047b0:	9803      	ldr	r0, [sp, #12]
  4047b2:	b02d      	add	sp, #180	; 0xb4
  4047b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4047b8:	f001 feb4 	bl	406524 <__sinit>
  4047bc:	e709      	b.n	4045d2 <_vfiprintf_r+0x1a>
  4047be:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  4047c2:	07d9      	lsls	r1, r3, #31
  4047c4:	d404      	bmi.n	4047d0 <_vfiprintf_r+0x218>
  4047c6:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  4047ca:	059a      	lsls	r2, r3, #22
  4047cc:	f140 84aa 	bpl.w	405124 <_vfiprintf_r+0xb6c>
  4047d0:	f04f 33ff 	mov.w	r3, #4294967295
  4047d4:	9303      	str	r3, [sp, #12]
  4047d6:	9803      	ldr	r0, [sp, #12]
  4047d8:	b02d      	add	sp, #180	; 0xb4
  4047da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4047de:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  4047e2:	f002 fa6d 	bl	406cc0 <__retarget_lock_acquire_recursive>
  4047e6:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
  4047ea:	b281      	uxth	r1, r0
  4047ec:	e6fb      	b.n	4045e6 <_vfiprintf_r+0x2e>
  4047ee:	4276      	negs	r6, r6
  4047f0:	9207      	str	r2, [sp, #28]
  4047f2:	f043 0304 	orr.w	r3, r3, #4
  4047f6:	f898 2000 	ldrb.w	r2, [r8]
  4047fa:	e74f      	b.n	40469c <_vfiprintf_r+0xe4>
  4047fc:	9608      	str	r6, [sp, #32]
  4047fe:	069e      	lsls	r6, r3, #26
  404800:	f100 8450 	bmi.w	4050a4 <_vfiprintf_r+0xaec>
  404804:	9907      	ldr	r1, [sp, #28]
  404806:	06dd      	lsls	r5, r3, #27
  404808:	460a      	mov	r2, r1
  40480a:	f100 83ef 	bmi.w	404fec <_vfiprintf_r+0xa34>
  40480e:	0658      	lsls	r0, r3, #25
  404810:	f140 83ec 	bpl.w	404fec <_vfiprintf_r+0xa34>
  404814:	880e      	ldrh	r6, [r1, #0]
  404816:	3104      	adds	r1, #4
  404818:	2700      	movs	r7, #0
  40481a:	2201      	movs	r2, #1
  40481c:	9107      	str	r1, [sp, #28]
  40481e:	f04f 0100 	mov.w	r1, #0
  404822:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
  404826:	2500      	movs	r5, #0
  404828:	1c61      	adds	r1, r4, #1
  40482a:	f000 8116 	beq.w	404a5a <_vfiprintf_r+0x4a2>
  40482e:	f023 0180 	bic.w	r1, r3, #128	; 0x80
  404832:	9102      	str	r1, [sp, #8]
  404834:	ea56 0107 	orrs.w	r1, r6, r7
  404838:	f040 8114 	bne.w	404a64 <_vfiprintf_r+0x4ac>
  40483c:	2c00      	cmp	r4, #0
  40483e:	f040 835c 	bne.w	404efa <_vfiprintf_r+0x942>
  404842:	2a00      	cmp	r2, #0
  404844:	f040 83b7 	bne.w	404fb6 <_vfiprintf_r+0x9fe>
  404848:	f013 0301 	ands.w	r3, r3, #1
  40484c:	9305      	str	r3, [sp, #20]
  40484e:	f000 8457 	beq.w	405100 <_vfiprintf_r+0xb48>
  404852:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  404856:	2330      	movs	r3, #48	; 0x30
  404858:	f80b 3d41 	strb.w	r3, [fp, #-65]!
  40485c:	9b05      	ldr	r3, [sp, #20]
  40485e:	42a3      	cmp	r3, r4
  404860:	bfb8      	it	lt
  404862:	4623      	movlt	r3, r4
  404864:	9301      	str	r3, [sp, #4]
  404866:	b10d      	cbz	r5, 40486c <_vfiprintf_r+0x2b4>
  404868:	3301      	adds	r3, #1
  40486a:	9301      	str	r3, [sp, #4]
  40486c:	9b02      	ldr	r3, [sp, #8]
  40486e:	f013 0302 	ands.w	r3, r3, #2
  404872:	9309      	str	r3, [sp, #36]	; 0x24
  404874:	d002      	beq.n	40487c <_vfiprintf_r+0x2c4>
  404876:	9b01      	ldr	r3, [sp, #4]
  404878:	3302      	adds	r3, #2
  40487a:	9301      	str	r3, [sp, #4]
  40487c:	9b02      	ldr	r3, [sp, #8]
  40487e:	f013 0384 	ands.w	r3, r3, #132	; 0x84
  404882:	930a      	str	r3, [sp, #40]	; 0x28
  404884:	f040 8217 	bne.w	404cb6 <_vfiprintf_r+0x6fe>
  404888:	9b08      	ldr	r3, [sp, #32]
  40488a:	9a01      	ldr	r2, [sp, #4]
  40488c:	1a9d      	subs	r5, r3, r2
  40488e:	2d00      	cmp	r5, #0
  404890:	f340 8211 	ble.w	404cb6 <_vfiprintf_r+0x6fe>
  404894:	2d10      	cmp	r5, #16
  404896:	f340 8490 	ble.w	4051ba <_vfiprintf_r+0xc02>
  40489a:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40489c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40489e:	4ec4      	ldr	r6, [pc, #784]	; (404bb0 <_vfiprintf_r+0x5f8>)
  4048a0:	46d6      	mov	lr, sl
  4048a2:	2710      	movs	r7, #16
  4048a4:	46a2      	mov	sl, r4
  4048a6:	4619      	mov	r1, r3
  4048a8:	9c06      	ldr	r4, [sp, #24]
  4048aa:	e007      	b.n	4048bc <_vfiprintf_r+0x304>
  4048ac:	f101 0c02 	add.w	ip, r1, #2
  4048b0:	f10e 0e08 	add.w	lr, lr, #8
  4048b4:	4601      	mov	r1, r0
  4048b6:	3d10      	subs	r5, #16
  4048b8:	2d10      	cmp	r5, #16
  4048ba:	dd11      	ble.n	4048e0 <_vfiprintf_r+0x328>
  4048bc:	1c48      	adds	r0, r1, #1
  4048be:	3210      	adds	r2, #16
  4048c0:	2807      	cmp	r0, #7
  4048c2:	9211      	str	r2, [sp, #68]	; 0x44
  4048c4:	e88e 00c0 	stmia.w	lr, {r6, r7}
  4048c8:	9010      	str	r0, [sp, #64]	; 0x40
  4048ca:	ddef      	ble.n	4048ac <_vfiprintf_r+0x2f4>
  4048cc:	2a00      	cmp	r2, #0
  4048ce:	f040 81e4 	bne.w	404c9a <_vfiprintf_r+0x6e2>
  4048d2:	3d10      	subs	r5, #16
  4048d4:	2d10      	cmp	r5, #16
  4048d6:	4611      	mov	r1, r2
  4048d8:	f04f 0c01 	mov.w	ip, #1
  4048dc:	46ce      	mov	lr, r9
  4048de:	dced      	bgt.n	4048bc <_vfiprintf_r+0x304>
  4048e0:	4654      	mov	r4, sl
  4048e2:	4661      	mov	r1, ip
  4048e4:	46f2      	mov	sl, lr
  4048e6:	442a      	add	r2, r5
  4048e8:	2907      	cmp	r1, #7
  4048ea:	9211      	str	r2, [sp, #68]	; 0x44
  4048ec:	f8ca 6000 	str.w	r6, [sl]
  4048f0:	f8ca 5004 	str.w	r5, [sl, #4]
  4048f4:	9110      	str	r1, [sp, #64]	; 0x40
  4048f6:	f300 82ec 	bgt.w	404ed2 <_vfiprintf_r+0x91a>
  4048fa:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4048fe:	f10a 0a08 	add.w	sl, sl, #8
  404902:	1c48      	adds	r0, r1, #1
  404904:	2d00      	cmp	r5, #0
  404906:	f040 81de 	bne.w	404cc6 <_vfiprintf_r+0x70e>
  40490a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40490c:	2b00      	cmp	r3, #0
  40490e:	f000 81f8 	beq.w	404d02 <_vfiprintf_r+0x74a>
  404912:	3202      	adds	r2, #2
  404914:	a90e      	add	r1, sp, #56	; 0x38
  404916:	2302      	movs	r3, #2
  404918:	2807      	cmp	r0, #7
  40491a:	9211      	str	r2, [sp, #68]	; 0x44
  40491c:	9010      	str	r0, [sp, #64]	; 0x40
  40491e:	e88a 000a 	stmia.w	sl, {r1, r3}
  404922:	f340 81ea 	ble.w	404cfa <_vfiprintf_r+0x742>
  404926:	2a00      	cmp	r2, #0
  404928:	f040 838c 	bne.w	405044 <_vfiprintf_r+0xa8c>
  40492c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40492e:	2b80      	cmp	r3, #128	; 0x80
  404930:	f04f 0001 	mov.w	r0, #1
  404934:	4611      	mov	r1, r2
  404936:	46ca      	mov	sl, r9
  404938:	f040 81e7 	bne.w	404d0a <_vfiprintf_r+0x752>
  40493c:	9b08      	ldr	r3, [sp, #32]
  40493e:	9d01      	ldr	r5, [sp, #4]
  404940:	1b5e      	subs	r6, r3, r5
  404942:	2e00      	cmp	r6, #0
  404944:	f340 81e1 	ble.w	404d0a <_vfiprintf_r+0x752>
  404948:	2e10      	cmp	r6, #16
  40494a:	4d9a      	ldr	r5, [pc, #616]	; (404bb4 <_vfiprintf_r+0x5fc>)
  40494c:	f340 8450 	ble.w	4051f0 <_vfiprintf_r+0xc38>
  404950:	46d4      	mov	ip, sl
  404952:	2710      	movs	r7, #16
  404954:	46a2      	mov	sl, r4
  404956:	9c06      	ldr	r4, [sp, #24]
  404958:	e007      	b.n	40496a <_vfiprintf_r+0x3b2>
  40495a:	f101 0e02 	add.w	lr, r1, #2
  40495e:	f10c 0c08 	add.w	ip, ip, #8
  404962:	4601      	mov	r1, r0
  404964:	3e10      	subs	r6, #16
  404966:	2e10      	cmp	r6, #16
  404968:	dd11      	ble.n	40498e <_vfiprintf_r+0x3d6>
  40496a:	1c48      	adds	r0, r1, #1
  40496c:	3210      	adds	r2, #16
  40496e:	2807      	cmp	r0, #7
  404970:	9211      	str	r2, [sp, #68]	; 0x44
  404972:	e88c 00a0 	stmia.w	ip, {r5, r7}
  404976:	9010      	str	r0, [sp, #64]	; 0x40
  404978:	ddef      	ble.n	40495a <_vfiprintf_r+0x3a2>
  40497a:	2a00      	cmp	r2, #0
  40497c:	f040 829d 	bne.w	404eba <_vfiprintf_r+0x902>
  404980:	3e10      	subs	r6, #16
  404982:	2e10      	cmp	r6, #16
  404984:	f04f 0e01 	mov.w	lr, #1
  404988:	4611      	mov	r1, r2
  40498a:	46cc      	mov	ip, r9
  40498c:	dced      	bgt.n	40496a <_vfiprintf_r+0x3b2>
  40498e:	4654      	mov	r4, sl
  404990:	46e2      	mov	sl, ip
  404992:	4432      	add	r2, r6
  404994:	f1be 0f07 	cmp.w	lr, #7
  404998:	9211      	str	r2, [sp, #68]	; 0x44
  40499a:	e88a 0060 	stmia.w	sl, {r5, r6}
  40499e:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
  4049a2:	f300 8369 	bgt.w	405078 <_vfiprintf_r+0xac0>
  4049a6:	f10a 0a08 	add.w	sl, sl, #8
  4049aa:	f10e 0001 	add.w	r0, lr, #1
  4049ae:	4671      	mov	r1, lr
  4049b0:	e1ab      	b.n	404d0a <_vfiprintf_r+0x752>
  4049b2:	9608      	str	r6, [sp, #32]
  4049b4:	f013 0220 	ands.w	r2, r3, #32
  4049b8:	f040 838c 	bne.w	4050d4 <_vfiprintf_r+0xb1c>
  4049bc:	f013 0110 	ands.w	r1, r3, #16
  4049c0:	f040 831a 	bne.w	404ff8 <_vfiprintf_r+0xa40>
  4049c4:	f013 0240 	ands.w	r2, r3, #64	; 0x40
  4049c8:	f000 8316 	beq.w	404ff8 <_vfiprintf_r+0xa40>
  4049cc:	9807      	ldr	r0, [sp, #28]
  4049ce:	460a      	mov	r2, r1
  4049d0:	4601      	mov	r1, r0
  4049d2:	3104      	adds	r1, #4
  4049d4:	8806      	ldrh	r6, [r0, #0]
  4049d6:	9107      	str	r1, [sp, #28]
  4049d8:	2700      	movs	r7, #0
  4049da:	e720      	b.n	40481e <_vfiprintf_r+0x266>
  4049dc:	9608      	str	r6, [sp, #32]
  4049de:	f043 0310 	orr.w	r3, r3, #16
  4049e2:	e7e7      	b.n	4049b4 <_vfiprintf_r+0x3fc>
  4049e4:	9608      	str	r6, [sp, #32]
  4049e6:	f043 0310 	orr.w	r3, r3, #16
  4049ea:	e708      	b.n	4047fe <_vfiprintf_r+0x246>
  4049ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4049f0:	f898 2000 	ldrb.w	r2, [r8]
  4049f4:	e652      	b.n	40469c <_vfiprintf_r+0xe4>
  4049f6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  4049fa:	2600      	movs	r6, #0
  4049fc:	f818 2b01 	ldrb.w	r2, [r8], #1
  404a00:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  404a04:	eb01 0646 	add.w	r6, r1, r6, lsl #1
  404a08:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  404a0c:	2909      	cmp	r1, #9
  404a0e:	d9f5      	bls.n	4049fc <_vfiprintf_r+0x444>
  404a10:	e646      	b.n	4046a0 <_vfiprintf_r+0xe8>
  404a12:	9608      	str	r6, [sp, #32]
  404a14:	2800      	cmp	r0, #0
  404a16:	f040 8408 	bne.w	40522a <_vfiprintf_r+0xc72>
  404a1a:	f043 0310 	orr.w	r3, r3, #16
  404a1e:	069e      	lsls	r6, r3, #26
  404a20:	f100 834c 	bmi.w	4050bc <_vfiprintf_r+0xb04>
  404a24:	06dd      	lsls	r5, r3, #27
  404a26:	f100 82f3 	bmi.w	405010 <_vfiprintf_r+0xa58>
  404a2a:	0658      	lsls	r0, r3, #25
  404a2c:	f140 82f0 	bpl.w	405010 <_vfiprintf_r+0xa58>
  404a30:	9d07      	ldr	r5, [sp, #28]
  404a32:	f9b5 6000 	ldrsh.w	r6, [r5]
  404a36:	462a      	mov	r2, r5
  404a38:	17f7      	asrs	r7, r6, #31
  404a3a:	3204      	adds	r2, #4
  404a3c:	4630      	mov	r0, r6
  404a3e:	4639      	mov	r1, r7
  404a40:	9207      	str	r2, [sp, #28]
  404a42:	2800      	cmp	r0, #0
  404a44:	f171 0200 	sbcs.w	r2, r1, #0
  404a48:	f2c0 835d 	blt.w	405106 <_vfiprintf_r+0xb4e>
  404a4c:	1c61      	adds	r1, r4, #1
  404a4e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404a52:	f04f 0201 	mov.w	r2, #1
  404a56:	f47f aeea 	bne.w	40482e <_vfiprintf_r+0x276>
  404a5a:	ea56 0107 	orrs.w	r1, r6, r7
  404a5e:	f000 824d 	beq.w	404efc <_vfiprintf_r+0x944>
  404a62:	9302      	str	r3, [sp, #8]
  404a64:	2a01      	cmp	r2, #1
  404a66:	f000 828c 	beq.w	404f82 <_vfiprintf_r+0x9ca>
  404a6a:	2a02      	cmp	r2, #2
  404a6c:	f040 825c 	bne.w	404f28 <_vfiprintf_r+0x970>
  404a70:	980b      	ldr	r0, [sp, #44]	; 0x2c
  404a72:	46cb      	mov	fp, r9
  404a74:	0933      	lsrs	r3, r6, #4
  404a76:	f006 010f 	and.w	r1, r6, #15
  404a7a:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
  404a7e:	093a      	lsrs	r2, r7, #4
  404a80:	461e      	mov	r6, r3
  404a82:	4617      	mov	r7, r2
  404a84:	5c43      	ldrb	r3, [r0, r1]
  404a86:	f80b 3d01 	strb.w	r3, [fp, #-1]!
  404a8a:	ea56 0307 	orrs.w	r3, r6, r7
  404a8e:	d1f1      	bne.n	404a74 <_vfiprintf_r+0x4bc>
  404a90:	eba9 030b 	sub.w	r3, r9, fp
  404a94:	9305      	str	r3, [sp, #20]
  404a96:	e6e1      	b.n	40485c <_vfiprintf_r+0x2a4>
  404a98:	2800      	cmp	r0, #0
  404a9a:	f040 83c0 	bne.w	40521e <_vfiprintf_r+0xc66>
  404a9e:	0699      	lsls	r1, r3, #26
  404aa0:	f100 8367 	bmi.w	405172 <_vfiprintf_r+0xbba>
  404aa4:	06da      	lsls	r2, r3, #27
  404aa6:	f100 80f1 	bmi.w	404c8c <_vfiprintf_r+0x6d4>
  404aaa:	065b      	lsls	r3, r3, #25
  404aac:	f140 80ee 	bpl.w	404c8c <_vfiprintf_r+0x6d4>
  404ab0:	9a07      	ldr	r2, [sp, #28]
  404ab2:	6813      	ldr	r3, [r2, #0]
  404ab4:	3204      	adds	r2, #4
  404ab6:	9207      	str	r2, [sp, #28]
  404ab8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
  404abc:	801a      	strh	r2, [r3, #0]
  404abe:	e5b8      	b.n	404632 <_vfiprintf_r+0x7a>
  404ac0:	9807      	ldr	r0, [sp, #28]
  404ac2:	4a3d      	ldr	r2, [pc, #244]	; (404bb8 <_vfiprintf_r+0x600>)
  404ac4:	9608      	str	r6, [sp, #32]
  404ac6:	920b      	str	r2, [sp, #44]	; 0x2c
  404ac8:	6806      	ldr	r6, [r0, #0]
  404aca:	2278      	movs	r2, #120	; 0x78
  404acc:	2130      	movs	r1, #48	; 0x30
  404ace:	3004      	adds	r0, #4
  404ad0:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  404ad4:	f043 0302 	orr.w	r3, r3, #2
  404ad8:	9007      	str	r0, [sp, #28]
  404ada:	2700      	movs	r7, #0
  404adc:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  404ae0:	2202      	movs	r2, #2
  404ae2:	e69c      	b.n	40481e <_vfiprintf_r+0x266>
  404ae4:	9608      	str	r6, [sp, #32]
  404ae6:	2800      	cmp	r0, #0
  404ae8:	d099      	beq.n	404a1e <_vfiprintf_r+0x466>
  404aea:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  404aee:	e796      	b.n	404a1e <_vfiprintf_r+0x466>
  404af0:	f898 2000 	ldrb.w	r2, [r8]
  404af4:	2d00      	cmp	r5, #0
  404af6:	f47f add1 	bne.w	40469c <_vfiprintf_r+0xe4>
  404afa:	2001      	movs	r0, #1
  404afc:	2520      	movs	r5, #32
  404afe:	e5cd      	b.n	40469c <_vfiprintf_r+0xe4>
  404b00:	f043 0301 	orr.w	r3, r3, #1
  404b04:	f898 2000 	ldrb.w	r2, [r8]
  404b08:	e5c8      	b.n	40469c <_vfiprintf_r+0xe4>
  404b0a:	9608      	str	r6, [sp, #32]
  404b0c:	2800      	cmp	r0, #0
  404b0e:	f040 8393 	bne.w	405238 <_vfiprintf_r+0xc80>
  404b12:	4929      	ldr	r1, [pc, #164]	; (404bb8 <_vfiprintf_r+0x600>)
  404b14:	910b      	str	r1, [sp, #44]	; 0x2c
  404b16:	069f      	lsls	r7, r3, #26
  404b18:	f100 82e8 	bmi.w	4050ec <_vfiprintf_r+0xb34>
  404b1c:	9807      	ldr	r0, [sp, #28]
  404b1e:	06de      	lsls	r6, r3, #27
  404b20:	4601      	mov	r1, r0
  404b22:	f100 8270 	bmi.w	405006 <_vfiprintf_r+0xa4e>
  404b26:	065d      	lsls	r5, r3, #25
  404b28:	f140 826d 	bpl.w	405006 <_vfiprintf_r+0xa4e>
  404b2c:	3104      	adds	r1, #4
  404b2e:	8806      	ldrh	r6, [r0, #0]
  404b30:	9107      	str	r1, [sp, #28]
  404b32:	2700      	movs	r7, #0
  404b34:	07d8      	lsls	r0, r3, #31
  404b36:	f140 8222 	bpl.w	404f7e <_vfiprintf_r+0x9c6>
  404b3a:	ea56 0107 	orrs.w	r1, r6, r7
  404b3e:	f000 821e 	beq.w	404f7e <_vfiprintf_r+0x9c6>
  404b42:	2130      	movs	r1, #48	; 0x30
  404b44:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
  404b48:	f043 0302 	orr.w	r3, r3, #2
  404b4c:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
  404b50:	2202      	movs	r2, #2
  404b52:	e664      	b.n	40481e <_vfiprintf_r+0x266>
  404b54:	9608      	str	r6, [sp, #32]
  404b56:	2800      	cmp	r0, #0
  404b58:	f040 836b 	bne.w	405232 <_vfiprintf_r+0xc7a>
  404b5c:	4917      	ldr	r1, [pc, #92]	; (404bbc <_vfiprintf_r+0x604>)
  404b5e:	910b      	str	r1, [sp, #44]	; 0x2c
  404b60:	e7d9      	b.n	404b16 <_vfiprintf_r+0x55e>
  404b62:	9907      	ldr	r1, [sp, #28]
  404b64:	9608      	str	r6, [sp, #32]
  404b66:	680a      	ldr	r2, [r1, #0]
  404b68:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  404b6c:	f04f 0000 	mov.w	r0, #0
  404b70:	460a      	mov	r2, r1
  404b72:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
  404b76:	3204      	adds	r2, #4
  404b78:	2001      	movs	r0, #1
  404b7a:	9001      	str	r0, [sp, #4]
  404b7c:	9207      	str	r2, [sp, #28]
  404b7e:	9005      	str	r0, [sp, #20]
  404b80:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  404b84:	9302      	str	r3, [sp, #8]
  404b86:	2400      	movs	r4, #0
  404b88:	e670      	b.n	40486c <_vfiprintf_r+0x2b4>
  404b8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404b8e:	f898 2000 	ldrb.w	r2, [r8]
  404b92:	e583      	b.n	40469c <_vfiprintf_r+0xe4>
  404b94:	f898 2000 	ldrb.w	r2, [r8]
  404b98:	2a6c      	cmp	r2, #108	; 0x6c
  404b9a:	bf03      	ittte	eq
  404b9c:	f898 2001 	ldrbeq.w	r2, [r8, #1]
  404ba0:	f043 0320 	orreq.w	r3, r3, #32
  404ba4:	f108 0801 	addeq.w	r8, r8, #1
  404ba8:	f043 0310 	orrne.w	r3, r3, #16
  404bac:	e576      	b.n	40469c <_vfiprintf_r+0xe4>
  404bae:	bf00      	nop
  404bb0:	00410968 	.word	0x00410968
  404bb4:	00410978 	.word	0x00410978
  404bb8:	00410928 	.word	0x00410928
  404bbc:	00410914 	.word	0x00410914
  404bc0:	9907      	ldr	r1, [sp, #28]
  404bc2:	680e      	ldr	r6, [r1, #0]
  404bc4:	460a      	mov	r2, r1
  404bc6:	2e00      	cmp	r6, #0
  404bc8:	f102 0204 	add.w	r2, r2, #4
  404bcc:	f6ff ae0f 	blt.w	4047ee <_vfiprintf_r+0x236>
  404bd0:	9207      	str	r2, [sp, #28]
  404bd2:	f898 2000 	ldrb.w	r2, [r8]
  404bd6:	e561      	b.n	40469c <_vfiprintf_r+0xe4>
  404bd8:	f898 2000 	ldrb.w	r2, [r8]
  404bdc:	2001      	movs	r0, #1
  404bde:	252b      	movs	r5, #43	; 0x2b
  404be0:	e55c      	b.n	40469c <_vfiprintf_r+0xe4>
  404be2:	9907      	ldr	r1, [sp, #28]
  404be4:	9608      	str	r6, [sp, #32]
  404be6:	f8d1 b000 	ldr.w	fp, [r1]
  404bea:	f04f 0200 	mov.w	r2, #0
  404bee:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  404bf2:	1d0e      	adds	r6, r1, #4
  404bf4:	f1bb 0f00 	cmp.w	fp, #0
  404bf8:	f000 82e5 	beq.w	4051c6 <_vfiprintf_r+0xc0e>
  404bfc:	1c67      	adds	r7, r4, #1
  404bfe:	f000 82c4 	beq.w	40518a <_vfiprintf_r+0xbd2>
  404c02:	4622      	mov	r2, r4
  404c04:	2100      	movs	r1, #0
  404c06:	4658      	mov	r0, fp
  404c08:	9301      	str	r3, [sp, #4]
  404c0a:	f002 f8f1 	bl	406df0 <memchr>
  404c0e:	9b01      	ldr	r3, [sp, #4]
  404c10:	2800      	cmp	r0, #0
  404c12:	f000 82e5 	beq.w	4051e0 <_vfiprintf_r+0xc28>
  404c16:	eba0 020b 	sub.w	r2, r0, fp
  404c1a:	9205      	str	r2, [sp, #20]
  404c1c:	9607      	str	r6, [sp, #28]
  404c1e:	9302      	str	r3, [sp, #8]
  404c20:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404c24:	2400      	movs	r4, #0
  404c26:	e619      	b.n	40485c <_vfiprintf_r+0x2a4>
  404c28:	f898 2000 	ldrb.w	r2, [r8]
  404c2c:	2a2a      	cmp	r2, #42	; 0x2a
  404c2e:	f108 0701 	add.w	r7, r8, #1
  404c32:	f000 82e9 	beq.w	405208 <_vfiprintf_r+0xc50>
  404c36:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  404c3a:	2909      	cmp	r1, #9
  404c3c:	46b8      	mov	r8, r7
  404c3e:	f04f 0400 	mov.w	r4, #0
  404c42:	f63f ad2d 	bhi.w	4046a0 <_vfiprintf_r+0xe8>
  404c46:	f818 2b01 	ldrb.w	r2, [r8], #1
  404c4a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  404c4e:	eb01 0444 	add.w	r4, r1, r4, lsl #1
  404c52:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
  404c56:	2909      	cmp	r1, #9
  404c58:	d9f5      	bls.n	404c46 <_vfiprintf_r+0x68e>
  404c5a:	e521      	b.n	4046a0 <_vfiprintf_r+0xe8>
  404c5c:	f043 0320 	orr.w	r3, r3, #32
  404c60:	f898 2000 	ldrb.w	r2, [r8]
  404c64:	e51a      	b.n	40469c <_vfiprintf_r+0xe4>
  404c66:	9608      	str	r6, [sp, #32]
  404c68:	2800      	cmp	r0, #0
  404c6a:	f040 82db 	bne.w	405224 <_vfiprintf_r+0xc6c>
  404c6e:	2a00      	cmp	r2, #0
  404c70:	f000 80e7 	beq.w	404e42 <_vfiprintf_r+0x88a>
  404c74:	2101      	movs	r1, #1
  404c76:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  404c7a:	f04f 0200 	mov.w	r2, #0
  404c7e:	9101      	str	r1, [sp, #4]
  404c80:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
  404c84:	9105      	str	r1, [sp, #20]
  404c86:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  404c8a:	e77b      	b.n	404b84 <_vfiprintf_r+0x5cc>
  404c8c:	9a07      	ldr	r2, [sp, #28]
  404c8e:	6813      	ldr	r3, [r2, #0]
  404c90:	3204      	adds	r2, #4
  404c92:	9207      	str	r2, [sp, #28]
  404c94:	9a03      	ldr	r2, [sp, #12]
  404c96:	601a      	str	r2, [r3, #0]
  404c98:	e4cb      	b.n	404632 <_vfiprintf_r+0x7a>
  404c9a:	aa0f      	add	r2, sp, #60	; 0x3c
  404c9c:	9904      	ldr	r1, [sp, #16]
  404c9e:	4620      	mov	r0, r4
  404ca0:	f7ff fc4a 	bl	404538 <__sprint_r.part.0>
  404ca4:	2800      	cmp	r0, #0
  404ca6:	f040 8139 	bne.w	404f1c <_vfiprintf_r+0x964>
  404caa:	9910      	ldr	r1, [sp, #64]	; 0x40
  404cac:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404cae:	f101 0c01 	add.w	ip, r1, #1
  404cb2:	46ce      	mov	lr, r9
  404cb4:	e5ff      	b.n	4048b6 <_vfiprintf_r+0x2fe>
  404cb6:	9910      	ldr	r1, [sp, #64]	; 0x40
  404cb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404cba:	1c48      	adds	r0, r1, #1
  404cbc:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  404cc0:	2d00      	cmp	r5, #0
  404cc2:	f43f ae22 	beq.w	40490a <_vfiprintf_r+0x352>
  404cc6:	3201      	adds	r2, #1
  404cc8:	f10d 0537 	add.w	r5, sp, #55	; 0x37
  404ccc:	2101      	movs	r1, #1
  404cce:	2807      	cmp	r0, #7
  404cd0:	9211      	str	r2, [sp, #68]	; 0x44
  404cd2:	9010      	str	r0, [sp, #64]	; 0x40
  404cd4:	f8ca 5000 	str.w	r5, [sl]
  404cd8:	f8ca 1004 	str.w	r1, [sl, #4]
  404cdc:	f340 8108 	ble.w	404ef0 <_vfiprintf_r+0x938>
  404ce0:	2a00      	cmp	r2, #0
  404ce2:	f040 81bc 	bne.w	40505e <_vfiprintf_r+0xaa6>
  404ce6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404ce8:	2b00      	cmp	r3, #0
  404cea:	f43f ae1f 	beq.w	40492c <_vfiprintf_r+0x374>
  404cee:	ab0e      	add	r3, sp, #56	; 0x38
  404cf0:	2202      	movs	r2, #2
  404cf2:	4608      	mov	r0, r1
  404cf4:	931c      	str	r3, [sp, #112]	; 0x70
  404cf6:	921d      	str	r2, [sp, #116]	; 0x74
  404cf8:	46ca      	mov	sl, r9
  404cfa:	4601      	mov	r1, r0
  404cfc:	f10a 0a08 	add.w	sl, sl, #8
  404d00:	3001      	adds	r0, #1
  404d02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404d04:	2b80      	cmp	r3, #128	; 0x80
  404d06:	f43f ae19 	beq.w	40493c <_vfiprintf_r+0x384>
  404d0a:	9b05      	ldr	r3, [sp, #20]
  404d0c:	1ae4      	subs	r4, r4, r3
  404d0e:	2c00      	cmp	r4, #0
  404d10:	dd2e      	ble.n	404d70 <_vfiprintf_r+0x7b8>
  404d12:	2c10      	cmp	r4, #16
  404d14:	4db3      	ldr	r5, [pc, #716]	; (404fe4 <_vfiprintf_r+0xa2c>)
  404d16:	dd1e      	ble.n	404d56 <_vfiprintf_r+0x79e>
  404d18:	46d6      	mov	lr, sl
  404d1a:	2610      	movs	r6, #16
  404d1c:	9f06      	ldr	r7, [sp, #24]
  404d1e:	f8dd a010 	ldr.w	sl, [sp, #16]
  404d22:	e006      	b.n	404d32 <_vfiprintf_r+0x77a>
  404d24:	1c88      	adds	r0, r1, #2
  404d26:	f10e 0e08 	add.w	lr, lr, #8
  404d2a:	4619      	mov	r1, r3
  404d2c:	3c10      	subs	r4, #16
  404d2e:	2c10      	cmp	r4, #16
  404d30:	dd10      	ble.n	404d54 <_vfiprintf_r+0x79c>
  404d32:	1c4b      	adds	r3, r1, #1
  404d34:	3210      	adds	r2, #16
  404d36:	2b07      	cmp	r3, #7
  404d38:	9211      	str	r2, [sp, #68]	; 0x44
  404d3a:	e88e 0060 	stmia.w	lr, {r5, r6}
  404d3e:	9310      	str	r3, [sp, #64]	; 0x40
  404d40:	ddf0      	ble.n	404d24 <_vfiprintf_r+0x76c>
  404d42:	2a00      	cmp	r2, #0
  404d44:	d165      	bne.n	404e12 <_vfiprintf_r+0x85a>
  404d46:	3c10      	subs	r4, #16
  404d48:	2c10      	cmp	r4, #16
  404d4a:	f04f 0001 	mov.w	r0, #1
  404d4e:	4611      	mov	r1, r2
  404d50:	46ce      	mov	lr, r9
  404d52:	dcee      	bgt.n	404d32 <_vfiprintf_r+0x77a>
  404d54:	46f2      	mov	sl, lr
  404d56:	4422      	add	r2, r4
  404d58:	2807      	cmp	r0, #7
  404d5a:	9211      	str	r2, [sp, #68]	; 0x44
  404d5c:	f8ca 5000 	str.w	r5, [sl]
  404d60:	f8ca 4004 	str.w	r4, [sl, #4]
  404d64:	9010      	str	r0, [sp, #64]	; 0x40
  404d66:	f300 8085 	bgt.w	404e74 <_vfiprintf_r+0x8bc>
  404d6a:	f10a 0a08 	add.w	sl, sl, #8
  404d6e:	3001      	adds	r0, #1
  404d70:	9905      	ldr	r1, [sp, #20]
  404d72:	f8ca b000 	str.w	fp, [sl]
  404d76:	440a      	add	r2, r1
  404d78:	2807      	cmp	r0, #7
  404d7a:	9211      	str	r2, [sp, #68]	; 0x44
  404d7c:	f8ca 1004 	str.w	r1, [sl, #4]
  404d80:	9010      	str	r0, [sp, #64]	; 0x40
  404d82:	f340 8082 	ble.w	404e8a <_vfiprintf_r+0x8d2>
  404d86:	2a00      	cmp	r2, #0
  404d88:	f040 8118 	bne.w	404fbc <_vfiprintf_r+0xa04>
  404d8c:	9b02      	ldr	r3, [sp, #8]
  404d8e:	9210      	str	r2, [sp, #64]	; 0x40
  404d90:	0758      	lsls	r0, r3, #29
  404d92:	d535      	bpl.n	404e00 <_vfiprintf_r+0x848>
  404d94:	9b08      	ldr	r3, [sp, #32]
  404d96:	9901      	ldr	r1, [sp, #4]
  404d98:	1a5c      	subs	r4, r3, r1
  404d9a:	2c00      	cmp	r4, #0
  404d9c:	f340 80e7 	ble.w	404f6e <_vfiprintf_r+0x9b6>
  404da0:	46ca      	mov	sl, r9
  404da2:	2c10      	cmp	r4, #16
  404da4:	f340 8218 	ble.w	4051d8 <_vfiprintf_r+0xc20>
  404da8:	9910      	ldr	r1, [sp, #64]	; 0x40
  404daa:	4e8f      	ldr	r6, [pc, #572]	; (404fe8 <_vfiprintf_r+0xa30>)
  404dac:	9f06      	ldr	r7, [sp, #24]
  404dae:	f8dd b010 	ldr.w	fp, [sp, #16]
  404db2:	2510      	movs	r5, #16
  404db4:	e006      	b.n	404dc4 <_vfiprintf_r+0x80c>
  404db6:	1c88      	adds	r0, r1, #2
  404db8:	f10a 0a08 	add.w	sl, sl, #8
  404dbc:	4619      	mov	r1, r3
  404dbe:	3c10      	subs	r4, #16
  404dc0:	2c10      	cmp	r4, #16
  404dc2:	dd11      	ble.n	404de8 <_vfiprintf_r+0x830>
  404dc4:	1c4b      	adds	r3, r1, #1
  404dc6:	3210      	adds	r2, #16
  404dc8:	2b07      	cmp	r3, #7
  404dca:	9211      	str	r2, [sp, #68]	; 0x44
  404dcc:	f8ca 6000 	str.w	r6, [sl]
  404dd0:	f8ca 5004 	str.w	r5, [sl, #4]
  404dd4:	9310      	str	r3, [sp, #64]	; 0x40
  404dd6:	ddee      	ble.n	404db6 <_vfiprintf_r+0x7fe>
  404dd8:	bb42      	cbnz	r2, 404e2c <_vfiprintf_r+0x874>
  404dda:	3c10      	subs	r4, #16
  404ddc:	2c10      	cmp	r4, #16
  404dde:	f04f 0001 	mov.w	r0, #1
  404de2:	4611      	mov	r1, r2
  404de4:	46ca      	mov	sl, r9
  404de6:	dced      	bgt.n	404dc4 <_vfiprintf_r+0x80c>
  404de8:	4422      	add	r2, r4
  404dea:	2807      	cmp	r0, #7
  404dec:	9211      	str	r2, [sp, #68]	; 0x44
  404dee:	f8ca 6000 	str.w	r6, [sl]
  404df2:	f8ca 4004 	str.w	r4, [sl, #4]
  404df6:	9010      	str	r0, [sp, #64]	; 0x40
  404df8:	dd51      	ble.n	404e9e <_vfiprintf_r+0x8e6>
  404dfa:	2a00      	cmp	r2, #0
  404dfc:	f040 819b 	bne.w	405136 <_vfiprintf_r+0xb7e>
  404e00:	9b03      	ldr	r3, [sp, #12]
  404e02:	9a08      	ldr	r2, [sp, #32]
  404e04:	9901      	ldr	r1, [sp, #4]
  404e06:	428a      	cmp	r2, r1
  404e08:	bfac      	ite	ge
  404e0a:	189b      	addge	r3, r3, r2
  404e0c:	185b      	addlt	r3, r3, r1
  404e0e:	9303      	str	r3, [sp, #12]
  404e10:	e04e      	b.n	404eb0 <_vfiprintf_r+0x8f8>
  404e12:	aa0f      	add	r2, sp, #60	; 0x3c
  404e14:	4651      	mov	r1, sl
  404e16:	4638      	mov	r0, r7
  404e18:	f7ff fb8e 	bl	404538 <__sprint_r.part.0>
  404e1c:	2800      	cmp	r0, #0
  404e1e:	f040 813f 	bne.w	4050a0 <_vfiprintf_r+0xae8>
  404e22:	9910      	ldr	r1, [sp, #64]	; 0x40
  404e24:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404e26:	1c48      	adds	r0, r1, #1
  404e28:	46ce      	mov	lr, r9
  404e2a:	e77f      	b.n	404d2c <_vfiprintf_r+0x774>
  404e2c:	aa0f      	add	r2, sp, #60	; 0x3c
  404e2e:	4659      	mov	r1, fp
  404e30:	4638      	mov	r0, r7
  404e32:	f7ff fb81 	bl	404538 <__sprint_r.part.0>
  404e36:	b960      	cbnz	r0, 404e52 <_vfiprintf_r+0x89a>
  404e38:	9910      	ldr	r1, [sp, #64]	; 0x40
  404e3a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404e3c:	1c48      	adds	r0, r1, #1
  404e3e:	46ca      	mov	sl, r9
  404e40:	e7bd      	b.n	404dbe <_vfiprintf_r+0x806>
  404e42:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404e44:	f8dd b010 	ldr.w	fp, [sp, #16]
  404e48:	2b00      	cmp	r3, #0
  404e4a:	f040 81d4 	bne.w	4051f6 <_vfiprintf_r+0xc3e>
  404e4e:	2300      	movs	r3, #0
  404e50:	9310      	str	r3, [sp, #64]	; 0x40
  404e52:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
  404e56:	f013 0f01 	tst.w	r3, #1
  404e5a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  404e5e:	d102      	bne.n	404e66 <_vfiprintf_r+0x8ae>
  404e60:	059a      	lsls	r2, r3, #22
  404e62:	f140 80de 	bpl.w	405022 <_vfiprintf_r+0xa6a>
  404e66:	065b      	lsls	r3, r3, #25
  404e68:	f53f acb2 	bmi.w	4047d0 <_vfiprintf_r+0x218>
  404e6c:	9803      	ldr	r0, [sp, #12]
  404e6e:	b02d      	add	sp, #180	; 0xb4
  404e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e74:	2a00      	cmp	r2, #0
  404e76:	f040 8106 	bne.w	405086 <_vfiprintf_r+0xace>
  404e7a:	9a05      	ldr	r2, [sp, #20]
  404e7c:	921d      	str	r2, [sp, #116]	; 0x74
  404e7e:	2301      	movs	r3, #1
  404e80:	9211      	str	r2, [sp, #68]	; 0x44
  404e82:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
  404e86:	9310      	str	r3, [sp, #64]	; 0x40
  404e88:	46ca      	mov	sl, r9
  404e8a:	f10a 0a08 	add.w	sl, sl, #8
  404e8e:	9b02      	ldr	r3, [sp, #8]
  404e90:	0759      	lsls	r1, r3, #29
  404e92:	d504      	bpl.n	404e9e <_vfiprintf_r+0x8e6>
  404e94:	9b08      	ldr	r3, [sp, #32]
  404e96:	9901      	ldr	r1, [sp, #4]
  404e98:	1a5c      	subs	r4, r3, r1
  404e9a:	2c00      	cmp	r4, #0
  404e9c:	dc81      	bgt.n	404da2 <_vfiprintf_r+0x7ea>
  404e9e:	9b03      	ldr	r3, [sp, #12]
  404ea0:	9908      	ldr	r1, [sp, #32]
  404ea2:	9801      	ldr	r0, [sp, #4]
  404ea4:	4281      	cmp	r1, r0
  404ea6:	bfac      	ite	ge
  404ea8:	185b      	addge	r3, r3, r1
  404eaa:	181b      	addlt	r3, r3, r0
  404eac:	9303      	str	r3, [sp, #12]
  404eae:	bb72      	cbnz	r2, 404f0e <_vfiprintf_r+0x956>
  404eb0:	2300      	movs	r3, #0
  404eb2:	9310      	str	r3, [sp, #64]	; 0x40
  404eb4:	46ca      	mov	sl, r9
  404eb6:	f7ff bbbc 	b.w	404632 <_vfiprintf_r+0x7a>
  404eba:	aa0f      	add	r2, sp, #60	; 0x3c
  404ebc:	9904      	ldr	r1, [sp, #16]
  404ebe:	4620      	mov	r0, r4
  404ec0:	f7ff fb3a 	bl	404538 <__sprint_r.part.0>
  404ec4:	bb50      	cbnz	r0, 404f1c <_vfiprintf_r+0x964>
  404ec6:	9910      	ldr	r1, [sp, #64]	; 0x40
  404ec8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404eca:	f101 0e01 	add.w	lr, r1, #1
  404ece:	46cc      	mov	ip, r9
  404ed0:	e548      	b.n	404964 <_vfiprintf_r+0x3ac>
  404ed2:	2a00      	cmp	r2, #0
  404ed4:	f040 8140 	bne.w	405158 <_vfiprintf_r+0xba0>
  404ed8:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
  404edc:	2900      	cmp	r1, #0
  404ede:	f000 811b 	beq.w	405118 <_vfiprintf_r+0xb60>
  404ee2:	2201      	movs	r2, #1
  404ee4:	f10d 0137 	add.w	r1, sp, #55	; 0x37
  404ee8:	4610      	mov	r0, r2
  404eea:	921d      	str	r2, [sp, #116]	; 0x74
  404eec:	911c      	str	r1, [sp, #112]	; 0x70
  404eee:	46ca      	mov	sl, r9
  404ef0:	4601      	mov	r1, r0
  404ef2:	f10a 0a08 	add.w	sl, sl, #8
  404ef6:	3001      	adds	r0, #1
  404ef8:	e507      	b.n	40490a <_vfiprintf_r+0x352>
  404efa:	9b02      	ldr	r3, [sp, #8]
  404efc:	2a01      	cmp	r2, #1
  404efe:	f000 8098 	beq.w	405032 <_vfiprintf_r+0xa7a>
  404f02:	2a02      	cmp	r2, #2
  404f04:	d10d      	bne.n	404f22 <_vfiprintf_r+0x96a>
  404f06:	9302      	str	r3, [sp, #8]
  404f08:	2600      	movs	r6, #0
  404f0a:	2700      	movs	r7, #0
  404f0c:	e5b0      	b.n	404a70 <_vfiprintf_r+0x4b8>
  404f0e:	aa0f      	add	r2, sp, #60	; 0x3c
  404f10:	9904      	ldr	r1, [sp, #16]
  404f12:	9806      	ldr	r0, [sp, #24]
  404f14:	f7ff fb10 	bl	404538 <__sprint_r.part.0>
  404f18:	2800      	cmp	r0, #0
  404f1a:	d0c9      	beq.n	404eb0 <_vfiprintf_r+0x8f8>
  404f1c:	f8dd b010 	ldr.w	fp, [sp, #16]
  404f20:	e797      	b.n	404e52 <_vfiprintf_r+0x89a>
  404f22:	9302      	str	r3, [sp, #8]
  404f24:	2600      	movs	r6, #0
  404f26:	2700      	movs	r7, #0
  404f28:	4649      	mov	r1, r9
  404f2a:	e000      	b.n	404f2e <_vfiprintf_r+0x976>
  404f2c:	4659      	mov	r1, fp
  404f2e:	08f2      	lsrs	r2, r6, #3
  404f30:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
  404f34:	08f8      	lsrs	r0, r7, #3
  404f36:	f006 0307 	and.w	r3, r6, #7
  404f3a:	4607      	mov	r7, r0
  404f3c:	4616      	mov	r6, r2
  404f3e:	3330      	adds	r3, #48	; 0x30
  404f40:	ea56 0207 	orrs.w	r2, r6, r7
  404f44:	f801 3c01 	strb.w	r3, [r1, #-1]
  404f48:	f101 3bff 	add.w	fp, r1, #4294967295
  404f4c:	d1ee      	bne.n	404f2c <_vfiprintf_r+0x974>
  404f4e:	9a02      	ldr	r2, [sp, #8]
  404f50:	07d6      	lsls	r6, r2, #31
  404f52:	f57f ad9d 	bpl.w	404a90 <_vfiprintf_r+0x4d8>
  404f56:	2b30      	cmp	r3, #48	; 0x30
  404f58:	f43f ad9a 	beq.w	404a90 <_vfiprintf_r+0x4d8>
  404f5c:	3902      	subs	r1, #2
  404f5e:	2330      	movs	r3, #48	; 0x30
  404f60:	f80b 3c01 	strb.w	r3, [fp, #-1]
  404f64:	eba9 0301 	sub.w	r3, r9, r1
  404f68:	9305      	str	r3, [sp, #20]
  404f6a:	468b      	mov	fp, r1
  404f6c:	e476      	b.n	40485c <_vfiprintf_r+0x2a4>
  404f6e:	9b03      	ldr	r3, [sp, #12]
  404f70:	9a08      	ldr	r2, [sp, #32]
  404f72:	428a      	cmp	r2, r1
  404f74:	bfac      	ite	ge
  404f76:	189b      	addge	r3, r3, r2
  404f78:	185b      	addlt	r3, r3, r1
  404f7a:	9303      	str	r3, [sp, #12]
  404f7c:	e798      	b.n	404eb0 <_vfiprintf_r+0x8f8>
  404f7e:	2202      	movs	r2, #2
  404f80:	e44d      	b.n	40481e <_vfiprintf_r+0x266>
  404f82:	2f00      	cmp	r7, #0
  404f84:	bf08      	it	eq
  404f86:	2e0a      	cmpeq	r6, #10
  404f88:	d352      	bcc.n	405030 <_vfiprintf_r+0xa78>
  404f8a:	46cb      	mov	fp, r9
  404f8c:	4630      	mov	r0, r6
  404f8e:	4639      	mov	r1, r7
  404f90:	220a      	movs	r2, #10
  404f92:	2300      	movs	r3, #0
  404f94:	f003 fc6a 	bl	40886c <__aeabi_uldivmod>
  404f98:	3230      	adds	r2, #48	; 0x30
  404f9a:	f80b 2d01 	strb.w	r2, [fp, #-1]!
  404f9e:	4630      	mov	r0, r6
  404fa0:	4639      	mov	r1, r7
  404fa2:	2300      	movs	r3, #0
  404fa4:	220a      	movs	r2, #10
  404fa6:	f003 fc61 	bl	40886c <__aeabi_uldivmod>
  404faa:	4606      	mov	r6, r0
  404fac:	460f      	mov	r7, r1
  404fae:	ea56 0307 	orrs.w	r3, r6, r7
  404fb2:	d1eb      	bne.n	404f8c <_vfiprintf_r+0x9d4>
  404fb4:	e56c      	b.n	404a90 <_vfiprintf_r+0x4d8>
  404fb6:	9405      	str	r4, [sp, #20]
  404fb8:	46cb      	mov	fp, r9
  404fba:	e44f      	b.n	40485c <_vfiprintf_r+0x2a4>
  404fbc:	aa0f      	add	r2, sp, #60	; 0x3c
  404fbe:	9904      	ldr	r1, [sp, #16]
  404fc0:	9806      	ldr	r0, [sp, #24]
  404fc2:	f7ff fab9 	bl	404538 <__sprint_r.part.0>
  404fc6:	2800      	cmp	r0, #0
  404fc8:	d1a8      	bne.n	404f1c <_vfiprintf_r+0x964>
  404fca:	9a11      	ldr	r2, [sp, #68]	; 0x44
  404fcc:	46ca      	mov	sl, r9
  404fce:	e75e      	b.n	404e8e <_vfiprintf_r+0x8d6>
  404fd0:	aa0f      	add	r2, sp, #60	; 0x3c
  404fd2:	9904      	ldr	r1, [sp, #16]
  404fd4:	9806      	ldr	r0, [sp, #24]
  404fd6:	f7ff faaf 	bl	404538 <__sprint_r.part.0>
  404fda:	2800      	cmp	r0, #0
  404fdc:	d19e      	bne.n	404f1c <_vfiprintf_r+0x964>
  404fde:	46ca      	mov	sl, r9
  404fe0:	f7ff bbc0 	b.w	404764 <_vfiprintf_r+0x1ac>
  404fe4:	00410978 	.word	0x00410978
  404fe8:	00410968 	.word	0x00410968
  404fec:	3104      	adds	r1, #4
  404fee:	6816      	ldr	r6, [r2, #0]
  404ff0:	9107      	str	r1, [sp, #28]
  404ff2:	2201      	movs	r2, #1
  404ff4:	2700      	movs	r7, #0
  404ff6:	e412      	b.n	40481e <_vfiprintf_r+0x266>
  404ff8:	9807      	ldr	r0, [sp, #28]
  404ffa:	4601      	mov	r1, r0
  404ffc:	3104      	adds	r1, #4
  404ffe:	6806      	ldr	r6, [r0, #0]
  405000:	9107      	str	r1, [sp, #28]
  405002:	2700      	movs	r7, #0
  405004:	e40b      	b.n	40481e <_vfiprintf_r+0x266>
  405006:	680e      	ldr	r6, [r1, #0]
  405008:	3104      	adds	r1, #4
  40500a:	9107      	str	r1, [sp, #28]
  40500c:	2700      	movs	r7, #0
  40500e:	e591      	b.n	404b34 <_vfiprintf_r+0x57c>
  405010:	9907      	ldr	r1, [sp, #28]
  405012:	680e      	ldr	r6, [r1, #0]
  405014:	460a      	mov	r2, r1
  405016:	17f7      	asrs	r7, r6, #31
  405018:	3204      	adds	r2, #4
  40501a:	9207      	str	r2, [sp, #28]
  40501c:	4630      	mov	r0, r6
  40501e:	4639      	mov	r1, r7
  405020:	e50f      	b.n	404a42 <_vfiprintf_r+0x48a>
  405022:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  405026:	f001 fe4d 	bl	406cc4 <__retarget_lock_release_recursive>
  40502a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
  40502e:	e71a      	b.n	404e66 <_vfiprintf_r+0x8ae>
  405030:	9b02      	ldr	r3, [sp, #8]
  405032:	9302      	str	r3, [sp, #8]
  405034:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
  405038:	3630      	adds	r6, #48	; 0x30
  40503a:	2301      	movs	r3, #1
  40503c:	f80b 6d41 	strb.w	r6, [fp, #-65]!
  405040:	9305      	str	r3, [sp, #20]
  405042:	e40b      	b.n	40485c <_vfiprintf_r+0x2a4>
  405044:	aa0f      	add	r2, sp, #60	; 0x3c
  405046:	9904      	ldr	r1, [sp, #16]
  405048:	9806      	ldr	r0, [sp, #24]
  40504a:	f7ff fa75 	bl	404538 <__sprint_r.part.0>
  40504e:	2800      	cmp	r0, #0
  405050:	f47f af64 	bne.w	404f1c <_vfiprintf_r+0x964>
  405054:	9910      	ldr	r1, [sp, #64]	; 0x40
  405056:	9a11      	ldr	r2, [sp, #68]	; 0x44
  405058:	1c48      	adds	r0, r1, #1
  40505a:	46ca      	mov	sl, r9
  40505c:	e651      	b.n	404d02 <_vfiprintf_r+0x74a>
  40505e:	aa0f      	add	r2, sp, #60	; 0x3c
  405060:	9904      	ldr	r1, [sp, #16]
  405062:	9806      	ldr	r0, [sp, #24]
  405064:	f7ff fa68 	bl	404538 <__sprint_r.part.0>
  405068:	2800      	cmp	r0, #0
  40506a:	f47f af57 	bne.w	404f1c <_vfiprintf_r+0x964>
  40506e:	9910      	ldr	r1, [sp, #64]	; 0x40
  405070:	9a11      	ldr	r2, [sp, #68]	; 0x44
  405072:	1c48      	adds	r0, r1, #1
  405074:	46ca      	mov	sl, r9
  405076:	e448      	b.n	40490a <_vfiprintf_r+0x352>
  405078:	2a00      	cmp	r2, #0
  40507a:	f040 8091 	bne.w	4051a0 <_vfiprintf_r+0xbe8>
  40507e:	2001      	movs	r0, #1
  405080:	4611      	mov	r1, r2
  405082:	46ca      	mov	sl, r9
  405084:	e641      	b.n	404d0a <_vfiprintf_r+0x752>
  405086:	aa0f      	add	r2, sp, #60	; 0x3c
  405088:	9904      	ldr	r1, [sp, #16]
  40508a:	9806      	ldr	r0, [sp, #24]
  40508c:	f7ff fa54 	bl	404538 <__sprint_r.part.0>
  405090:	2800      	cmp	r0, #0
  405092:	f47f af43 	bne.w	404f1c <_vfiprintf_r+0x964>
  405096:	9810      	ldr	r0, [sp, #64]	; 0x40
  405098:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40509a:	3001      	adds	r0, #1
  40509c:	46ca      	mov	sl, r9
  40509e:	e667      	b.n	404d70 <_vfiprintf_r+0x7b8>
  4050a0:	46d3      	mov	fp, sl
  4050a2:	e6d6      	b.n	404e52 <_vfiprintf_r+0x89a>
  4050a4:	9e07      	ldr	r6, [sp, #28]
  4050a6:	3607      	adds	r6, #7
  4050a8:	f026 0207 	bic.w	r2, r6, #7
  4050ac:	f102 0108 	add.w	r1, r2, #8
  4050b0:	e9d2 6700 	ldrd	r6, r7, [r2]
  4050b4:	9107      	str	r1, [sp, #28]
  4050b6:	2201      	movs	r2, #1
  4050b8:	f7ff bbb1 	b.w	40481e <_vfiprintf_r+0x266>
  4050bc:	9e07      	ldr	r6, [sp, #28]
  4050be:	3607      	adds	r6, #7
  4050c0:	f026 0607 	bic.w	r6, r6, #7
  4050c4:	e9d6 0100 	ldrd	r0, r1, [r6]
  4050c8:	f106 0208 	add.w	r2, r6, #8
  4050cc:	9207      	str	r2, [sp, #28]
  4050ce:	4606      	mov	r6, r0
  4050d0:	460f      	mov	r7, r1
  4050d2:	e4b6      	b.n	404a42 <_vfiprintf_r+0x48a>
  4050d4:	9e07      	ldr	r6, [sp, #28]
  4050d6:	3607      	adds	r6, #7
  4050d8:	f026 0207 	bic.w	r2, r6, #7
  4050dc:	f102 0108 	add.w	r1, r2, #8
  4050e0:	e9d2 6700 	ldrd	r6, r7, [r2]
  4050e4:	9107      	str	r1, [sp, #28]
  4050e6:	2200      	movs	r2, #0
  4050e8:	f7ff bb99 	b.w	40481e <_vfiprintf_r+0x266>
  4050ec:	9e07      	ldr	r6, [sp, #28]
  4050ee:	3607      	adds	r6, #7
  4050f0:	f026 0107 	bic.w	r1, r6, #7
  4050f4:	f101 0008 	add.w	r0, r1, #8
  4050f8:	9007      	str	r0, [sp, #28]
  4050fa:	e9d1 6700 	ldrd	r6, r7, [r1]
  4050fe:	e519      	b.n	404b34 <_vfiprintf_r+0x57c>
  405100:	46cb      	mov	fp, r9
  405102:	f7ff bbab 	b.w	40485c <_vfiprintf_r+0x2a4>
  405106:	252d      	movs	r5, #45	; 0x2d
  405108:	4276      	negs	r6, r6
  40510a:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
  40510e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  405112:	2201      	movs	r2, #1
  405114:	f7ff bb88 	b.w	404828 <_vfiprintf_r+0x270>
  405118:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40511a:	b9b3      	cbnz	r3, 40514a <_vfiprintf_r+0xb92>
  40511c:	4611      	mov	r1, r2
  40511e:	2001      	movs	r0, #1
  405120:	46ca      	mov	sl, r9
  405122:	e5f2      	b.n	404d0a <_vfiprintf_r+0x752>
  405124:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
  405128:	f001 fdcc 	bl	406cc4 <__retarget_lock_release_recursive>
  40512c:	f04f 33ff 	mov.w	r3, #4294967295
  405130:	9303      	str	r3, [sp, #12]
  405132:	f7ff bb50 	b.w	4047d6 <_vfiprintf_r+0x21e>
  405136:	aa0f      	add	r2, sp, #60	; 0x3c
  405138:	9904      	ldr	r1, [sp, #16]
  40513a:	9806      	ldr	r0, [sp, #24]
  40513c:	f7ff f9fc 	bl	404538 <__sprint_r.part.0>
  405140:	2800      	cmp	r0, #0
  405142:	f47f aeeb 	bne.w	404f1c <_vfiprintf_r+0x964>
  405146:	9a11      	ldr	r2, [sp, #68]	; 0x44
  405148:	e6a9      	b.n	404e9e <_vfiprintf_r+0x8e6>
  40514a:	ab0e      	add	r3, sp, #56	; 0x38
  40514c:	2202      	movs	r2, #2
  40514e:	931c      	str	r3, [sp, #112]	; 0x70
  405150:	921d      	str	r2, [sp, #116]	; 0x74
  405152:	2001      	movs	r0, #1
  405154:	46ca      	mov	sl, r9
  405156:	e5d0      	b.n	404cfa <_vfiprintf_r+0x742>
  405158:	aa0f      	add	r2, sp, #60	; 0x3c
  40515a:	9904      	ldr	r1, [sp, #16]
  40515c:	9806      	ldr	r0, [sp, #24]
  40515e:	f7ff f9eb 	bl	404538 <__sprint_r.part.0>
  405162:	2800      	cmp	r0, #0
  405164:	f47f aeda 	bne.w	404f1c <_vfiprintf_r+0x964>
  405168:	9910      	ldr	r1, [sp, #64]	; 0x40
  40516a:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40516c:	1c48      	adds	r0, r1, #1
  40516e:	46ca      	mov	sl, r9
  405170:	e5a4      	b.n	404cbc <_vfiprintf_r+0x704>
  405172:	9a07      	ldr	r2, [sp, #28]
  405174:	9903      	ldr	r1, [sp, #12]
  405176:	6813      	ldr	r3, [r2, #0]
  405178:	17cd      	asrs	r5, r1, #31
  40517a:	4608      	mov	r0, r1
  40517c:	3204      	adds	r2, #4
  40517e:	4629      	mov	r1, r5
  405180:	9207      	str	r2, [sp, #28]
  405182:	e9c3 0100 	strd	r0, r1, [r3]
  405186:	f7ff ba54 	b.w	404632 <_vfiprintf_r+0x7a>
  40518a:	4658      	mov	r0, fp
  40518c:	9607      	str	r6, [sp, #28]
  40518e:	9302      	str	r3, [sp, #8]
  405190:	f7fd ff36 	bl	403000 <strlen>
  405194:	2400      	movs	r4, #0
  405196:	9005      	str	r0, [sp, #20]
  405198:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  40519c:	f7ff bb5e 	b.w	40485c <_vfiprintf_r+0x2a4>
  4051a0:	aa0f      	add	r2, sp, #60	; 0x3c
  4051a2:	9904      	ldr	r1, [sp, #16]
  4051a4:	9806      	ldr	r0, [sp, #24]
  4051a6:	f7ff f9c7 	bl	404538 <__sprint_r.part.0>
  4051aa:	2800      	cmp	r0, #0
  4051ac:	f47f aeb6 	bne.w	404f1c <_vfiprintf_r+0x964>
  4051b0:	9910      	ldr	r1, [sp, #64]	; 0x40
  4051b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4051b4:	1c48      	adds	r0, r1, #1
  4051b6:	46ca      	mov	sl, r9
  4051b8:	e5a7      	b.n	404d0a <_vfiprintf_r+0x752>
  4051ba:	9910      	ldr	r1, [sp, #64]	; 0x40
  4051bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4051be:	4e20      	ldr	r6, [pc, #128]	; (405240 <_vfiprintf_r+0xc88>)
  4051c0:	3101      	adds	r1, #1
  4051c2:	f7ff bb90 	b.w	4048e6 <_vfiprintf_r+0x32e>
  4051c6:	2c06      	cmp	r4, #6
  4051c8:	bf28      	it	cs
  4051ca:	2406      	movcs	r4, #6
  4051cc:	9405      	str	r4, [sp, #20]
  4051ce:	9607      	str	r6, [sp, #28]
  4051d0:	9401      	str	r4, [sp, #4]
  4051d2:	f8df b070 	ldr.w	fp, [pc, #112]	; 405244 <_vfiprintf_r+0xc8c>
  4051d6:	e4d5      	b.n	404b84 <_vfiprintf_r+0x5cc>
  4051d8:	9810      	ldr	r0, [sp, #64]	; 0x40
  4051da:	4e19      	ldr	r6, [pc, #100]	; (405240 <_vfiprintf_r+0xc88>)
  4051dc:	3001      	adds	r0, #1
  4051de:	e603      	b.n	404de8 <_vfiprintf_r+0x830>
  4051e0:	9405      	str	r4, [sp, #20]
  4051e2:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
  4051e6:	9607      	str	r6, [sp, #28]
  4051e8:	9302      	str	r3, [sp, #8]
  4051ea:	4604      	mov	r4, r0
  4051ec:	f7ff bb36 	b.w	40485c <_vfiprintf_r+0x2a4>
  4051f0:	4686      	mov	lr, r0
  4051f2:	f7ff bbce 	b.w	404992 <_vfiprintf_r+0x3da>
  4051f6:	9806      	ldr	r0, [sp, #24]
  4051f8:	aa0f      	add	r2, sp, #60	; 0x3c
  4051fa:	4659      	mov	r1, fp
  4051fc:	f7ff f99c 	bl	404538 <__sprint_r.part.0>
  405200:	2800      	cmp	r0, #0
  405202:	f43f ae24 	beq.w	404e4e <_vfiprintf_r+0x896>
  405206:	e624      	b.n	404e52 <_vfiprintf_r+0x89a>
  405208:	9907      	ldr	r1, [sp, #28]
  40520a:	f898 2001 	ldrb.w	r2, [r8, #1]
  40520e:	680c      	ldr	r4, [r1, #0]
  405210:	3104      	adds	r1, #4
  405212:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
  405216:	46b8      	mov	r8, r7
  405218:	9107      	str	r1, [sp, #28]
  40521a:	f7ff ba3f 	b.w	40469c <_vfiprintf_r+0xe4>
  40521e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  405222:	e43c      	b.n	404a9e <_vfiprintf_r+0x4e6>
  405224:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  405228:	e521      	b.n	404c6e <_vfiprintf_r+0x6b6>
  40522a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40522e:	f7ff bbf4 	b.w	404a1a <_vfiprintf_r+0x462>
  405232:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  405236:	e491      	b.n	404b5c <_vfiprintf_r+0x5a4>
  405238:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
  40523c:	e469      	b.n	404b12 <_vfiprintf_r+0x55a>
  40523e:	bf00      	nop
  405240:	00410968 	.word	0x00410968
  405244:	0041093c 	.word	0x0041093c

00405248 <__sbprintf>:
  405248:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40524c:	460c      	mov	r4, r1
  40524e:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
  405252:	8989      	ldrh	r1, [r1, #12]
  405254:	6e66      	ldr	r6, [r4, #100]	; 0x64
  405256:	89e5      	ldrh	r5, [r4, #14]
  405258:	9619      	str	r6, [sp, #100]	; 0x64
  40525a:	f021 0102 	bic.w	r1, r1, #2
  40525e:	4606      	mov	r6, r0
  405260:	69e0      	ldr	r0, [r4, #28]
  405262:	f8ad 100c 	strh.w	r1, [sp, #12]
  405266:	4617      	mov	r7, r2
  405268:	f44f 6180 	mov.w	r1, #1024	; 0x400
  40526c:	6a62      	ldr	r2, [r4, #36]	; 0x24
  40526e:	f8ad 500e 	strh.w	r5, [sp, #14]
  405272:	4698      	mov	r8, r3
  405274:	ad1a      	add	r5, sp, #104	; 0x68
  405276:	2300      	movs	r3, #0
  405278:	9007      	str	r0, [sp, #28]
  40527a:	a816      	add	r0, sp, #88	; 0x58
  40527c:	9209      	str	r2, [sp, #36]	; 0x24
  40527e:	9306      	str	r3, [sp, #24]
  405280:	9500      	str	r5, [sp, #0]
  405282:	9504      	str	r5, [sp, #16]
  405284:	9102      	str	r1, [sp, #8]
  405286:	9105      	str	r1, [sp, #20]
  405288:	f001 fd16 	bl	406cb8 <__retarget_lock_init_recursive>
  40528c:	4643      	mov	r3, r8
  40528e:	463a      	mov	r2, r7
  405290:	4669      	mov	r1, sp
  405292:	4630      	mov	r0, r6
  405294:	f7ff f990 	bl	4045b8 <_vfiprintf_r>
  405298:	1e05      	subs	r5, r0, #0
  40529a:	db07      	blt.n	4052ac <__sbprintf+0x64>
  40529c:	4630      	mov	r0, r6
  40529e:	4669      	mov	r1, sp
  4052a0:	f001 f8e8 	bl	406474 <_fflush_r>
  4052a4:	2800      	cmp	r0, #0
  4052a6:	bf18      	it	ne
  4052a8:	f04f 35ff 	movne.w	r5, #4294967295
  4052ac:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  4052b0:	065b      	lsls	r3, r3, #25
  4052b2:	d503      	bpl.n	4052bc <__sbprintf+0x74>
  4052b4:	89a3      	ldrh	r3, [r4, #12]
  4052b6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4052ba:	81a3      	strh	r3, [r4, #12]
  4052bc:	9816      	ldr	r0, [sp, #88]	; 0x58
  4052be:	f001 fcfd 	bl	406cbc <__retarget_lock_close_recursive>
  4052c2:	4628      	mov	r0, r5
  4052c4:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
  4052c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

004052cc <__swsetup_r>:
  4052cc:	b538      	push	{r3, r4, r5, lr}
  4052ce:	4b30      	ldr	r3, [pc, #192]	; (405390 <__swsetup_r+0xc4>)
  4052d0:	681b      	ldr	r3, [r3, #0]
  4052d2:	4605      	mov	r5, r0
  4052d4:	460c      	mov	r4, r1
  4052d6:	b113      	cbz	r3, 4052de <__swsetup_r+0x12>
  4052d8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  4052da:	2a00      	cmp	r2, #0
  4052dc:	d038      	beq.n	405350 <__swsetup_r+0x84>
  4052de:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  4052e2:	b293      	uxth	r3, r2
  4052e4:	0718      	lsls	r0, r3, #28
  4052e6:	d50c      	bpl.n	405302 <__swsetup_r+0x36>
  4052e8:	6920      	ldr	r0, [r4, #16]
  4052ea:	b1a8      	cbz	r0, 405318 <__swsetup_r+0x4c>
  4052ec:	f013 0201 	ands.w	r2, r3, #1
  4052f0:	d01e      	beq.n	405330 <__swsetup_r+0x64>
  4052f2:	6963      	ldr	r3, [r4, #20]
  4052f4:	2200      	movs	r2, #0
  4052f6:	425b      	negs	r3, r3
  4052f8:	61a3      	str	r3, [r4, #24]
  4052fa:	60a2      	str	r2, [r4, #8]
  4052fc:	b1f0      	cbz	r0, 40533c <__swsetup_r+0x70>
  4052fe:	2000      	movs	r0, #0
  405300:	bd38      	pop	{r3, r4, r5, pc}
  405302:	06d9      	lsls	r1, r3, #27
  405304:	d53c      	bpl.n	405380 <__swsetup_r+0xb4>
  405306:	0758      	lsls	r0, r3, #29
  405308:	d426      	bmi.n	405358 <__swsetup_r+0x8c>
  40530a:	6920      	ldr	r0, [r4, #16]
  40530c:	f042 0308 	orr.w	r3, r2, #8
  405310:	81a3      	strh	r3, [r4, #12]
  405312:	b29b      	uxth	r3, r3
  405314:	2800      	cmp	r0, #0
  405316:	d1e9      	bne.n	4052ec <__swsetup_r+0x20>
  405318:	f403 7220 	and.w	r2, r3, #640	; 0x280
  40531c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  405320:	d0e4      	beq.n	4052ec <__swsetup_r+0x20>
  405322:	4628      	mov	r0, r5
  405324:	4621      	mov	r1, r4
  405326:	f001 fcfd 	bl	406d24 <__smakebuf_r>
  40532a:	89a3      	ldrh	r3, [r4, #12]
  40532c:	6920      	ldr	r0, [r4, #16]
  40532e:	e7dd      	b.n	4052ec <__swsetup_r+0x20>
  405330:	0799      	lsls	r1, r3, #30
  405332:	bf58      	it	pl
  405334:	6962      	ldrpl	r2, [r4, #20]
  405336:	60a2      	str	r2, [r4, #8]
  405338:	2800      	cmp	r0, #0
  40533a:	d1e0      	bne.n	4052fe <__swsetup_r+0x32>
  40533c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405340:	061a      	lsls	r2, r3, #24
  405342:	d5dd      	bpl.n	405300 <__swsetup_r+0x34>
  405344:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405348:	81a3      	strh	r3, [r4, #12]
  40534a:	f04f 30ff 	mov.w	r0, #4294967295
  40534e:	bd38      	pop	{r3, r4, r5, pc}
  405350:	4618      	mov	r0, r3
  405352:	f001 f8e7 	bl	406524 <__sinit>
  405356:	e7c2      	b.n	4052de <__swsetup_r+0x12>
  405358:	6b21      	ldr	r1, [r4, #48]	; 0x30
  40535a:	b151      	cbz	r1, 405372 <__swsetup_r+0xa6>
  40535c:	f104 0340 	add.w	r3, r4, #64	; 0x40
  405360:	4299      	cmp	r1, r3
  405362:	d004      	beq.n	40536e <__swsetup_r+0xa2>
  405364:	4628      	mov	r0, r5
  405366:	f001 fa03 	bl	406770 <_free_r>
  40536a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40536e:	2300      	movs	r3, #0
  405370:	6323      	str	r3, [r4, #48]	; 0x30
  405372:	2300      	movs	r3, #0
  405374:	6920      	ldr	r0, [r4, #16]
  405376:	6063      	str	r3, [r4, #4]
  405378:	f022 0224 	bic.w	r2, r2, #36	; 0x24
  40537c:	6020      	str	r0, [r4, #0]
  40537e:	e7c5      	b.n	40530c <__swsetup_r+0x40>
  405380:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  405384:	2309      	movs	r3, #9
  405386:	602b      	str	r3, [r5, #0]
  405388:	f04f 30ff 	mov.w	r0, #4294967295
  40538c:	81a2      	strh	r2, [r4, #12]
  40538e:	bd38      	pop	{r3, r4, r5, pc}
  405390:	20400010 	.word	0x20400010

00405394 <register_fini>:
  405394:	4b02      	ldr	r3, [pc, #8]	; (4053a0 <register_fini+0xc>)
  405396:	b113      	cbz	r3, 40539e <register_fini+0xa>
  405398:	4802      	ldr	r0, [pc, #8]	; (4053a4 <register_fini+0x10>)
  40539a:	f000 b805 	b.w	4053a8 <atexit>
  40539e:	4770      	bx	lr
  4053a0:	00000000 	.word	0x00000000
  4053a4:	00406595 	.word	0x00406595

004053a8 <atexit>:
  4053a8:	2300      	movs	r3, #0
  4053aa:	4601      	mov	r1, r0
  4053ac:	461a      	mov	r2, r3
  4053ae:	4618      	mov	r0, r3
  4053b0:	f002 bc74 	b.w	407c9c <__register_exitproc>

004053b4 <quorem>:
  4053b4:	6902      	ldr	r2, [r0, #16]
  4053b6:	690b      	ldr	r3, [r1, #16]
  4053b8:	4293      	cmp	r3, r2
  4053ba:	f300 808d 	bgt.w	4054d8 <quorem+0x124>
  4053be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053c2:	f103 38ff 	add.w	r8, r3, #4294967295
  4053c6:	f101 0714 	add.w	r7, r1, #20
  4053ca:	f100 0b14 	add.w	fp, r0, #20
  4053ce:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4053d2:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4053d6:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4053da:	b083      	sub	sp, #12
  4053dc:	3201      	adds	r2, #1
  4053de:	fbb3 f9f2 	udiv	r9, r3, r2
  4053e2:	eb0b 0304 	add.w	r3, fp, r4
  4053e6:	9400      	str	r4, [sp, #0]
  4053e8:	eb07 0a04 	add.w	sl, r7, r4
  4053ec:	9301      	str	r3, [sp, #4]
  4053ee:	f1b9 0f00 	cmp.w	r9, #0
  4053f2:	d039      	beq.n	405468 <quorem+0xb4>
  4053f4:	2500      	movs	r5, #0
  4053f6:	462e      	mov	r6, r5
  4053f8:	46bc      	mov	ip, r7
  4053fa:	46de      	mov	lr, fp
  4053fc:	f85c 4b04 	ldr.w	r4, [ip], #4
  405400:	f8de 3000 	ldr.w	r3, [lr]
  405404:	b2a2      	uxth	r2, r4
  405406:	fb09 5502 	mla	r5, r9, r2, r5
  40540a:	0c22      	lsrs	r2, r4, #16
  40540c:	0c2c      	lsrs	r4, r5, #16
  40540e:	fb09 4202 	mla	r2, r9, r2, r4
  405412:	b2ad      	uxth	r5, r5
  405414:	1b75      	subs	r5, r6, r5
  405416:	b296      	uxth	r6, r2
  405418:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  40541c:	fa15 f383 	uxtah	r3, r5, r3
  405420:	eb06 4623 	add.w	r6, r6, r3, asr #16
  405424:	b29b      	uxth	r3, r3
  405426:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40542a:	45e2      	cmp	sl, ip
  40542c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  405430:	f84e 3b04 	str.w	r3, [lr], #4
  405434:	ea4f 4626 	mov.w	r6, r6, asr #16
  405438:	d2e0      	bcs.n	4053fc <quorem+0x48>
  40543a:	9b00      	ldr	r3, [sp, #0]
  40543c:	f85b 3003 	ldr.w	r3, [fp, r3]
  405440:	b993      	cbnz	r3, 405468 <quorem+0xb4>
  405442:	9c01      	ldr	r4, [sp, #4]
  405444:	1f23      	subs	r3, r4, #4
  405446:	459b      	cmp	fp, r3
  405448:	d20c      	bcs.n	405464 <quorem+0xb0>
  40544a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40544e:	b94b      	cbnz	r3, 405464 <quorem+0xb0>
  405450:	f1a4 0308 	sub.w	r3, r4, #8
  405454:	e002      	b.n	40545c <quorem+0xa8>
  405456:	681a      	ldr	r2, [r3, #0]
  405458:	3b04      	subs	r3, #4
  40545a:	b91a      	cbnz	r2, 405464 <quorem+0xb0>
  40545c:	459b      	cmp	fp, r3
  40545e:	f108 38ff 	add.w	r8, r8, #4294967295
  405462:	d3f8      	bcc.n	405456 <quorem+0xa2>
  405464:	f8c0 8010 	str.w	r8, [r0, #16]
  405468:	4604      	mov	r4, r0
  40546a:	f002 f80d 	bl	407488 <__mcmp>
  40546e:	2800      	cmp	r0, #0
  405470:	db2e      	blt.n	4054d0 <quorem+0x11c>
  405472:	f109 0901 	add.w	r9, r9, #1
  405476:	465d      	mov	r5, fp
  405478:	2300      	movs	r3, #0
  40547a:	f857 1b04 	ldr.w	r1, [r7], #4
  40547e:	6828      	ldr	r0, [r5, #0]
  405480:	b28a      	uxth	r2, r1
  405482:	1a9a      	subs	r2, r3, r2
  405484:	0c0b      	lsrs	r3, r1, #16
  405486:	fa12 f280 	uxtah	r2, r2, r0
  40548a:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40548e:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405492:	b292      	uxth	r2, r2
  405494:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  405498:	45ba      	cmp	sl, r7
  40549a:	f845 2b04 	str.w	r2, [r5], #4
  40549e:	ea4f 4323 	mov.w	r3, r3, asr #16
  4054a2:	d2ea      	bcs.n	40547a <quorem+0xc6>
  4054a4:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4054a8:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4054ac:	b982      	cbnz	r2, 4054d0 <quorem+0x11c>
  4054ae:	1f1a      	subs	r2, r3, #4
  4054b0:	4593      	cmp	fp, r2
  4054b2:	d20b      	bcs.n	4054cc <quorem+0x118>
  4054b4:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4054b8:	b942      	cbnz	r2, 4054cc <quorem+0x118>
  4054ba:	3b08      	subs	r3, #8
  4054bc:	e002      	b.n	4054c4 <quorem+0x110>
  4054be:	681a      	ldr	r2, [r3, #0]
  4054c0:	3b04      	subs	r3, #4
  4054c2:	b91a      	cbnz	r2, 4054cc <quorem+0x118>
  4054c4:	459b      	cmp	fp, r3
  4054c6:	f108 38ff 	add.w	r8, r8, #4294967295
  4054ca:	d3f8      	bcc.n	4054be <quorem+0x10a>
  4054cc:	f8c4 8010 	str.w	r8, [r4, #16]
  4054d0:	4648      	mov	r0, r9
  4054d2:	b003      	add	sp, #12
  4054d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054d8:	2000      	movs	r0, #0
  4054da:	4770      	bx	lr
  4054dc:	0000      	movs	r0, r0
	...

004054e0 <_dtoa_r>:
  4054e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4054e4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4054e6:	b09b      	sub	sp, #108	; 0x6c
  4054e8:	4604      	mov	r4, r0
  4054ea:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4054ec:	4692      	mov	sl, r2
  4054ee:	469b      	mov	fp, r3
  4054f0:	b141      	cbz	r1, 405504 <_dtoa_r+0x24>
  4054f2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4054f4:	604a      	str	r2, [r1, #4]
  4054f6:	2301      	movs	r3, #1
  4054f8:	4093      	lsls	r3, r2
  4054fa:	608b      	str	r3, [r1, #8]
  4054fc:	f001 fdec 	bl	4070d8 <_Bfree>
  405500:	2300      	movs	r3, #0
  405502:	6423      	str	r3, [r4, #64]	; 0x40
  405504:	f1bb 0f00 	cmp.w	fp, #0
  405508:	465d      	mov	r5, fp
  40550a:	db35      	blt.n	405578 <_dtoa_r+0x98>
  40550c:	2300      	movs	r3, #0
  40550e:	6033      	str	r3, [r6, #0]
  405510:	4b9d      	ldr	r3, [pc, #628]	; (405788 <_dtoa_r+0x2a8>)
  405512:	43ab      	bics	r3, r5
  405514:	d015      	beq.n	405542 <_dtoa_r+0x62>
  405516:	4650      	mov	r0, sl
  405518:	4659      	mov	r1, fp
  40551a:	2200      	movs	r2, #0
  40551c:	2300      	movs	r3, #0
  40551e:	f003 f935 	bl	40878c <__aeabi_dcmpeq>
  405522:	4680      	mov	r8, r0
  405524:	2800      	cmp	r0, #0
  405526:	d02d      	beq.n	405584 <_dtoa_r+0xa4>
  405528:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40552a:	2301      	movs	r3, #1
  40552c:	6013      	str	r3, [r2, #0]
  40552e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405530:	2b00      	cmp	r3, #0
  405532:	f000 80bd 	beq.w	4056b0 <_dtoa_r+0x1d0>
  405536:	4895      	ldr	r0, [pc, #596]	; (40578c <_dtoa_r+0x2ac>)
  405538:	6018      	str	r0, [r3, #0]
  40553a:	3801      	subs	r0, #1
  40553c:	b01b      	add	sp, #108	; 0x6c
  40553e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405542:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405544:	f242 730f 	movw	r3, #9999	; 0x270f
  405548:	6013      	str	r3, [r2, #0]
  40554a:	f1ba 0f00 	cmp.w	sl, #0
  40554e:	d10d      	bne.n	40556c <_dtoa_r+0x8c>
  405550:	f3c5 0513 	ubfx	r5, r5, #0, #20
  405554:	b955      	cbnz	r5, 40556c <_dtoa_r+0x8c>
  405556:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405558:	488d      	ldr	r0, [pc, #564]	; (405790 <_dtoa_r+0x2b0>)
  40555a:	2b00      	cmp	r3, #0
  40555c:	d0ee      	beq.n	40553c <_dtoa_r+0x5c>
  40555e:	f100 0308 	add.w	r3, r0, #8
  405562:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  405564:	6013      	str	r3, [r2, #0]
  405566:	b01b      	add	sp, #108	; 0x6c
  405568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40556c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40556e:	4889      	ldr	r0, [pc, #548]	; (405794 <_dtoa_r+0x2b4>)
  405570:	2b00      	cmp	r3, #0
  405572:	d0e3      	beq.n	40553c <_dtoa_r+0x5c>
  405574:	1cc3      	adds	r3, r0, #3
  405576:	e7f4      	b.n	405562 <_dtoa_r+0x82>
  405578:	2301      	movs	r3, #1
  40557a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40557e:	6033      	str	r3, [r6, #0]
  405580:	46ab      	mov	fp, r5
  405582:	e7c5      	b.n	405510 <_dtoa_r+0x30>
  405584:	aa18      	add	r2, sp, #96	; 0x60
  405586:	ab19      	add	r3, sp, #100	; 0x64
  405588:	9201      	str	r2, [sp, #4]
  40558a:	9300      	str	r3, [sp, #0]
  40558c:	4652      	mov	r2, sl
  40558e:	465b      	mov	r3, fp
  405590:	4620      	mov	r0, r4
  405592:	f002 f819 	bl	4075c8 <__d2b>
  405596:	0d2b      	lsrs	r3, r5, #20
  405598:	4681      	mov	r9, r0
  40559a:	d071      	beq.n	405680 <_dtoa_r+0x1a0>
  40559c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4055a0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4055a4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4055a6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4055aa:	4650      	mov	r0, sl
  4055ac:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4055b0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4055b4:	2200      	movs	r2, #0
  4055b6:	4b78      	ldr	r3, [pc, #480]	; (405798 <_dtoa_r+0x2b8>)
  4055b8:	f002 fccc 	bl	407f54 <__aeabi_dsub>
  4055bc:	a36c      	add	r3, pc, #432	; (adr r3, 405770 <_dtoa_r+0x290>)
  4055be:	e9d3 2300 	ldrd	r2, r3, [r3]
  4055c2:	f002 fe7b 	bl	4082bc <__aeabi_dmul>
  4055c6:	a36c      	add	r3, pc, #432	; (adr r3, 405778 <_dtoa_r+0x298>)
  4055c8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4055cc:	f002 fcc4 	bl	407f58 <__adddf3>
  4055d0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4055d4:	4630      	mov	r0, r6
  4055d6:	f002 fe0b 	bl	4081f0 <__aeabi_i2d>
  4055da:	a369      	add	r3, pc, #420	; (adr r3, 405780 <_dtoa_r+0x2a0>)
  4055dc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4055e0:	f002 fe6c 	bl	4082bc <__aeabi_dmul>
  4055e4:	4602      	mov	r2, r0
  4055e6:	460b      	mov	r3, r1
  4055e8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4055ec:	f002 fcb4 	bl	407f58 <__adddf3>
  4055f0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4055f4:	f003 f912 	bl	40881c <__aeabi_d2iz>
  4055f8:	2200      	movs	r2, #0
  4055fa:	9002      	str	r0, [sp, #8]
  4055fc:	2300      	movs	r3, #0
  4055fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405602:	f003 f8cd 	bl	4087a0 <__aeabi_dcmplt>
  405606:	2800      	cmp	r0, #0
  405608:	f040 8173 	bne.w	4058f2 <_dtoa_r+0x412>
  40560c:	9d02      	ldr	r5, [sp, #8]
  40560e:	2d16      	cmp	r5, #22
  405610:	f200 815d 	bhi.w	4058ce <_dtoa_r+0x3ee>
  405614:	4b61      	ldr	r3, [pc, #388]	; (40579c <_dtoa_r+0x2bc>)
  405616:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40561a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40561e:	4652      	mov	r2, sl
  405620:	465b      	mov	r3, fp
  405622:	f003 f8db 	bl	4087dc <__aeabi_dcmpgt>
  405626:	2800      	cmp	r0, #0
  405628:	f000 81c5 	beq.w	4059b6 <_dtoa_r+0x4d6>
  40562c:	1e6b      	subs	r3, r5, #1
  40562e:	9302      	str	r3, [sp, #8]
  405630:	2300      	movs	r3, #0
  405632:	930e      	str	r3, [sp, #56]	; 0x38
  405634:	1bbf      	subs	r7, r7, r6
  405636:	1e7b      	subs	r3, r7, #1
  405638:	9306      	str	r3, [sp, #24]
  40563a:	f100 8154 	bmi.w	4058e6 <_dtoa_r+0x406>
  40563e:	2300      	movs	r3, #0
  405640:	9308      	str	r3, [sp, #32]
  405642:	9b02      	ldr	r3, [sp, #8]
  405644:	2b00      	cmp	r3, #0
  405646:	f2c0 8145 	blt.w	4058d4 <_dtoa_r+0x3f4>
  40564a:	9a06      	ldr	r2, [sp, #24]
  40564c:	930d      	str	r3, [sp, #52]	; 0x34
  40564e:	4611      	mov	r1, r2
  405650:	4419      	add	r1, r3
  405652:	2300      	movs	r3, #0
  405654:	9106      	str	r1, [sp, #24]
  405656:	930c      	str	r3, [sp, #48]	; 0x30
  405658:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40565a:	2b09      	cmp	r3, #9
  40565c:	d82a      	bhi.n	4056b4 <_dtoa_r+0x1d4>
  40565e:	2b05      	cmp	r3, #5
  405660:	f340 865b 	ble.w	40631a <_dtoa_r+0xe3a>
  405664:	3b04      	subs	r3, #4
  405666:	9324      	str	r3, [sp, #144]	; 0x90
  405668:	2500      	movs	r5, #0
  40566a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40566c:	3b02      	subs	r3, #2
  40566e:	2b03      	cmp	r3, #3
  405670:	f200 8642 	bhi.w	4062f8 <_dtoa_r+0xe18>
  405674:	e8df f013 	tbh	[pc, r3, lsl #1]
  405678:	02c903d4 	.word	0x02c903d4
  40567c:	046103df 	.word	0x046103df
  405680:	9f18      	ldr	r7, [sp, #96]	; 0x60
  405682:	9e19      	ldr	r6, [sp, #100]	; 0x64
  405684:	443e      	add	r6, r7
  405686:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40568a:	2b20      	cmp	r3, #32
  40568c:	f340 818e 	ble.w	4059ac <_dtoa_r+0x4cc>
  405690:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  405694:	f206 4012 	addw	r0, r6, #1042	; 0x412
  405698:	409d      	lsls	r5, r3
  40569a:	fa2a f000 	lsr.w	r0, sl, r0
  40569e:	4328      	orrs	r0, r5
  4056a0:	f002 fd96 	bl	4081d0 <__aeabi_ui2d>
  4056a4:	2301      	movs	r3, #1
  4056a6:	3e01      	subs	r6, #1
  4056a8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4056ac:	9314      	str	r3, [sp, #80]	; 0x50
  4056ae:	e781      	b.n	4055b4 <_dtoa_r+0xd4>
  4056b0:	483b      	ldr	r0, [pc, #236]	; (4057a0 <_dtoa_r+0x2c0>)
  4056b2:	e743      	b.n	40553c <_dtoa_r+0x5c>
  4056b4:	2100      	movs	r1, #0
  4056b6:	6461      	str	r1, [r4, #68]	; 0x44
  4056b8:	4620      	mov	r0, r4
  4056ba:	9125      	str	r1, [sp, #148]	; 0x94
  4056bc:	f001 fce6 	bl	40708c <_Balloc>
  4056c0:	f04f 33ff 	mov.w	r3, #4294967295
  4056c4:	930a      	str	r3, [sp, #40]	; 0x28
  4056c6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4056c8:	930f      	str	r3, [sp, #60]	; 0x3c
  4056ca:	2301      	movs	r3, #1
  4056cc:	9004      	str	r0, [sp, #16]
  4056ce:	6420      	str	r0, [r4, #64]	; 0x40
  4056d0:	9224      	str	r2, [sp, #144]	; 0x90
  4056d2:	930b      	str	r3, [sp, #44]	; 0x2c
  4056d4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4056d6:	2b00      	cmp	r3, #0
  4056d8:	f2c0 80d9 	blt.w	40588e <_dtoa_r+0x3ae>
  4056dc:	9a02      	ldr	r2, [sp, #8]
  4056de:	2a0e      	cmp	r2, #14
  4056e0:	f300 80d5 	bgt.w	40588e <_dtoa_r+0x3ae>
  4056e4:	4b2d      	ldr	r3, [pc, #180]	; (40579c <_dtoa_r+0x2bc>)
  4056e6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4056ea:	e9d3 2300 	ldrd	r2, r3, [r3]
  4056ee:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4056f2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4056f4:	2b00      	cmp	r3, #0
  4056f6:	f2c0 83ba 	blt.w	405e6e <_dtoa_r+0x98e>
  4056fa:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4056fe:	4650      	mov	r0, sl
  405700:	462a      	mov	r2, r5
  405702:	4633      	mov	r3, r6
  405704:	4659      	mov	r1, fp
  405706:	f002 ff03 	bl	408510 <__aeabi_ddiv>
  40570a:	f003 f887 	bl	40881c <__aeabi_d2iz>
  40570e:	4680      	mov	r8, r0
  405710:	f002 fd6e 	bl	4081f0 <__aeabi_i2d>
  405714:	462a      	mov	r2, r5
  405716:	4633      	mov	r3, r6
  405718:	f002 fdd0 	bl	4082bc <__aeabi_dmul>
  40571c:	460b      	mov	r3, r1
  40571e:	4602      	mov	r2, r0
  405720:	4659      	mov	r1, fp
  405722:	4650      	mov	r0, sl
  405724:	f002 fc16 	bl	407f54 <__aeabi_dsub>
  405728:	9d04      	ldr	r5, [sp, #16]
  40572a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40572e:	702b      	strb	r3, [r5, #0]
  405730:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405732:	2b01      	cmp	r3, #1
  405734:	4606      	mov	r6, r0
  405736:	460f      	mov	r7, r1
  405738:	f105 0501 	add.w	r5, r5, #1
  40573c:	d068      	beq.n	405810 <_dtoa_r+0x330>
  40573e:	2200      	movs	r2, #0
  405740:	4b18      	ldr	r3, [pc, #96]	; (4057a4 <_dtoa_r+0x2c4>)
  405742:	f002 fdbb 	bl	4082bc <__aeabi_dmul>
  405746:	2200      	movs	r2, #0
  405748:	2300      	movs	r3, #0
  40574a:	4606      	mov	r6, r0
  40574c:	460f      	mov	r7, r1
  40574e:	f003 f81d 	bl	40878c <__aeabi_dcmpeq>
  405752:	2800      	cmp	r0, #0
  405754:	f040 8088 	bne.w	405868 <_dtoa_r+0x388>
  405758:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40575c:	f04f 0a00 	mov.w	sl, #0
  405760:	f8df b040 	ldr.w	fp, [pc, #64]	; 4057a4 <_dtoa_r+0x2c4>
  405764:	940c      	str	r4, [sp, #48]	; 0x30
  405766:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40576a:	e028      	b.n	4057be <_dtoa_r+0x2de>
  40576c:	f3af 8000 	nop.w
  405770:	636f4361 	.word	0x636f4361
  405774:	3fd287a7 	.word	0x3fd287a7
  405778:	8b60c8b3 	.word	0x8b60c8b3
  40577c:	3fc68a28 	.word	0x3fc68a28
  405780:	509f79fb 	.word	0x509f79fb
  405784:	3fd34413 	.word	0x3fd34413
  405788:	7ff00000 	.word	0x7ff00000
  40578c:	00410945 	.word	0x00410945
  405790:	00410988 	.word	0x00410988
  405794:	00410994 	.word	0x00410994
  405798:	3ff80000 	.word	0x3ff80000
  40579c:	004109d0 	.word	0x004109d0
  4057a0:	00410944 	.word	0x00410944
  4057a4:	40240000 	.word	0x40240000
  4057a8:	f002 fd88 	bl	4082bc <__aeabi_dmul>
  4057ac:	2200      	movs	r2, #0
  4057ae:	2300      	movs	r3, #0
  4057b0:	4606      	mov	r6, r0
  4057b2:	460f      	mov	r7, r1
  4057b4:	f002 ffea 	bl	40878c <__aeabi_dcmpeq>
  4057b8:	2800      	cmp	r0, #0
  4057ba:	f040 83c1 	bne.w	405f40 <_dtoa_r+0xa60>
  4057be:	4642      	mov	r2, r8
  4057c0:	464b      	mov	r3, r9
  4057c2:	4630      	mov	r0, r6
  4057c4:	4639      	mov	r1, r7
  4057c6:	f002 fea3 	bl	408510 <__aeabi_ddiv>
  4057ca:	f003 f827 	bl	40881c <__aeabi_d2iz>
  4057ce:	4604      	mov	r4, r0
  4057d0:	f002 fd0e 	bl	4081f0 <__aeabi_i2d>
  4057d4:	4642      	mov	r2, r8
  4057d6:	464b      	mov	r3, r9
  4057d8:	f002 fd70 	bl	4082bc <__aeabi_dmul>
  4057dc:	4602      	mov	r2, r0
  4057de:	460b      	mov	r3, r1
  4057e0:	4630      	mov	r0, r6
  4057e2:	4639      	mov	r1, r7
  4057e4:	f002 fbb6 	bl	407f54 <__aeabi_dsub>
  4057e8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4057ec:	9e04      	ldr	r6, [sp, #16]
  4057ee:	f805 eb01 	strb.w	lr, [r5], #1
  4057f2:	eba5 0e06 	sub.w	lr, r5, r6
  4057f6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4057f8:	45b6      	cmp	lr, r6
  4057fa:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4057fe:	4652      	mov	r2, sl
  405800:	465b      	mov	r3, fp
  405802:	d1d1      	bne.n	4057a8 <_dtoa_r+0x2c8>
  405804:	46a0      	mov	r8, r4
  405806:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40580a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40580c:	4606      	mov	r6, r0
  40580e:	460f      	mov	r7, r1
  405810:	4632      	mov	r2, r6
  405812:	463b      	mov	r3, r7
  405814:	4630      	mov	r0, r6
  405816:	4639      	mov	r1, r7
  405818:	f002 fb9e 	bl	407f58 <__adddf3>
  40581c:	4606      	mov	r6, r0
  40581e:	460f      	mov	r7, r1
  405820:	4602      	mov	r2, r0
  405822:	460b      	mov	r3, r1
  405824:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405828:	f002 ffba 	bl	4087a0 <__aeabi_dcmplt>
  40582c:	b948      	cbnz	r0, 405842 <_dtoa_r+0x362>
  40582e:	4632      	mov	r2, r6
  405830:	463b      	mov	r3, r7
  405832:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405836:	f002 ffa9 	bl	40878c <__aeabi_dcmpeq>
  40583a:	b1a8      	cbz	r0, 405868 <_dtoa_r+0x388>
  40583c:	f018 0f01 	tst.w	r8, #1
  405840:	d012      	beq.n	405868 <_dtoa_r+0x388>
  405842:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405846:	9a04      	ldr	r2, [sp, #16]
  405848:	1e6b      	subs	r3, r5, #1
  40584a:	e004      	b.n	405856 <_dtoa_r+0x376>
  40584c:	429a      	cmp	r2, r3
  40584e:	f000 8401 	beq.w	406054 <_dtoa_r+0xb74>
  405852:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  405856:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40585a:	f103 0501 	add.w	r5, r3, #1
  40585e:	d0f5      	beq.n	40584c <_dtoa_r+0x36c>
  405860:	f108 0801 	add.w	r8, r8, #1
  405864:	f883 8000 	strb.w	r8, [r3]
  405868:	4649      	mov	r1, r9
  40586a:	4620      	mov	r0, r4
  40586c:	f001 fc34 	bl	4070d8 <_Bfree>
  405870:	2200      	movs	r2, #0
  405872:	9b02      	ldr	r3, [sp, #8]
  405874:	702a      	strb	r2, [r5, #0]
  405876:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405878:	3301      	adds	r3, #1
  40587a:	6013      	str	r3, [r2, #0]
  40587c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40587e:	2b00      	cmp	r3, #0
  405880:	f000 839e 	beq.w	405fc0 <_dtoa_r+0xae0>
  405884:	9804      	ldr	r0, [sp, #16]
  405886:	601d      	str	r5, [r3, #0]
  405888:	b01b      	add	sp, #108	; 0x6c
  40588a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40588e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405890:	2a00      	cmp	r2, #0
  405892:	d03e      	beq.n	405912 <_dtoa_r+0x432>
  405894:	9a24      	ldr	r2, [sp, #144]	; 0x90
  405896:	2a01      	cmp	r2, #1
  405898:	f340 8311 	ble.w	405ebe <_dtoa_r+0x9de>
  40589c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40589e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4058a0:	1e5f      	subs	r7, r3, #1
  4058a2:	42ba      	cmp	r2, r7
  4058a4:	f2c0 838f 	blt.w	405fc6 <_dtoa_r+0xae6>
  4058a8:	1bd7      	subs	r7, r2, r7
  4058aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4058ac:	2b00      	cmp	r3, #0
  4058ae:	f2c0 848b 	blt.w	4061c8 <_dtoa_r+0xce8>
  4058b2:	9d08      	ldr	r5, [sp, #32]
  4058b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4058b6:	9a08      	ldr	r2, [sp, #32]
  4058b8:	441a      	add	r2, r3
  4058ba:	9208      	str	r2, [sp, #32]
  4058bc:	9a06      	ldr	r2, [sp, #24]
  4058be:	2101      	movs	r1, #1
  4058c0:	441a      	add	r2, r3
  4058c2:	4620      	mov	r0, r4
  4058c4:	9206      	str	r2, [sp, #24]
  4058c6:	f001 fca1 	bl	40720c <__i2b>
  4058ca:	4606      	mov	r6, r0
  4058cc:	e024      	b.n	405918 <_dtoa_r+0x438>
  4058ce:	2301      	movs	r3, #1
  4058d0:	930e      	str	r3, [sp, #56]	; 0x38
  4058d2:	e6af      	b.n	405634 <_dtoa_r+0x154>
  4058d4:	9a08      	ldr	r2, [sp, #32]
  4058d6:	9b02      	ldr	r3, [sp, #8]
  4058d8:	1ad2      	subs	r2, r2, r3
  4058da:	425b      	negs	r3, r3
  4058dc:	930c      	str	r3, [sp, #48]	; 0x30
  4058de:	2300      	movs	r3, #0
  4058e0:	9208      	str	r2, [sp, #32]
  4058e2:	930d      	str	r3, [sp, #52]	; 0x34
  4058e4:	e6b8      	b.n	405658 <_dtoa_r+0x178>
  4058e6:	f1c7 0301 	rsb	r3, r7, #1
  4058ea:	9308      	str	r3, [sp, #32]
  4058ec:	2300      	movs	r3, #0
  4058ee:	9306      	str	r3, [sp, #24]
  4058f0:	e6a7      	b.n	405642 <_dtoa_r+0x162>
  4058f2:	9d02      	ldr	r5, [sp, #8]
  4058f4:	4628      	mov	r0, r5
  4058f6:	f002 fc7b 	bl	4081f0 <__aeabi_i2d>
  4058fa:	4602      	mov	r2, r0
  4058fc:	460b      	mov	r3, r1
  4058fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405902:	f002 ff43 	bl	40878c <__aeabi_dcmpeq>
  405906:	2800      	cmp	r0, #0
  405908:	f47f ae80 	bne.w	40560c <_dtoa_r+0x12c>
  40590c:	1e6b      	subs	r3, r5, #1
  40590e:	9302      	str	r3, [sp, #8]
  405910:	e67c      	b.n	40560c <_dtoa_r+0x12c>
  405912:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405914:	9d08      	ldr	r5, [sp, #32]
  405916:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  405918:	2d00      	cmp	r5, #0
  40591a:	dd0c      	ble.n	405936 <_dtoa_r+0x456>
  40591c:	9906      	ldr	r1, [sp, #24]
  40591e:	2900      	cmp	r1, #0
  405920:	460b      	mov	r3, r1
  405922:	dd08      	ble.n	405936 <_dtoa_r+0x456>
  405924:	42a9      	cmp	r1, r5
  405926:	9a08      	ldr	r2, [sp, #32]
  405928:	bfa8      	it	ge
  40592a:	462b      	movge	r3, r5
  40592c:	1ad2      	subs	r2, r2, r3
  40592e:	1aed      	subs	r5, r5, r3
  405930:	1acb      	subs	r3, r1, r3
  405932:	9208      	str	r2, [sp, #32]
  405934:	9306      	str	r3, [sp, #24]
  405936:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405938:	b1d3      	cbz	r3, 405970 <_dtoa_r+0x490>
  40593a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40593c:	2b00      	cmp	r3, #0
  40593e:	f000 82b7 	beq.w	405eb0 <_dtoa_r+0x9d0>
  405942:	2f00      	cmp	r7, #0
  405944:	dd10      	ble.n	405968 <_dtoa_r+0x488>
  405946:	4631      	mov	r1, r6
  405948:	463a      	mov	r2, r7
  40594a:	4620      	mov	r0, r4
  40594c:	f001 fcfa 	bl	407344 <__pow5mult>
  405950:	464a      	mov	r2, r9
  405952:	4601      	mov	r1, r0
  405954:	4606      	mov	r6, r0
  405956:	4620      	mov	r0, r4
  405958:	f001 fc62 	bl	407220 <__multiply>
  40595c:	4649      	mov	r1, r9
  40595e:	4680      	mov	r8, r0
  405960:	4620      	mov	r0, r4
  405962:	f001 fbb9 	bl	4070d8 <_Bfree>
  405966:	46c1      	mov	r9, r8
  405968:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40596a:	1bda      	subs	r2, r3, r7
  40596c:	f040 82a1 	bne.w	405eb2 <_dtoa_r+0x9d2>
  405970:	2101      	movs	r1, #1
  405972:	4620      	mov	r0, r4
  405974:	f001 fc4a 	bl	40720c <__i2b>
  405978:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40597a:	2b00      	cmp	r3, #0
  40597c:	4680      	mov	r8, r0
  40597e:	dd1c      	ble.n	4059ba <_dtoa_r+0x4da>
  405980:	4601      	mov	r1, r0
  405982:	461a      	mov	r2, r3
  405984:	4620      	mov	r0, r4
  405986:	f001 fcdd 	bl	407344 <__pow5mult>
  40598a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40598c:	2b01      	cmp	r3, #1
  40598e:	4680      	mov	r8, r0
  405990:	f340 8254 	ble.w	405e3c <_dtoa_r+0x95c>
  405994:	2300      	movs	r3, #0
  405996:	930c      	str	r3, [sp, #48]	; 0x30
  405998:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40599c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4059a0:	6918      	ldr	r0, [r3, #16]
  4059a2:	f001 fbe3 	bl	40716c <__hi0bits>
  4059a6:	f1c0 0020 	rsb	r0, r0, #32
  4059aa:	e010      	b.n	4059ce <_dtoa_r+0x4ee>
  4059ac:	f1c3 0520 	rsb	r5, r3, #32
  4059b0:	fa0a f005 	lsl.w	r0, sl, r5
  4059b4:	e674      	b.n	4056a0 <_dtoa_r+0x1c0>
  4059b6:	900e      	str	r0, [sp, #56]	; 0x38
  4059b8:	e63c      	b.n	405634 <_dtoa_r+0x154>
  4059ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4059bc:	2b01      	cmp	r3, #1
  4059be:	f340 8287 	ble.w	405ed0 <_dtoa_r+0x9f0>
  4059c2:	2300      	movs	r3, #0
  4059c4:	930c      	str	r3, [sp, #48]	; 0x30
  4059c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4059c8:	2001      	movs	r0, #1
  4059ca:	2b00      	cmp	r3, #0
  4059cc:	d1e4      	bne.n	405998 <_dtoa_r+0x4b8>
  4059ce:	9a06      	ldr	r2, [sp, #24]
  4059d0:	4410      	add	r0, r2
  4059d2:	f010 001f 	ands.w	r0, r0, #31
  4059d6:	f000 80a1 	beq.w	405b1c <_dtoa_r+0x63c>
  4059da:	f1c0 0320 	rsb	r3, r0, #32
  4059de:	2b04      	cmp	r3, #4
  4059e0:	f340 849e 	ble.w	406320 <_dtoa_r+0xe40>
  4059e4:	9b08      	ldr	r3, [sp, #32]
  4059e6:	f1c0 001c 	rsb	r0, r0, #28
  4059ea:	4403      	add	r3, r0
  4059ec:	9308      	str	r3, [sp, #32]
  4059ee:	4613      	mov	r3, r2
  4059f0:	4403      	add	r3, r0
  4059f2:	4405      	add	r5, r0
  4059f4:	9306      	str	r3, [sp, #24]
  4059f6:	9b08      	ldr	r3, [sp, #32]
  4059f8:	2b00      	cmp	r3, #0
  4059fa:	dd05      	ble.n	405a08 <_dtoa_r+0x528>
  4059fc:	4649      	mov	r1, r9
  4059fe:	461a      	mov	r2, r3
  405a00:	4620      	mov	r0, r4
  405a02:	f001 fcef 	bl	4073e4 <__lshift>
  405a06:	4681      	mov	r9, r0
  405a08:	9b06      	ldr	r3, [sp, #24]
  405a0a:	2b00      	cmp	r3, #0
  405a0c:	dd05      	ble.n	405a1a <_dtoa_r+0x53a>
  405a0e:	4641      	mov	r1, r8
  405a10:	461a      	mov	r2, r3
  405a12:	4620      	mov	r0, r4
  405a14:	f001 fce6 	bl	4073e4 <__lshift>
  405a18:	4680      	mov	r8, r0
  405a1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405a1c:	2b00      	cmp	r3, #0
  405a1e:	f040 8086 	bne.w	405b2e <_dtoa_r+0x64e>
  405a22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a24:	2b00      	cmp	r3, #0
  405a26:	f340 8266 	ble.w	405ef6 <_dtoa_r+0xa16>
  405a2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405a2c:	2b00      	cmp	r3, #0
  405a2e:	f000 8098 	beq.w	405b62 <_dtoa_r+0x682>
  405a32:	2d00      	cmp	r5, #0
  405a34:	dd05      	ble.n	405a42 <_dtoa_r+0x562>
  405a36:	4631      	mov	r1, r6
  405a38:	462a      	mov	r2, r5
  405a3a:	4620      	mov	r0, r4
  405a3c:	f001 fcd2 	bl	4073e4 <__lshift>
  405a40:	4606      	mov	r6, r0
  405a42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405a44:	2b00      	cmp	r3, #0
  405a46:	f040 8337 	bne.w	4060b8 <_dtoa_r+0xbd8>
  405a4a:	9606      	str	r6, [sp, #24]
  405a4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a4e:	9a04      	ldr	r2, [sp, #16]
  405a50:	f8dd b018 	ldr.w	fp, [sp, #24]
  405a54:	3b01      	subs	r3, #1
  405a56:	18d3      	adds	r3, r2, r3
  405a58:	930b      	str	r3, [sp, #44]	; 0x2c
  405a5a:	f00a 0301 	and.w	r3, sl, #1
  405a5e:	930c      	str	r3, [sp, #48]	; 0x30
  405a60:	4617      	mov	r7, r2
  405a62:	46c2      	mov	sl, r8
  405a64:	4651      	mov	r1, sl
  405a66:	4648      	mov	r0, r9
  405a68:	f7ff fca4 	bl	4053b4 <quorem>
  405a6c:	4631      	mov	r1, r6
  405a6e:	4605      	mov	r5, r0
  405a70:	4648      	mov	r0, r9
  405a72:	f001 fd09 	bl	407488 <__mcmp>
  405a76:	465a      	mov	r2, fp
  405a78:	900a      	str	r0, [sp, #40]	; 0x28
  405a7a:	4651      	mov	r1, sl
  405a7c:	4620      	mov	r0, r4
  405a7e:	f001 fd1f 	bl	4074c0 <__mdiff>
  405a82:	68c2      	ldr	r2, [r0, #12]
  405a84:	4680      	mov	r8, r0
  405a86:	f105 0330 	add.w	r3, r5, #48	; 0x30
  405a8a:	2a00      	cmp	r2, #0
  405a8c:	f040 822b 	bne.w	405ee6 <_dtoa_r+0xa06>
  405a90:	4601      	mov	r1, r0
  405a92:	4648      	mov	r0, r9
  405a94:	9308      	str	r3, [sp, #32]
  405a96:	f001 fcf7 	bl	407488 <__mcmp>
  405a9a:	4641      	mov	r1, r8
  405a9c:	9006      	str	r0, [sp, #24]
  405a9e:	4620      	mov	r0, r4
  405aa0:	f001 fb1a 	bl	4070d8 <_Bfree>
  405aa4:	9a06      	ldr	r2, [sp, #24]
  405aa6:	9b08      	ldr	r3, [sp, #32]
  405aa8:	b932      	cbnz	r2, 405ab8 <_dtoa_r+0x5d8>
  405aaa:	9924      	ldr	r1, [sp, #144]	; 0x90
  405aac:	b921      	cbnz	r1, 405ab8 <_dtoa_r+0x5d8>
  405aae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405ab0:	2a00      	cmp	r2, #0
  405ab2:	f000 83ef 	beq.w	406294 <_dtoa_r+0xdb4>
  405ab6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  405ab8:	990a      	ldr	r1, [sp, #40]	; 0x28
  405aba:	2900      	cmp	r1, #0
  405abc:	f2c0 829f 	blt.w	405ffe <_dtoa_r+0xb1e>
  405ac0:	d105      	bne.n	405ace <_dtoa_r+0x5ee>
  405ac2:	9924      	ldr	r1, [sp, #144]	; 0x90
  405ac4:	b919      	cbnz	r1, 405ace <_dtoa_r+0x5ee>
  405ac6:	990c      	ldr	r1, [sp, #48]	; 0x30
  405ac8:	2900      	cmp	r1, #0
  405aca:	f000 8298 	beq.w	405ffe <_dtoa_r+0xb1e>
  405ace:	2a00      	cmp	r2, #0
  405ad0:	f300 8306 	bgt.w	4060e0 <_dtoa_r+0xc00>
  405ad4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405ad6:	703b      	strb	r3, [r7, #0]
  405ad8:	f107 0801 	add.w	r8, r7, #1
  405adc:	4297      	cmp	r7, r2
  405ade:	4645      	mov	r5, r8
  405ae0:	f000 830c 	beq.w	4060fc <_dtoa_r+0xc1c>
  405ae4:	4649      	mov	r1, r9
  405ae6:	2300      	movs	r3, #0
  405ae8:	220a      	movs	r2, #10
  405aea:	4620      	mov	r0, r4
  405aec:	f001 fafe 	bl	4070ec <__multadd>
  405af0:	455e      	cmp	r6, fp
  405af2:	4681      	mov	r9, r0
  405af4:	4631      	mov	r1, r6
  405af6:	f04f 0300 	mov.w	r3, #0
  405afa:	f04f 020a 	mov.w	r2, #10
  405afe:	4620      	mov	r0, r4
  405b00:	f000 81eb 	beq.w	405eda <_dtoa_r+0x9fa>
  405b04:	f001 faf2 	bl	4070ec <__multadd>
  405b08:	4659      	mov	r1, fp
  405b0a:	4606      	mov	r6, r0
  405b0c:	2300      	movs	r3, #0
  405b0e:	220a      	movs	r2, #10
  405b10:	4620      	mov	r0, r4
  405b12:	f001 faeb 	bl	4070ec <__multadd>
  405b16:	4647      	mov	r7, r8
  405b18:	4683      	mov	fp, r0
  405b1a:	e7a3      	b.n	405a64 <_dtoa_r+0x584>
  405b1c:	201c      	movs	r0, #28
  405b1e:	9b08      	ldr	r3, [sp, #32]
  405b20:	4403      	add	r3, r0
  405b22:	9308      	str	r3, [sp, #32]
  405b24:	9b06      	ldr	r3, [sp, #24]
  405b26:	4403      	add	r3, r0
  405b28:	4405      	add	r5, r0
  405b2a:	9306      	str	r3, [sp, #24]
  405b2c:	e763      	b.n	4059f6 <_dtoa_r+0x516>
  405b2e:	4641      	mov	r1, r8
  405b30:	4648      	mov	r0, r9
  405b32:	f001 fca9 	bl	407488 <__mcmp>
  405b36:	2800      	cmp	r0, #0
  405b38:	f6bf af73 	bge.w	405a22 <_dtoa_r+0x542>
  405b3c:	9f02      	ldr	r7, [sp, #8]
  405b3e:	4649      	mov	r1, r9
  405b40:	2300      	movs	r3, #0
  405b42:	220a      	movs	r2, #10
  405b44:	4620      	mov	r0, r4
  405b46:	3f01      	subs	r7, #1
  405b48:	9702      	str	r7, [sp, #8]
  405b4a:	f001 facf 	bl	4070ec <__multadd>
  405b4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405b50:	4681      	mov	r9, r0
  405b52:	2b00      	cmp	r3, #0
  405b54:	f040 83b6 	bne.w	4062c4 <_dtoa_r+0xde4>
  405b58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405b5a:	2b00      	cmp	r3, #0
  405b5c:	f340 83bf 	ble.w	4062de <_dtoa_r+0xdfe>
  405b60:	930a      	str	r3, [sp, #40]	; 0x28
  405b62:	f8dd b010 	ldr.w	fp, [sp, #16]
  405b66:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  405b68:	465d      	mov	r5, fp
  405b6a:	e002      	b.n	405b72 <_dtoa_r+0x692>
  405b6c:	f001 fabe 	bl	4070ec <__multadd>
  405b70:	4681      	mov	r9, r0
  405b72:	4641      	mov	r1, r8
  405b74:	4648      	mov	r0, r9
  405b76:	f7ff fc1d 	bl	4053b4 <quorem>
  405b7a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  405b7e:	f805 ab01 	strb.w	sl, [r5], #1
  405b82:	eba5 030b 	sub.w	r3, r5, fp
  405b86:	42bb      	cmp	r3, r7
  405b88:	f04f 020a 	mov.w	r2, #10
  405b8c:	f04f 0300 	mov.w	r3, #0
  405b90:	4649      	mov	r1, r9
  405b92:	4620      	mov	r0, r4
  405b94:	dbea      	blt.n	405b6c <_dtoa_r+0x68c>
  405b96:	9b04      	ldr	r3, [sp, #16]
  405b98:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405b9a:	2a01      	cmp	r2, #1
  405b9c:	bfac      	ite	ge
  405b9e:	189b      	addge	r3, r3, r2
  405ba0:	3301      	addlt	r3, #1
  405ba2:	461d      	mov	r5, r3
  405ba4:	f04f 0b00 	mov.w	fp, #0
  405ba8:	4649      	mov	r1, r9
  405baa:	2201      	movs	r2, #1
  405bac:	4620      	mov	r0, r4
  405bae:	f001 fc19 	bl	4073e4 <__lshift>
  405bb2:	4641      	mov	r1, r8
  405bb4:	4681      	mov	r9, r0
  405bb6:	f001 fc67 	bl	407488 <__mcmp>
  405bba:	2800      	cmp	r0, #0
  405bbc:	f340 823d 	ble.w	40603a <_dtoa_r+0xb5a>
  405bc0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  405bc4:	9904      	ldr	r1, [sp, #16]
  405bc6:	1e6b      	subs	r3, r5, #1
  405bc8:	e004      	b.n	405bd4 <_dtoa_r+0x6f4>
  405bca:	428b      	cmp	r3, r1
  405bcc:	f000 81ae 	beq.w	405f2c <_dtoa_r+0xa4c>
  405bd0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  405bd4:	2a39      	cmp	r2, #57	; 0x39
  405bd6:	f103 0501 	add.w	r5, r3, #1
  405bda:	d0f6      	beq.n	405bca <_dtoa_r+0x6ea>
  405bdc:	3201      	adds	r2, #1
  405bde:	701a      	strb	r2, [r3, #0]
  405be0:	4641      	mov	r1, r8
  405be2:	4620      	mov	r0, r4
  405be4:	f001 fa78 	bl	4070d8 <_Bfree>
  405be8:	2e00      	cmp	r6, #0
  405bea:	f43f ae3d 	beq.w	405868 <_dtoa_r+0x388>
  405bee:	f1bb 0f00 	cmp.w	fp, #0
  405bf2:	d005      	beq.n	405c00 <_dtoa_r+0x720>
  405bf4:	45b3      	cmp	fp, r6
  405bf6:	d003      	beq.n	405c00 <_dtoa_r+0x720>
  405bf8:	4659      	mov	r1, fp
  405bfa:	4620      	mov	r0, r4
  405bfc:	f001 fa6c 	bl	4070d8 <_Bfree>
  405c00:	4631      	mov	r1, r6
  405c02:	4620      	mov	r0, r4
  405c04:	f001 fa68 	bl	4070d8 <_Bfree>
  405c08:	e62e      	b.n	405868 <_dtoa_r+0x388>
  405c0a:	2300      	movs	r3, #0
  405c0c:	930b      	str	r3, [sp, #44]	; 0x2c
  405c0e:	9b02      	ldr	r3, [sp, #8]
  405c10:	9a25      	ldr	r2, [sp, #148]	; 0x94
  405c12:	4413      	add	r3, r2
  405c14:	930f      	str	r3, [sp, #60]	; 0x3c
  405c16:	3301      	adds	r3, #1
  405c18:	2b01      	cmp	r3, #1
  405c1a:	461f      	mov	r7, r3
  405c1c:	461e      	mov	r6, r3
  405c1e:	930a      	str	r3, [sp, #40]	; 0x28
  405c20:	bfb8      	it	lt
  405c22:	2701      	movlt	r7, #1
  405c24:	2100      	movs	r1, #0
  405c26:	2f17      	cmp	r7, #23
  405c28:	6461      	str	r1, [r4, #68]	; 0x44
  405c2a:	d90a      	bls.n	405c42 <_dtoa_r+0x762>
  405c2c:	2201      	movs	r2, #1
  405c2e:	2304      	movs	r3, #4
  405c30:	005b      	lsls	r3, r3, #1
  405c32:	f103 0014 	add.w	r0, r3, #20
  405c36:	4287      	cmp	r7, r0
  405c38:	4611      	mov	r1, r2
  405c3a:	f102 0201 	add.w	r2, r2, #1
  405c3e:	d2f7      	bcs.n	405c30 <_dtoa_r+0x750>
  405c40:	6461      	str	r1, [r4, #68]	; 0x44
  405c42:	4620      	mov	r0, r4
  405c44:	f001 fa22 	bl	40708c <_Balloc>
  405c48:	2e0e      	cmp	r6, #14
  405c4a:	9004      	str	r0, [sp, #16]
  405c4c:	6420      	str	r0, [r4, #64]	; 0x40
  405c4e:	f63f ad41 	bhi.w	4056d4 <_dtoa_r+0x1f4>
  405c52:	2d00      	cmp	r5, #0
  405c54:	f43f ad3e 	beq.w	4056d4 <_dtoa_r+0x1f4>
  405c58:	9902      	ldr	r1, [sp, #8]
  405c5a:	2900      	cmp	r1, #0
  405c5c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  405c60:	f340 8202 	ble.w	406068 <_dtoa_r+0xb88>
  405c64:	4bb8      	ldr	r3, [pc, #736]	; (405f48 <_dtoa_r+0xa68>)
  405c66:	f001 020f 	and.w	r2, r1, #15
  405c6a:	110d      	asrs	r5, r1, #4
  405c6c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405c70:	06e9      	lsls	r1, r5, #27
  405c72:	e9d3 6700 	ldrd	r6, r7, [r3]
  405c76:	f140 81ae 	bpl.w	405fd6 <_dtoa_r+0xaf6>
  405c7a:	4bb4      	ldr	r3, [pc, #720]	; (405f4c <_dtoa_r+0xa6c>)
  405c7c:	4650      	mov	r0, sl
  405c7e:	4659      	mov	r1, fp
  405c80:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  405c84:	f002 fc44 	bl	408510 <__aeabi_ddiv>
  405c88:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  405c8c:	f005 050f 	and.w	r5, r5, #15
  405c90:	f04f 0a03 	mov.w	sl, #3
  405c94:	b18d      	cbz	r5, 405cba <_dtoa_r+0x7da>
  405c96:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 405f4c <_dtoa_r+0xa6c>
  405c9a:	07ea      	lsls	r2, r5, #31
  405c9c:	d509      	bpl.n	405cb2 <_dtoa_r+0x7d2>
  405c9e:	4630      	mov	r0, r6
  405ca0:	4639      	mov	r1, r7
  405ca2:	e9d8 2300 	ldrd	r2, r3, [r8]
  405ca6:	f002 fb09 	bl	4082bc <__aeabi_dmul>
  405caa:	f10a 0a01 	add.w	sl, sl, #1
  405cae:	4606      	mov	r6, r0
  405cb0:	460f      	mov	r7, r1
  405cb2:	106d      	asrs	r5, r5, #1
  405cb4:	f108 0808 	add.w	r8, r8, #8
  405cb8:	d1ef      	bne.n	405c9a <_dtoa_r+0x7ba>
  405cba:	463b      	mov	r3, r7
  405cbc:	4632      	mov	r2, r6
  405cbe:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  405cc2:	f002 fc25 	bl	408510 <__aeabi_ddiv>
  405cc6:	4607      	mov	r7, r0
  405cc8:	4688      	mov	r8, r1
  405cca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405ccc:	b143      	cbz	r3, 405ce0 <_dtoa_r+0x800>
  405cce:	2200      	movs	r2, #0
  405cd0:	4b9f      	ldr	r3, [pc, #636]	; (405f50 <_dtoa_r+0xa70>)
  405cd2:	4638      	mov	r0, r7
  405cd4:	4641      	mov	r1, r8
  405cd6:	f002 fd63 	bl	4087a0 <__aeabi_dcmplt>
  405cda:	2800      	cmp	r0, #0
  405cdc:	f040 8286 	bne.w	4061ec <_dtoa_r+0xd0c>
  405ce0:	4650      	mov	r0, sl
  405ce2:	f002 fa85 	bl	4081f0 <__aeabi_i2d>
  405ce6:	463a      	mov	r2, r7
  405ce8:	4643      	mov	r3, r8
  405cea:	f002 fae7 	bl	4082bc <__aeabi_dmul>
  405cee:	4b99      	ldr	r3, [pc, #612]	; (405f54 <_dtoa_r+0xa74>)
  405cf0:	2200      	movs	r2, #0
  405cf2:	f002 f931 	bl	407f58 <__adddf3>
  405cf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405cf8:	4605      	mov	r5, r0
  405cfa:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405cfe:	2b00      	cmp	r3, #0
  405d00:	f000 813e 	beq.w	405f80 <_dtoa_r+0xaa0>
  405d04:	9b02      	ldr	r3, [sp, #8]
  405d06:	9315      	str	r3, [sp, #84]	; 0x54
  405d08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405d0a:	9312      	str	r3, [sp, #72]	; 0x48
  405d0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405d0e:	2b00      	cmp	r3, #0
  405d10:	f000 81fa 	beq.w	406108 <_dtoa_r+0xc28>
  405d14:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405d16:	4b8c      	ldr	r3, [pc, #560]	; (405f48 <_dtoa_r+0xa68>)
  405d18:	498f      	ldr	r1, [pc, #572]	; (405f58 <_dtoa_r+0xa78>)
  405d1a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405d1e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  405d22:	2000      	movs	r0, #0
  405d24:	f002 fbf4 	bl	408510 <__aeabi_ddiv>
  405d28:	462a      	mov	r2, r5
  405d2a:	4633      	mov	r3, r6
  405d2c:	f002 f912 	bl	407f54 <__aeabi_dsub>
  405d30:	4682      	mov	sl, r0
  405d32:	468b      	mov	fp, r1
  405d34:	4638      	mov	r0, r7
  405d36:	4641      	mov	r1, r8
  405d38:	f002 fd70 	bl	40881c <__aeabi_d2iz>
  405d3c:	4605      	mov	r5, r0
  405d3e:	f002 fa57 	bl	4081f0 <__aeabi_i2d>
  405d42:	4602      	mov	r2, r0
  405d44:	460b      	mov	r3, r1
  405d46:	4638      	mov	r0, r7
  405d48:	4641      	mov	r1, r8
  405d4a:	f002 f903 	bl	407f54 <__aeabi_dsub>
  405d4e:	3530      	adds	r5, #48	; 0x30
  405d50:	fa5f f885 	uxtb.w	r8, r5
  405d54:	9d04      	ldr	r5, [sp, #16]
  405d56:	4606      	mov	r6, r0
  405d58:	460f      	mov	r7, r1
  405d5a:	f885 8000 	strb.w	r8, [r5]
  405d5e:	4602      	mov	r2, r0
  405d60:	460b      	mov	r3, r1
  405d62:	4650      	mov	r0, sl
  405d64:	4659      	mov	r1, fp
  405d66:	3501      	adds	r5, #1
  405d68:	f002 fd38 	bl	4087dc <__aeabi_dcmpgt>
  405d6c:	2800      	cmp	r0, #0
  405d6e:	d154      	bne.n	405e1a <_dtoa_r+0x93a>
  405d70:	4632      	mov	r2, r6
  405d72:	463b      	mov	r3, r7
  405d74:	2000      	movs	r0, #0
  405d76:	4976      	ldr	r1, [pc, #472]	; (405f50 <_dtoa_r+0xa70>)
  405d78:	f002 f8ec 	bl	407f54 <__aeabi_dsub>
  405d7c:	4602      	mov	r2, r0
  405d7e:	460b      	mov	r3, r1
  405d80:	4650      	mov	r0, sl
  405d82:	4659      	mov	r1, fp
  405d84:	f002 fd2a 	bl	4087dc <__aeabi_dcmpgt>
  405d88:	2800      	cmp	r0, #0
  405d8a:	f040 8270 	bne.w	40626e <_dtoa_r+0xd8e>
  405d8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405d90:	2a01      	cmp	r2, #1
  405d92:	f000 8111 	beq.w	405fb8 <_dtoa_r+0xad8>
  405d96:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405d98:	9a04      	ldr	r2, [sp, #16]
  405d9a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405d9e:	4413      	add	r3, r2
  405da0:	4699      	mov	r9, r3
  405da2:	e00d      	b.n	405dc0 <_dtoa_r+0x8e0>
  405da4:	2000      	movs	r0, #0
  405da6:	496a      	ldr	r1, [pc, #424]	; (405f50 <_dtoa_r+0xa70>)
  405da8:	f002 f8d4 	bl	407f54 <__aeabi_dsub>
  405dac:	4652      	mov	r2, sl
  405dae:	465b      	mov	r3, fp
  405db0:	f002 fcf6 	bl	4087a0 <__aeabi_dcmplt>
  405db4:	2800      	cmp	r0, #0
  405db6:	f040 8258 	bne.w	40626a <_dtoa_r+0xd8a>
  405dba:	454d      	cmp	r5, r9
  405dbc:	f000 80fa 	beq.w	405fb4 <_dtoa_r+0xad4>
  405dc0:	4650      	mov	r0, sl
  405dc2:	4659      	mov	r1, fp
  405dc4:	2200      	movs	r2, #0
  405dc6:	4b65      	ldr	r3, [pc, #404]	; (405f5c <_dtoa_r+0xa7c>)
  405dc8:	f002 fa78 	bl	4082bc <__aeabi_dmul>
  405dcc:	2200      	movs	r2, #0
  405dce:	4b63      	ldr	r3, [pc, #396]	; (405f5c <_dtoa_r+0xa7c>)
  405dd0:	4682      	mov	sl, r0
  405dd2:	468b      	mov	fp, r1
  405dd4:	4630      	mov	r0, r6
  405dd6:	4639      	mov	r1, r7
  405dd8:	f002 fa70 	bl	4082bc <__aeabi_dmul>
  405ddc:	460f      	mov	r7, r1
  405dde:	4606      	mov	r6, r0
  405de0:	f002 fd1c 	bl	40881c <__aeabi_d2iz>
  405de4:	4680      	mov	r8, r0
  405de6:	f002 fa03 	bl	4081f0 <__aeabi_i2d>
  405dea:	4602      	mov	r2, r0
  405dec:	460b      	mov	r3, r1
  405dee:	4630      	mov	r0, r6
  405df0:	4639      	mov	r1, r7
  405df2:	f002 f8af 	bl	407f54 <__aeabi_dsub>
  405df6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405dfa:	fa5f f888 	uxtb.w	r8, r8
  405dfe:	4652      	mov	r2, sl
  405e00:	465b      	mov	r3, fp
  405e02:	f805 8b01 	strb.w	r8, [r5], #1
  405e06:	4606      	mov	r6, r0
  405e08:	460f      	mov	r7, r1
  405e0a:	f002 fcc9 	bl	4087a0 <__aeabi_dcmplt>
  405e0e:	4632      	mov	r2, r6
  405e10:	463b      	mov	r3, r7
  405e12:	2800      	cmp	r0, #0
  405e14:	d0c6      	beq.n	405da4 <_dtoa_r+0x8c4>
  405e16:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405e1a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405e1c:	9302      	str	r3, [sp, #8]
  405e1e:	e523      	b.n	405868 <_dtoa_r+0x388>
  405e20:	2300      	movs	r3, #0
  405e22:	930b      	str	r3, [sp, #44]	; 0x2c
  405e24:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405e26:	2b00      	cmp	r3, #0
  405e28:	f340 80dc 	ble.w	405fe4 <_dtoa_r+0xb04>
  405e2c:	461f      	mov	r7, r3
  405e2e:	461e      	mov	r6, r3
  405e30:	930f      	str	r3, [sp, #60]	; 0x3c
  405e32:	930a      	str	r3, [sp, #40]	; 0x28
  405e34:	e6f6      	b.n	405c24 <_dtoa_r+0x744>
  405e36:	2301      	movs	r3, #1
  405e38:	930b      	str	r3, [sp, #44]	; 0x2c
  405e3a:	e7f3      	b.n	405e24 <_dtoa_r+0x944>
  405e3c:	f1ba 0f00 	cmp.w	sl, #0
  405e40:	f47f ada8 	bne.w	405994 <_dtoa_r+0x4b4>
  405e44:	f3cb 0313 	ubfx	r3, fp, #0, #20
  405e48:	2b00      	cmp	r3, #0
  405e4a:	f47f adba 	bne.w	4059c2 <_dtoa_r+0x4e2>
  405e4e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  405e52:	0d3f      	lsrs	r7, r7, #20
  405e54:	053f      	lsls	r7, r7, #20
  405e56:	2f00      	cmp	r7, #0
  405e58:	f000 820d 	beq.w	406276 <_dtoa_r+0xd96>
  405e5c:	9b08      	ldr	r3, [sp, #32]
  405e5e:	3301      	adds	r3, #1
  405e60:	9308      	str	r3, [sp, #32]
  405e62:	9b06      	ldr	r3, [sp, #24]
  405e64:	3301      	adds	r3, #1
  405e66:	9306      	str	r3, [sp, #24]
  405e68:	2301      	movs	r3, #1
  405e6a:	930c      	str	r3, [sp, #48]	; 0x30
  405e6c:	e5ab      	b.n	4059c6 <_dtoa_r+0x4e6>
  405e6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405e70:	2b00      	cmp	r3, #0
  405e72:	f73f ac42 	bgt.w	4056fa <_dtoa_r+0x21a>
  405e76:	f040 8221 	bne.w	4062bc <_dtoa_r+0xddc>
  405e7a:	2200      	movs	r2, #0
  405e7c:	4b38      	ldr	r3, [pc, #224]	; (405f60 <_dtoa_r+0xa80>)
  405e7e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405e82:	f002 fa1b 	bl	4082bc <__aeabi_dmul>
  405e86:	4652      	mov	r2, sl
  405e88:	465b      	mov	r3, fp
  405e8a:	f002 fc9d 	bl	4087c8 <__aeabi_dcmpge>
  405e8e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  405e92:	4646      	mov	r6, r8
  405e94:	2800      	cmp	r0, #0
  405e96:	d041      	beq.n	405f1c <_dtoa_r+0xa3c>
  405e98:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405e9a:	9d04      	ldr	r5, [sp, #16]
  405e9c:	43db      	mvns	r3, r3
  405e9e:	9302      	str	r3, [sp, #8]
  405ea0:	4641      	mov	r1, r8
  405ea2:	4620      	mov	r0, r4
  405ea4:	f001 f918 	bl	4070d8 <_Bfree>
  405ea8:	2e00      	cmp	r6, #0
  405eaa:	f43f acdd 	beq.w	405868 <_dtoa_r+0x388>
  405eae:	e6a7      	b.n	405c00 <_dtoa_r+0x720>
  405eb0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405eb2:	4649      	mov	r1, r9
  405eb4:	4620      	mov	r0, r4
  405eb6:	f001 fa45 	bl	407344 <__pow5mult>
  405eba:	4681      	mov	r9, r0
  405ebc:	e558      	b.n	405970 <_dtoa_r+0x490>
  405ebe:	9a14      	ldr	r2, [sp, #80]	; 0x50
  405ec0:	2a00      	cmp	r2, #0
  405ec2:	f000 8187 	beq.w	4061d4 <_dtoa_r+0xcf4>
  405ec6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  405eca:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405ecc:	9d08      	ldr	r5, [sp, #32]
  405ece:	e4f2      	b.n	4058b6 <_dtoa_r+0x3d6>
  405ed0:	f1ba 0f00 	cmp.w	sl, #0
  405ed4:	f47f ad75 	bne.w	4059c2 <_dtoa_r+0x4e2>
  405ed8:	e7b4      	b.n	405e44 <_dtoa_r+0x964>
  405eda:	f001 f907 	bl	4070ec <__multadd>
  405ede:	4647      	mov	r7, r8
  405ee0:	4606      	mov	r6, r0
  405ee2:	4683      	mov	fp, r0
  405ee4:	e5be      	b.n	405a64 <_dtoa_r+0x584>
  405ee6:	4601      	mov	r1, r0
  405ee8:	4620      	mov	r0, r4
  405eea:	9306      	str	r3, [sp, #24]
  405eec:	f001 f8f4 	bl	4070d8 <_Bfree>
  405ef0:	2201      	movs	r2, #1
  405ef2:	9b06      	ldr	r3, [sp, #24]
  405ef4:	e5e0      	b.n	405ab8 <_dtoa_r+0x5d8>
  405ef6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405ef8:	2b02      	cmp	r3, #2
  405efa:	f77f ad96 	ble.w	405a2a <_dtoa_r+0x54a>
  405efe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405f00:	2b00      	cmp	r3, #0
  405f02:	d1c9      	bne.n	405e98 <_dtoa_r+0x9b8>
  405f04:	4641      	mov	r1, r8
  405f06:	2205      	movs	r2, #5
  405f08:	4620      	mov	r0, r4
  405f0a:	f001 f8ef 	bl	4070ec <__multadd>
  405f0e:	4601      	mov	r1, r0
  405f10:	4680      	mov	r8, r0
  405f12:	4648      	mov	r0, r9
  405f14:	f001 fab8 	bl	407488 <__mcmp>
  405f18:	2800      	cmp	r0, #0
  405f1a:	ddbd      	ble.n	405e98 <_dtoa_r+0x9b8>
  405f1c:	9a02      	ldr	r2, [sp, #8]
  405f1e:	9904      	ldr	r1, [sp, #16]
  405f20:	2331      	movs	r3, #49	; 0x31
  405f22:	3201      	adds	r2, #1
  405f24:	9202      	str	r2, [sp, #8]
  405f26:	700b      	strb	r3, [r1, #0]
  405f28:	1c4d      	adds	r5, r1, #1
  405f2a:	e7b9      	b.n	405ea0 <_dtoa_r+0x9c0>
  405f2c:	9a02      	ldr	r2, [sp, #8]
  405f2e:	3201      	adds	r2, #1
  405f30:	9202      	str	r2, [sp, #8]
  405f32:	9a04      	ldr	r2, [sp, #16]
  405f34:	2331      	movs	r3, #49	; 0x31
  405f36:	7013      	strb	r3, [r2, #0]
  405f38:	e652      	b.n	405be0 <_dtoa_r+0x700>
  405f3a:	2301      	movs	r3, #1
  405f3c:	930b      	str	r3, [sp, #44]	; 0x2c
  405f3e:	e666      	b.n	405c0e <_dtoa_r+0x72e>
  405f40:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  405f44:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405f46:	e48f      	b.n	405868 <_dtoa_r+0x388>
  405f48:	004109d0 	.word	0x004109d0
  405f4c:	004109a8 	.word	0x004109a8
  405f50:	3ff00000 	.word	0x3ff00000
  405f54:	401c0000 	.word	0x401c0000
  405f58:	3fe00000 	.word	0x3fe00000
  405f5c:	40240000 	.word	0x40240000
  405f60:	40140000 	.word	0x40140000
  405f64:	4650      	mov	r0, sl
  405f66:	f002 f943 	bl	4081f0 <__aeabi_i2d>
  405f6a:	463a      	mov	r2, r7
  405f6c:	4643      	mov	r3, r8
  405f6e:	f002 f9a5 	bl	4082bc <__aeabi_dmul>
  405f72:	2200      	movs	r2, #0
  405f74:	4bc1      	ldr	r3, [pc, #772]	; (40627c <_dtoa_r+0xd9c>)
  405f76:	f001 ffef 	bl	407f58 <__adddf3>
  405f7a:	4605      	mov	r5, r0
  405f7c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405f80:	4641      	mov	r1, r8
  405f82:	2200      	movs	r2, #0
  405f84:	4bbe      	ldr	r3, [pc, #760]	; (406280 <_dtoa_r+0xda0>)
  405f86:	4638      	mov	r0, r7
  405f88:	f001 ffe4 	bl	407f54 <__aeabi_dsub>
  405f8c:	462a      	mov	r2, r5
  405f8e:	4633      	mov	r3, r6
  405f90:	4682      	mov	sl, r0
  405f92:	468b      	mov	fp, r1
  405f94:	f002 fc22 	bl	4087dc <__aeabi_dcmpgt>
  405f98:	4680      	mov	r8, r0
  405f9a:	2800      	cmp	r0, #0
  405f9c:	f040 8110 	bne.w	4061c0 <_dtoa_r+0xce0>
  405fa0:	462a      	mov	r2, r5
  405fa2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  405fa6:	4650      	mov	r0, sl
  405fa8:	4659      	mov	r1, fp
  405faa:	f002 fbf9 	bl	4087a0 <__aeabi_dcmplt>
  405fae:	b118      	cbz	r0, 405fb8 <_dtoa_r+0xad8>
  405fb0:	4646      	mov	r6, r8
  405fb2:	e771      	b.n	405e98 <_dtoa_r+0x9b8>
  405fb4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405fb8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  405fbc:	f7ff bb8a 	b.w	4056d4 <_dtoa_r+0x1f4>
  405fc0:	9804      	ldr	r0, [sp, #16]
  405fc2:	f7ff babb 	b.w	40553c <_dtoa_r+0x5c>
  405fc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405fc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  405fca:	970c      	str	r7, [sp, #48]	; 0x30
  405fcc:	1afb      	subs	r3, r7, r3
  405fce:	441a      	add	r2, r3
  405fd0:	920d      	str	r2, [sp, #52]	; 0x34
  405fd2:	2700      	movs	r7, #0
  405fd4:	e469      	b.n	4058aa <_dtoa_r+0x3ca>
  405fd6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  405fda:	f04f 0a02 	mov.w	sl, #2
  405fde:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  405fe2:	e657      	b.n	405c94 <_dtoa_r+0x7b4>
  405fe4:	2100      	movs	r1, #0
  405fe6:	2301      	movs	r3, #1
  405fe8:	6461      	str	r1, [r4, #68]	; 0x44
  405fea:	4620      	mov	r0, r4
  405fec:	9325      	str	r3, [sp, #148]	; 0x94
  405fee:	f001 f84d 	bl	40708c <_Balloc>
  405ff2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405ff4:	9004      	str	r0, [sp, #16]
  405ff6:	6420      	str	r0, [r4, #64]	; 0x40
  405ff8:	930a      	str	r3, [sp, #40]	; 0x28
  405ffa:	930f      	str	r3, [sp, #60]	; 0x3c
  405ffc:	e629      	b.n	405c52 <_dtoa_r+0x772>
  405ffe:	2a00      	cmp	r2, #0
  406000:	46d0      	mov	r8, sl
  406002:	f8cd b018 	str.w	fp, [sp, #24]
  406006:	469a      	mov	sl, r3
  406008:	dd11      	ble.n	40602e <_dtoa_r+0xb4e>
  40600a:	4649      	mov	r1, r9
  40600c:	2201      	movs	r2, #1
  40600e:	4620      	mov	r0, r4
  406010:	f001 f9e8 	bl	4073e4 <__lshift>
  406014:	4641      	mov	r1, r8
  406016:	4681      	mov	r9, r0
  406018:	f001 fa36 	bl	407488 <__mcmp>
  40601c:	2800      	cmp	r0, #0
  40601e:	f340 8146 	ble.w	4062ae <_dtoa_r+0xdce>
  406022:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  406026:	f000 8106 	beq.w	406236 <_dtoa_r+0xd56>
  40602a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40602e:	46b3      	mov	fp, r6
  406030:	f887 a000 	strb.w	sl, [r7]
  406034:	1c7d      	adds	r5, r7, #1
  406036:	9e06      	ldr	r6, [sp, #24]
  406038:	e5d2      	b.n	405be0 <_dtoa_r+0x700>
  40603a:	d104      	bne.n	406046 <_dtoa_r+0xb66>
  40603c:	f01a 0f01 	tst.w	sl, #1
  406040:	d001      	beq.n	406046 <_dtoa_r+0xb66>
  406042:	e5bd      	b.n	405bc0 <_dtoa_r+0x6e0>
  406044:	4615      	mov	r5, r2
  406046:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40604a:	2b30      	cmp	r3, #48	; 0x30
  40604c:	f105 32ff 	add.w	r2, r5, #4294967295
  406050:	d0f8      	beq.n	406044 <_dtoa_r+0xb64>
  406052:	e5c5      	b.n	405be0 <_dtoa_r+0x700>
  406054:	9904      	ldr	r1, [sp, #16]
  406056:	2230      	movs	r2, #48	; 0x30
  406058:	700a      	strb	r2, [r1, #0]
  40605a:	9a02      	ldr	r2, [sp, #8]
  40605c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  406060:	3201      	adds	r2, #1
  406062:	9202      	str	r2, [sp, #8]
  406064:	f7ff bbfc 	b.w	405860 <_dtoa_r+0x380>
  406068:	f000 80bb 	beq.w	4061e2 <_dtoa_r+0xd02>
  40606c:	9b02      	ldr	r3, [sp, #8]
  40606e:	425d      	negs	r5, r3
  406070:	4b84      	ldr	r3, [pc, #528]	; (406284 <_dtoa_r+0xda4>)
  406072:	f005 020f 	and.w	r2, r5, #15
  406076:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40607a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40607e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  406082:	f002 f91b 	bl	4082bc <__aeabi_dmul>
  406086:	112d      	asrs	r5, r5, #4
  406088:	4607      	mov	r7, r0
  40608a:	4688      	mov	r8, r1
  40608c:	f000 812c 	beq.w	4062e8 <_dtoa_r+0xe08>
  406090:	4e7d      	ldr	r6, [pc, #500]	; (406288 <_dtoa_r+0xda8>)
  406092:	f04f 0a02 	mov.w	sl, #2
  406096:	07eb      	lsls	r3, r5, #31
  406098:	d509      	bpl.n	4060ae <_dtoa_r+0xbce>
  40609a:	4638      	mov	r0, r7
  40609c:	4641      	mov	r1, r8
  40609e:	e9d6 2300 	ldrd	r2, r3, [r6]
  4060a2:	f002 f90b 	bl	4082bc <__aeabi_dmul>
  4060a6:	f10a 0a01 	add.w	sl, sl, #1
  4060aa:	4607      	mov	r7, r0
  4060ac:	4688      	mov	r8, r1
  4060ae:	106d      	asrs	r5, r5, #1
  4060b0:	f106 0608 	add.w	r6, r6, #8
  4060b4:	d1ef      	bne.n	406096 <_dtoa_r+0xbb6>
  4060b6:	e608      	b.n	405cca <_dtoa_r+0x7ea>
  4060b8:	6871      	ldr	r1, [r6, #4]
  4060ba:	4620      	mov	r0, r4
  4060bc:	f000 ffe6 	bl	40708c <_Balloc>
  4060c0:	6933      	ldr	r3, [r6, #16]
  4060c2:	3302      	adds	r3, #2
  4060c4:	009a      	lsls	r2, r3, #2
  4060c6:	4605      	mov	r5, r0
  4060c8:	f106 010c 	add.w	r1, r6, #12
  4060cc:	300c      	adds	r0, #12
  4060ce:	f000 fedf 	bl	406e90 <memcpy>
  4060d2:	4629      	mov	r1, r5
  4060d4:	2201      	movs	r2, #1
  4060d6:	4620      	mov	r0, r4
  4060d8:	f001 f984 	bl	4073e4 <__lshift>
  4060dc:	9006      	str	r0, [sp, #24]
  4060de:	e4b5      	b.n	405a4c <_dtoa_r+0x56c>
  4060e0:	2b39      	cmp	r3, #57	; 0x39
  4060e2:	f8cd b018 	str.w	fp, [sp, #24]
  4060e6:	46d0      	mov	r8, sl
  4060e8:	f000 80a5 	beq.w	406236 <_dtoa_r+0xd56>
  4060ec:	f103 0a01 	add.w	sl, r3, #1
  4060f0:	46b3      	mov	fp, r6
  4060f2:	f887 a000 	strb.w	sl, [r7]
  4060f6:	1c7d      	adds	r5, r7, #1
  4060f8:	9e06      	ldr	r6, [sp, #24]
  4060fa:	e571      	b.n	405be0 <_dtoa_r+0x700>
  4060fc:	465a      	mov	r2, fp
  4060fe:	46d0      	mov	r8, sl
  406100:	46b3      	mov	fp, r6
  406102:	469a      	mov	sl, r3
  406104:	4616      	mov	r6, r2
  406106:	e54f      	b.n	405ba8 <_dtoa_r+0x6c8>
  406108:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40610a:	495e      	ldr	r1, [pc, #376]	; (406284 <_dtoa_r+0xda4>)
  40610c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  406110:	462a      	mov	r2, r5
  406112:	4633      	mov	r3, r6
  406114:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  406118:	f002 f8d0 	bl	4082bc <__aeabi_dmul>
  40611c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  406120:	4638      	mov	r0, r7
  406122:	4641      	mov	r1, r8
  406124:	f002 fb7a 	bl	40881c <__aeabi_d2iz>
  406128:	4605      	mov	r5, r0
  40612a:	f002 f861 	bl	4081f0 <__aeabi_i2d>
  40612e:	460b      	mov	r3, r1
  406130:	4602      	mov	r2, r0
  406132:	4641      	mov	r1, r8
  406134:	4638      	mov	r0, r7
  406136:	f001 ff0d 	bl	407f54 <__aeabi_dsub>
  40613a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40613c:	460f      	mov	r7, r1
  40613e:	9904      	ldr	r1, [sp, #16]
  406140:	3530      	adds	r5, #48	; 0x30
  406142:	2b01      	cmp	r3, #1
  406144:	700d      	strb	r5, [r1, #0]
  406146:	4606      	mov	r6, r0
  406148:	f101 0501 	add.w	r5, r1, #1
  40614c:	d026      	beq.n	40619c <_dtoa_r+0xcbc>
  40614e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406150:	9a04      	ldr	r2, [sp, #16]
  406152:	f8df b13c 	ldr.w	fp, [pc, #316]	; 406290 <_dtoa_r+0xdb0>
  406156:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40615a:	4413      	add	r3, r2
  40615c:	f04f 0a00 	mov.w	sl, #0
  406160:	4699      	mov	r9, r3
  406162:	4652      	mov	r2, sl
  406164:	465b      	mov	r3, fp
  406166:	4630      	mov	r0, r6
  406168:	4639      	mov	r1, r7
  40616a:	f002 f8a7 	bl	4082bc <__aeabi_dmul>
  40616e:	460f      	mov	r7, r1
  406170:	4606      	mov	r6, r0
  406172:	f002 fb53 	bl	40881c <__aeabi_d2iz>
  406176:	4680      	mov	r8, r0
  406178:	f002 f83a 	bl	4081f0 <__aeabi_i2d>
  40617c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  406180:	4602      	mov	r2, r0
  406182:	460b      	mov	r3, r1
  406184:	4630      	mov	r0, r6
  406186:	4639      	mov	r1, r7
  406188:	f001 fee4 	bl	407f54 <__aeabi_dsub>
  40618c:	f805 8b01 	strb.w	r8, [r5], #1
  406190:	454d      	cmp	r5, r9
  406192:	4606      	mov	r6, r0
  406194:	460f      	mov	r7, r1
  406196:	d1e4      	bne.n	406162 <_dtoa_r+0xc82>
  406198:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40619c:	4b3b      	ldr	r3, [pc, #236]	; (40628c <_dtoa_r+0xdac>)
  40619e:	2200      	movs	r2, #0
  4061a0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4061a4:	f001 fed8 	bl	407f58 <__adddf3>
  4061a8:	4632      	mov	r2, r6
  4061aa:	463b      	mov	r3, r7
  4061ac:	f002 faf8 	bl	4087a0 <__aeabi_dcmplt>
  4061b0:	2800      	cmp	r0, #0
  4061b2:	d046      	beq.n	406242 <_dtoa_r+0xd62>
  4061b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4061b6:	9302      	str	r3, [sp, #8]
  4061b8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4061bc:	f7ff bb43 	b.w	405846 <_dtoa_r+0x366>
  4061c0:	f04f 0800 	mov.w	r8, #0
  4061c4:	4646      	mov	r6, r8
  4061c6:	e6a9      	b.n	405f1c <_dtoa_r+0xa3c>
  4061c8:	9b08      	ldr	r3, [sp, #32]
  4061ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4061cc:	1a9d      	subs	r5, r3, r2
  4061ce:	2300      	movs	r3, #0
  4061d0:	f7ff bb71 	b.w	4058b6 <_dtoa_r+0x3d6>
  4061d4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4061d6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4061d8:	9d08      	ldr	r5, [sp, #32]
  4061da:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4061de:	f7ff bb6a 	b.w	4058b6 <_dtoa_r+0x3d6>
  4061e2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  4061e6:	f04f 0a02 	mov.w	sl, #2
  4061ea:	e56e      	b.n	405cca <_dtoa_r+0x7ea>
  4061ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4061ee:	2b00      	cmp	r3, #0
  4061f0:	f43f aeb8 	beq.w	405f64 <_dtoa_r+0xa84>
  4061f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4061f6:	2b00      	cmp	r3, #0
  4061f8:	f77f aede 	ble.w	405fb8 <_dtoa_r+0xad8>
  4061fc:	2200      	movs	r2, #0
  4061fe:	4b24      	ldr	r3, [pc, #144]	; (406290 <_dtoa_r+0xdb0>)
  406200:	4638      	mov	r0, r7
  406202:	4641      	mov	r1, r8
  406204:	f002 f85a 	bl	4082bc <__aeabi_dmul>
  406208:	4607      	mov	r7, r0
  40620a:	4688      	mov	r8, r1
  40620c:	f10a 0001 	add.w	r0, sl, #1
  406210:	f001 ffee 	bl	4081f0 <__aeabi_i2d>
  406214:	463a      	mov	r2, r7
  406216:	4643      	mov	r3, r8
  406218:	f002 f850 	bl	4082bc <__aeabi_dmul>
  40621c:	2200      	movs	r2, #0
  40621e:	4b17      	ldr	r3, [pc, #92]	; (40627c <_dtoa_r+0xd9c>)
  406220:	f001 fe9a 	bl	407f58 <__adddf3>
  406224:	9a02      	ldr	r2, [sp, #8]
  406226:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406228:	9312      	str	r3, [sp, #72]	; 0x48
  40622a:	3a01      	subs	r2, #1
  40622c:	4605      	mov	r5, r0
  40622e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  406232:	9215      	str	r2, [sp, #84]	; 0x54
  406234:	e56a      	b.n	405d0c <_dtoa_r+0x82c>
  406236:	2239      	movs	r2, #57	; 0x39
  406238:	46b3      	mov	fp, r6
  40623a:	703a      	strb	r2, [r7, #0]
  40623c:	9e06      	ldr	r6, [sp, #24]
  40623e:	1c7d      	adds	r5, r7, #1
  406240:	e4c0      	b.n	405bc4 <_dtoa_r+0x6e4>
  406242:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  406246:	2000      	movs	r0, #0
  406248:	4910      	ldr	r1, [pc, #64]	; (40628c <_dtoa_r+0xdac>)
  40624a:	f001 fe83 	bl	407f54 <__aeabi_dsub>
  40624e:	4632      	mov	r2, r6
  406250:	463b      	mov	r3, r7
  406252:	f002 fac3 	bl	4087dc <__aeabi_dcmpgt>
  406256:	b908      	cbnz	r0, 40625c <_dtoa_r+0xd7c>
  406258:	e6ae      	b.n	405fb8 <_dtoa_r+0xad8>
  40625a:	4615      	mov	r5, r2
  40625c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  406260:	2b30      	cmp	r3, #48	; 0x30
  406262:	f105 32ff 	add.w	r2, r5, #4294967295
  406266:	d0f8      	beq.n	40625a <_dtoa_r+0xd7a>
  406268:	e5d7      	b.n	405e1a <_dtoa_r+0x93a>
  40626a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40626e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406270:	9302      	str	r3, [sp, #8]
  406272:	f7ff bae8 	b.w	405846 <_dtoa_r+0x366>
  406276:	970c      	str	r7, [sp, #48]	; 0x30
  406278:	f7ff bba5 	b.w	4059c6 <_dtoa_r+0x4e6>
  40627c:	401c0000 	.word	0x401c0000
  406280:	40140000 	.word	0x40140000
  406284:	004109d0 	.word	0x004109d0
  406288:	004109a8 	.word	0x004109a8
  40628c:	3fe00000 	.word	0x3fe00000
  406290:	40240000 	.word	0x40240000
  406294:	2b39      	cmp	r3, #57	; 0x39
  406296:	f8cd b018 	str.w	fp, [sp, #24]
  40629a:	46d0      	mov	r8, sl
  40629c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4062a0:	469a      	mov	sl, r3
  4062a2:	d0c8      	beq.n	406236 <_dtoa_r+0xd56>
  4062a4:	f1bb 0f00 	cmp.w	fp, #0
  4062a8:	f73f aebf 	bgt.w	40602a <_dtoa_r+0xb4a>
  4062ac:	e6bf      	b.n	40602e <_dtoa_r+0xb4e>
  4062ae:	f47f aebe 	bne.w	40602e <_dtoa_r+0xb4e>
  4062b2:	f01a 0f01 	tst.w	sl, #1
  4062b6:	f43f aeba 	beq.w	40602e <_dtoa_r+0xb4e>
  4062ba:	e6b2      	b.n	406022 <_dtoa_r+0xb42>
  4062bc:	f04f 0800 	mov.w	r8, #0
  4062c0:	4646      	mov	r6, r8
  4062c2:	e5e9      	b.n	405e98 <_dtoa_r+0x9b8>
  4062c4:	4631      	mov	r1, r6
  4062c6:	2300      	movs	r3, #0
  4062c8:	220a      	movs	r2, #10
  4062ca:	4620      	mov	r0, r4
  4062cc:	f000 ff0e 	bl	4070ec <__multadd>
  4062d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4062d2:	2b00      	cmp	r3, #0
  4062d4:	4606      	mov	r6, r0
  4062d6:	dd0a      	ble.n	4062ee <_dtoa_r+0xe0e>
  4062d8:	930a      	str	r3, [sp, #40]	; 0x28
  4062da:	f7ff bbaa 	b.w	405a32 <_dtoa_r+0x552>
  4062de:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4062e0:	2b02      	cmp	r3, #2
  4062e2:	dc23      	bgt.n	40632c <_dtoa_r+0xe4c>
  4062e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4062e6:	e43b      	b.n	405b60 <_dtoa_r+0x680>
  4062e8:	f04f 0a02 	mov.w	sl, #2
  4062ec:	e4ed      	b.n	405cca <_dtoa_r+0x7ea>
  4062ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4062f0:	2b02      	cmp	r3, #2
  4062f2:	dc1b      	bgt.n	40632c <_dtoa_r+0xe4c>
  4062f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4062f6:	e7ef      	b.n	4062d8 <_dtoa_r+0xdf8>
  4062f8:	2500      	movs	r5, #0
  4062fa:	6465      	str	r5, [r4, #68]	; 0x44
  4062fc:	4629      	mov	r1, r5
  4062fe:	4620      	mov	r0, r4
  406300:	f000 fec4 	bl	40708c <_Balloc>
  406304:	f04f 33ff 	mov.w	r3, #4294967295
  406308:	930a      	str	r3, [sp, #40]	; 0x28
  40630a:	930f      	str	r3, [sp, #60]	; 0x3c
  40630c:	2301      	movs	r3, #1
  40630e:	9004      	str	r0, [sp, #16]
  406310:	9525      	str	r5, [sp, #148]	; 0x94
  406312:	6420      	str	r0, [r4, #64]	; 0x40
  406314:	930b      	str	r3, [sp, #44]	; 0x2c
  406316:	f7ff b9dd 	b.w	4056d4 <_dtoa_r+0x1f4>
  40631a:	2501      	movs	r5, #1
  40631c:	f7ff b9a5 	b.w	40566a <_dtoa_r+0x18a>
  406320:	f43f ab69 	beq.w	4059f6 <_dtoa_r+0x516>
  406324:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  406328:	f7ff bbf9 	b.w	405b1e <_dtoa_r+0x63e>
  40632c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40632e:	930a      	str	r3, [sp, #40]	; 0x28
  406330:	e5e5      	b.n	405efe <_dtoa_r+0xa1e>
  406332:	bf00      	nop

00406334 <__sflush_r>:
  406334:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  406338:	b29a      	uxth	r2, r3
  40633a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40633e:	460d      	mov	r5, r1
  406340:	0711      	lsls	r1, r2, #28
  406342:	4680      	mov	r8, r0
  406344:	d43a      	bmi.n	4063bc <__sflush_r+0x88>
  406346:	686a      	ldr	r2, [r5, #4]
  406348:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40634c:	2a00      	cmp	r2, #0
  40634e:	81ab      	strh	r3, [r5, #12]
  406350:	dd6f      	ble.n	406432 <__sflush_r+0xfe>
  406352:	6aac      	ldr	r4, [r5, #40]	; 0x28
  406354:	2c00      	cmp	r4, #0
  406356:	d049      	beq.n	4063ec <__sflush_r+0xb8>
  406358:	2200      	movs	r2, #0
  40635a:	b29b      	uxth	r3, r3
  40635c:	f8d8 6000 	ldr.w	r6, [r8]
  406360:	f8c8 2000 	str.w	r2, [r8]
  406364:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  406368:	d067      	beq.n	40643a <__sflush_r+0x106>
  40636a:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  40636c:	075f      	lsls	r7, r3, #29
  40636e:	d505      	bpl.n	40637c <__sflush_r+0x48>
  406370:	6869      	ldr	r1, [r5, #4]
  406372:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  406374:	1a52      	subs	r2, r2, r1
  406376:	b10b      	cbz	r3, 40637c <__sflush_r+0x48>
  406378:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  40637a:	1ad2      	subs	r2, r2, r3
  40637c:	2300      	movs	r3, #0
  40637e:	69e9      	ldr	r1, [r5, #28]
  406380:	4640      	mov	r0, r8
  406382:	47a0      	blx	r4
  406384:	1c44      	adds	r4, r0, #1
  406386:	d03c      	beq.n	406402 <__sflush_r+0xce>
  406388:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  40638c:	692a      	ldr	r2, [r5, #16]
  40638e:	602a      	str	r2, [r5, #0]
  406390:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  406394:	2200      	movs	r2, #0
  406396:	81ab      	strh	r3, [r5, #12]
  406398:	04db      	lsls	r3, r3, #19
  40639a:	606a      	str	r2, [r5, #4]
  40639c:	d447      	bmi.n	40642e <__sflush_r+0xfa>
  40639e:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4063a0:	f8c8 6000 	str.w	r6, [r8]
  4063a4:	b311      	cbz	r1, 4063ec <__sflush_r+0xb8>
  4063a6:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4063aa:	4299      	cmp	r1, r3
  4063ac:	d002      	beq.n	4063b4 <__sflush_r+0x80>
  4063ae:	4640      	mov	r0, r8
  4063b0:	f000 f9de 	bl	406770 <_free_r>
  4063b4:	2000      	movs	r0, #0
  4063b6:	6328      	str	r0, [r5, #48]	; 0x30
  4063b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4063bc:	692e      	ldr	r6, [r5, #16]
  4063be:	b1ae      	cbz	r6, 4063ec <__sflush_r+0xb8>
  4063c0:	682c      	ldr	r4, [r5, #0]
  4063c2:	602e      	str	r6, [r5, #0]
  4063c4:	0791      	lsls	r1, r2, #30
  4063c6:	bf0c      	ite	eq
  4063c8:	696b      	ldreq	r3, [r5, #20]
  4063ca:	2300      	movne	r3, #0
  4063cc:	1ba4      	subs	r4, r4, r6
  4063ce:	60ab      	str	r3, [r5, #8]
  4063d0:	e00a      	b.n	4063e8 <__sflush_r+0xb4>
  4063d2:	4623      	mov	r3, r4
  4063d4:	4632      	mov	r2, r6
  4063d6:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  4063d8:	69e9      	ldr	r1, [r5, #28]
  4063da:	4640      	mov	r0, r8
  4063dc:	47b8      	blx	r7
  4063de:	2800      	cmp	r0, #0
  4063e0:	eba4 0400 	sub.w	r4, r4, r0
  4063e4:	4406      	add	r6, r0
  4063e6:	dd04      	ble.n	4063f2 <__sflush_r+0xbe>
  4063e8:	2c00      	cmp	r4, #0
  4063ea:	dcf2      	bgt.n	4063d2 <__sflush_r+0x9e>
  4063ec:	2000      	movs	r0, #0
  4063ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4063f2:	89ab      	ldrh	r3, [r5, #12]
  4063f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4063f8:	81ab      	strh	r3, [r5, #12]
  4063fa:	f04f 30ff 	mov.w	r0, #4294967295
  4063fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406402:	f8d8 4000 	ldr.w	r4, [r8]
  406406:	2c1d      	cmp	r4, #29
  406408:	d8f3      	bhi.n	4063f2 <__sflush_r+0xbe>
  40640a:	4b19      	ldr	r3, [pc, #100]	; (406470 <__sflush_r+0x13c>)
  40640c:	40e3      	lsrs	r3, r4
  40640e:	43db      	mvns	r3, r3
  406410:	f013 0301 	ands.w	r3, r3, #1
  406414:	d1ed      	bne.n	4063f2 <__sflush_r+0xbe>
  406416:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40641a:	606b      	str	r3, [r5, #4]
  40641c:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  406420:	6929      	ldr	r1, [r5, #16]
  406422:	81ab      	strh	r3, [r5, #12]
  406424:	04da      	lsls	r2, r3, #19
  406426:	6029      	str	r1, [r5, #0]
  406428:	d5b9      	bpl.n	40639e <__sflush_r+0x6a>
  40642a:	2c00      	cmp	r4, #0
  40642c:	d1b7      	bne.n	40639e <__sflush_r+0x6a>
  40642e:	6528      	str	r0, [r5, #80]	; 0x50
  406430:	e7b5      	b.n	40639e <__sflush_r+0x6a>
  406432:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  406434:	2a00      	cmp	r2, #0
  406436:	dc8c      	bgt.n	406352 <__sflush_r+0x1e>
  406438:	e7d8      	b.n	4063ec <__sflush_r+0xb8>
  40643a:	2301      	movs	r3, #1
  40643c:	69e9      	ldr	r1, [r5, #28]
  40643e:	4640      	mov	r0, r8
  406440:	47a0      	blx	r4
  406442:	1c43      	adds	r3, r0, #1
  406444:	4602      	mov	r2, r0
  406446:	d002      	beq.n	40644e <__sflush_r+0x11a>
  406448:	89ab      	ldrh	r3, [r5, #12]
  40644a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40644c:	e78e      	b.n	40636c <__sflush_r+0x38>
  40644e:	f8d8 3000 	ldr.w	r3, [r8]
  406452:	2b00      	cmp	r3, #0
  406454:	d0f8      	beq.n	406448 <__sflush_r+0x114>
  406456:	2b1d      	cmp	r3, #29
  406458:	d001      	beq.n	40645e <__sflush_r+0x12a>
  40645a:	2b16      	cmp	r3, #22
  40645c:	d102      	bne.n	406464 <__sflush_r+0x130>
  40645e:	f8c8 6000 	str.w	r6, [r8]
  406462:	e7c3      	b.n	4063ec <__sflush_r+0xb8>
  406464:	89ab      	ldrh	r3, [r5, #12]
  406466:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40646a:	81ab      	strh	r3, [r5, #12]
  40646c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  406470:	20400001 	.word	0x20400001

00406474 <_fflush_r>:
  406474:	b538      	push	{r3, r4, r5, lr}
  406476:	460d      	mov	r5, r1
  406478:	4604      	mov	r4, r0
  40647a:	b108      	cbz	r0, 406480 <_fflush_r+0xc>
  40647c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40647e:	b1bb      	cbz	r3, 4064b0 <_fflush_r+0x3c>
  406480:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  406484:	b188      	cbz	r0, 4064aa <_fflush_r+0x36>
  406486:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  406488:	07db      	lsls	r3, r3, #31
  40648a:	d401      	bmi.n	406490 <_fflush_r+0x1c>
  40648c:	0581      	lsls	r1, r0, #22
  40648e:	d517      	bpl.n	4064c0 <_fflush_r+0x4c>
  406490:	4620      	mov	r0, r4
  406492:	4629      	mov	r1, r5
  406494:	f7ff ff4e 	bl	406334 <__sflush_r>
  406498:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  40649a:	07da      	lsls	r2, r3, #31
  40649c:	4604      	mov	r4, r0
  40649e:	d402      	bmi.n	4064a6 <_fflush_r+0x32>
  4064a0:	89ab      	ldrh	r3, [r5, #12]
  4064a2:	059b      	lsls	r3, r3, #22
  4064a4:	d507      	bpl.n	4064b6 <_fflush_r+0x42>
  4064a6:	4620      	mov	r0, r4
  4064a8:	bd38      	pop	{r3, r4, r5, pc}
  4064aa:	4604      	mov	r4, r0
  4064ac:	4620      	mov	r0, r4
  4064ae:	bd38      	pop	{r3, r4, r5, pc}
  4064b0:	f000 f838 	bl	406524 <__sinit>
  4064b4:	e7e4      	b.n	406480 <_fflush_r+0xc>
  4064b6:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4064b8:	f000 fc04 	bl	406cc4 <__retarget_lock_release_recursive>
  4064bc:	4620      	mov	r0, r4
  4064be:	bd38      	pop	{r3, r4, r5, pc}
  4064c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4064c2:	f000 fbfd 	bl	406cc0 <__retarget_lock_acquire_recursive>
  4064c6:	e7e3      	b.n	406490 <_fflush_r+0x1c>

004064c8 <_cleanup_r>:
  4064c8:	4901      	ldr	r1, [pc, #4]	; (4064d0 <_cleanup_r+0x8>)
  4064ca:	f000 bbaf 	b.w	406c2c <_fwalk_reent>
  4064ce:	bf00      	nop
  4064d0:	00407de5 	.word	0x00407de5

004064d4 <std.isra.0>:
  4064d4:	b510      	push	{r4, lr}
  4064d6:	2300      	movs	r3, #0
  4064d8:	4604      	mov	r4, r0
  4064da:	8181      	strh	r1, [r0, #12]
  4064dc:	81c2      	strh	r2, [r0, #14]
  4064de:	6003      	str	r3, [r0, #0]
  4064e0:	6043      	str	r3, [r0, #4]
  4064e2:	6083      	str	r3, [r0, #8]
  4064e4:	6643      	str	r3, [r0, #100]	; 0x64
  4064e6:	6103      	str	r3, [r0, #16]
  4064e8:	6143      	str	r3, [r0, #20]
  4064ea:	6183      	str	r3, [r0, #24]
  4064ec:	4619      	mov	r1, r3
  4064ee:	2208      	movs	r2, #8
  4064f0:	305c      	adds	r0, #92	; 0x5c
  4064f2:	f7fc fb89 	bl	402c08 <memset>
  4064f6:	4807      	ldr	r0, [pc, #28]	; (406514 <std.isra.0+0x40>)
  4064f8:	4907      	ldr	r1, [pc, #28]	; (406518 <std.isra.0+0x44>)
  4064fa:	4a08      	ldr	r2, [pc, #32]	; (40651c <std.isra.0+0x48>)
  4064fc:	4b08      	ldr	r3, [pc, #32]	; (406520 <std.isra.0+0x4c>)
  4064fe:	6220      	str	r0, [r4, #32]
  406500:	61e4      	str	r4, [r4, #28]
  406502:	6261      	str	r1, [r4, #36]	; 0x24
  406504:	62a2      	str	r2, [r4, #40]	; 0x28
  406506:	62e3      	str	r3, [r4, #44]	; 0x2c
  406508:	f104 0058 	add.w	r0, r4, #88	; 0x58
  40650c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  406510:	f000 bbd2 	b.w	406cb8 <__retarget_lock_init_recursive>
  406514:	004079cd 	.word	0x004079cd
  406518:	004079f1 	.word	0x004079f1
  40651c:	00407a2d 	.word	0x00407a2d
  406520:	00407a4d 	.word	0x00407a4d

00406524 <__sinit>:
  406524:	b510      	push	{r4, lr}
  406526:	4604      	mov	r4, r0
  406528:	4812      	ldr	r0, [pc, #72]	; (406574 <__sinit+0x50>)
  40652a:	f000 fbc9 	bl	406cc0 <__retarget_lock_acquire_recursive>
  40652e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  406530:	b9d2      	cbnz	r2, 406568 <__sinit+0x44>
  406532:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  406536:	4810      	ldr	r0, [pc, #64]	; (406578 <__sinit+0x54>)
  406538:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  40653c:	2103      	movs	r1, #3
  40653e:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  406542:	63e0      	str	r0, [r4, #60]	; 0x3c
  406544:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  406548:	6860      	ldr	r0, [r4, #4]
  40654a:	2104      	movs	r1, #4
  40654c:	f7ff ffc2 	bl	4064d4 <std.isra.0>
  406550:	2201      	movs	r2, #1
  406552:	2109      	movs	r1, #9
  406554:	68a0      	ldr	r0, [r4, #8]
  406556:	f7ff ffbd 	bl	4064d4 <std.isra.0>
  40655a:	2202      	movs	r2, #2
  40655c:	2112      	movs	r1, #18
  40655e:	68e0      	ldr	r0, [r4, #12]
  406560:	f7ff ffb8 	bl	4064d4 <std.isra.0>
  406564:	2301      	movs	r3, #1
  406566:	63a3      	str	r3, [r4, #56]	; 0x38
  406568:	4802      	ldr	r0, [pc, #8]	; (406574 <__sinit+0x50>)
  40656a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40656e:	f000 bba9 	b.w	406cc4 <__retarget_lock_release_recursive>
  406572:	bf00      	nop
  406574:	20401050 	.word	0x20401050
  406578:	004064c9 	.word	0x004064c9

0040657c <__sfp_lock_acquire>:
  40657c:	4801      	ldr	r0, [pc, #4]	; (406584 <__sfp_lock_acquire+0x8>)
  40657e:	f000 bb9f 	b.w	406cc0 <__retarget_lock_acquire_recursive>
  406582:	bf00      	nop
  406584:	20401064 	.word	0x20401064

00406588 <__sfp_lock_release>:
  406588:	4801      	ldr	r0, [pc, #4]	; (406590 <__sfp_lock_release+0x8>)
  40658a:	f000 bb9b 	b.w	406cc4 <__retarget_lock_release_recursive>
  40658e:	bf00      	nop
  406590:	20401064 	.word	0x20401064

00406594 <__libc_fini_array>:
  406594:	b538      	push	{r3, r4, r5, lr}
  406596:	4c0a      	ldr	r4, [pc, #40]	; (4065c0 <__libc_fini_array+0x2c>)
  406598:	4d0a      	ldr	r5, [pc, #40]	; (4065c4 <__libc_fini_array+0x30>)
  40659a:	1b64      	subs	r4, r4, r5
  40659c:	10a4      	asrs	r4, r4, #2
  40659e:	d00a      	beq.n	4065b6 <__libc_fini_array+0x22>
  4065a0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4065a4:	3b01      	subs	r3, #1
  4065a6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4065aa:	3c01      	subs	r4, #1
  4065ac:	f855 3904 	ldr.w	r3, [r5], #-4
  4065b0:	4798      	blx	r3
  4065b2:	2c00      	cmp	r4, #0
  4065b4:	d1f9      	bne.n	4065aa <__libc_fini_array+0x16>
  4065b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4065ba:	f00a baff 	b.w	410bbc <_fini>
  4065be:	bf00      	nop
  4065c0:	00410bcc 	.word	0x00410bcc
  4065c4:	00410bc8 	.word	0x00410bc8

004065c8 <__fputwc>:
  4065c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4065cc:	b082      	sub	sp, #8
  4065ce:	4680      	mov	r8, r0
  4065d0:	4689      	mov	r9, r1
  4065d2:	4614      	mov	r4, r2
  4065d4:	f000 fb54 	bl	406c80 <__locale_mb_cur_max>
  4065d8:	2801      	cmp	r0, #1
  4065da:	d036      	beq.n	40664a <__fputwc+0x82>
  4065dc:	464a      	mov	r2, r9
  4065de:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  4065e2:	a901      	add	r1, sp, #4
  4065e4:	4640      	mov	r0, r8
  4065e6:	f001 fb0b 	bl	407c00 <_wcrtomb_r>
  4065ea:	1c42      	adds	r2, r0, #1
  4065ec:	4606      	mov	r6, r0
  4065ee:	d025      	beq.n	40663c <__fputwc+0x74>
  4065f0:	b3a8      	cbz	r0, 40665e <__fputwc+0x96>
  4065f2:	f89d e004 	ldrb.w	lr, [sp, #4]
  4065f6:	2500      	movs	r5, #0
  4065f8:	f10d 0a04 	add.w	sl, sp, #4
  4065fc:	e009      	b.n	406612 <__fputwc+0x4a>
  4065fe:	6823      	ldr	r3, [r4, #0]
  406600:	1c5a      	adds	r2, r3, #1
  406602:	6022      	str	r2, [r4, #0]
  406604:	f883 e000 	strb.w	lr, [r3]
  406608:	3501      	adds	r5, #1
  40660a:	42b5      	cmp	r5, r6
  40660c:	d227      	bcs.n	40665e <__fputwc+0x96>
  40660e:	f815 e00a 	ldrb.w	lr, [r5, sl]
  406612:	68a3      	ldr	r3, [r4, #8]
  406614:	3b01      	subs	r3, #1
  406616:	2b00      	cmp	r3, #0
  406618:	60a3      	str	r3, [r4, #8]
  40661a:	daf0      	bge.n	4065fe <__fputwc+0x36>
  40661c:	69a7      	ldr	r7, [r4, #24]
  40661e:	42bb      	cmp	r3, r7
  406620:	4671      	mov	r1, lr
  406622:	4622      	mov	r2, r4
  406624:	4640      	mov	r0, r8
  406626:	db02      	blt.n	40662e <__fputwc+0x66>
  406628:	f1be 0f0a 	cmp.w	lr, #10
  40662c:	d1e7      	bne.n	4065fe <__fputwc+0x36>
  40662e:	f001 fa8f 	bl	407b50 <__swbuf_r>
  406632:	1c43      	adds	r3, r0, #1
  406634:	d1e8      	bne.n	406608 <__fputwc+0x40>
  406636:	b002      	add	sp, #8
  406638:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40663c:	89a3      	ldrh	r3, [r4, #12]
  40663e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  406642:	81a3      	strh	r3, [r4, #12]
  406644:	b002      	add	sp, #8
  406646:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40664a:	f109 33ff 	add.w	r3, r9, #4294967295
  40664e:	2bfe      	cmp	r3, #254	; 0xfe
  406650:	d8c4      	bhi.n	4065dc <__fputwc+0x14>
  406652:	fa5f fe89 	uxtb.w	lr, r9
  406656:	4606      	mov	r6, r0
  406658:	f88d e004 	strb.w	lr, [sp, #4]
  40665c:	e7cb      	b.n	4065f6 <__fputwc+0x2e>
  40665e:	4648      	mov	r0, r9
  406660:	b002      	add	sp, #8
  406662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406666:	bf00      	nop

00406668 <_fputwc_r>:
  406668:	b530      	push	{r4, r5, lr}
  40666a:	6e53      	ldr	r3, [r2, #100]	; 0x64
  40666c:	f013 0f01 	tst.w	r3, #1
  406670:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  406674:	4614      	mov	r4, r2
  406676:	b083      	sub	sp, #12
  406678:	4605      	mov	r5, r0
  40667a:	b29a      	uxth	r2, r3
  40667c:	d101      	bne.n	406682 <_fputwc_r+0x1a>
  40667e:	0590      	lsls	r0, r2, #22
  406680:	d51c      	bpl.n	4066bc <_fputwc_r+0x54>
  406682:	0490      	lsls	r0, r2, #18
  406684:	d406      	bmi.n	406694 <_fputwc_r+0x2c>
  406686:	6e62      	ldr	r2, [r4, #100]	; 0x64
  406688:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  40668c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  406690:	81a3      	strh	r3, [r4, #12]
  406692:	6662      	str	r2, [r4, #100]	; 0x64
  406694:	4628      	mov	r0, r5
  406696:	4622      	mov	r2, r4
  406698:	f7ff ff96 	bl	4065c8 <__fputwc>
  40669c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40669e:	07da      	lsls	r2, r3, #31
  4066a0:	4605      	mov	r5, r0
  4066a2:	d402      	bmi.n	4066aa <_fputwc_r+0x42>
  4066a4:	89a3      	ldrh	r3, [r4, #12]
  4066a6:	059b      	lsls	r3, r3, #22
  4066a8:	d502      	bpl.n	4066b0 <_fputwc_r+0x48>
  4066aa:	4628      	mov	r0, r5
  4066ac:	b003      	add	sp, #12
  4066ae:	bd30      	pop	{r4, r5, pc}
  4066b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4066b2:	f000 fb07 	bl	406cc4 <__retarget_lock_release_recursive>
  4066b6:	4628      	mov	r0, r5
  4066b8:	b003      	add	sp, #12
  4066ba:	bd30      	pop	{r4, r5, pc}
  4066bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4066be:	9101      	str	r1, [sp, #4]
  4066c0:	f000 fafe 	bl	406cc0 <__retarget_lock_acquire_recursive>
  4066c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4066c8:	9901      	ldr	r1, [sp, #4]
  4066ca:	b29a      	uxth	r2, r3
  4066cc:	e7d9      	b.n	406682 <_fputwc_r+0x1a>
  4066ce:	bf00      	nop

004066d0 <_malloc_trim_r>:
  4066d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4066d2:	4f24      	ldr	r7, [pc, #144]	; (406764 <_malloc_trim_r+0x94>)
  4066d4:	460c      	mov	r4, r1
  4066d6:	4606      	mov	r6, r0
  4066d8:	f7fc fae4 	bl	402ca4 <__malloc_lock>
  4066dc:	68bb      	ldr	r3, [r7, #8]
  4066de:	685d      	ldr	r5, [r3, #4]
  4066e0:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4066e4:	310f      	adds	r1, #15
  4066e6:	f025 0503 	bic.w	r5, r5, #3
  4066ea:	4429      	add	r1, r5
  4066ec:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4066f0:	f021 010f 	bic.w	r1, r1, #15
  4066f4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4066f8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4066fc:	db07      	blt.n	40670e <_malloc_trim_r+0x3e>
  4066fe:	2100      	movs	r1, #0
  406700:	4630      	mov	r0, r6
  406702:	f7fc fadb 	bl	402cbc <_sbrk_r>
  406706:	68bb      	ldr	r3, [r7, #8]
  406708:	442b      	add	r3, r5
  40670a:	4298      	cmp	r0, r3
  40670c:	d004      	beq.n	406718 <_malloc_trim_r+0x48>
  40670e:	4630      	mov	r0, r6
  406710:	f7fc face 	bl	402cb0 <__malloc_unlock>
  406714:	2000      	movs	r0, #0
  406716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406718:	4261      	negs	r1, r4
  40671a:	4630      	mov	r0, r6
  40671c:	f7fc face 	bl	402cbc <_sbrk_r>
  406720:	3001      	adds	r0, #1
  406722:	d00d      	beq.n	406740 <_malloc_trim_r+0x70>
  406724:	4b10      	ldr	r3, [pc, #64]	; (406768 <_malloc_trim_r+0x98>)
  406726:	68ba      	ldr	r2, [r7, #8]
  406728:	6819      	ldr	r1, [r3, #0]
  40672a:	1b2d      	subs	r5, r5, r4
  40672c:	f045 0501 	orr.w	r5, r5, #1
  406730:	4630      	mov	r0, r6
  406732:	1b09      	subs	r1, r1, r4
  406734:	6055      	str	r5, [r2, #4]
  406736:	6019      	str	r1, [r3, #0]
  406738:	f7fc faba 	bl	402cb0 <__malloc_unlock>
  40673c:	2001      	movs	r0, #1
  40673e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406740:	2100      	movs	r1, #0
  406742:	4630      	mov	r0, r6
  406744:	f7fc faba 	bl	402cbc <_sbrk_r>
  406748:	68ba      	ldr	r2, [r7, #8]
  40674a:	1a83      	subs	r3, r0, r2
  40674c:	2b0f      	cmp	r3, #15
  40674e:	ddde      	ble.n	40670e <_malloc_trim_r+0x3e>
  406750:	4c06      	ldr	r4, [pc, #24]	; (40676c <_malloc_trim_r+0x9c>)
  406752:	4905      	ldr	r1, [pc, #20]	; (406768 <_malloc_trim_r+0x98>)
  406754:	6824      	ldr	r4, [r4, #0]
  406756:	f043 0301 	orr.w	r3, r3, #1
  40675a:	1b00      	subs	r0, r0, r4
  40675c:	6053      	str	r3, [r2, #4]
  40675e:	6008      	str	r0, [r1, #0]
  406760:	e7d5      	b.n	40670e <_malloc_trim_r+0x3e>
  406762:	bf00      	nop
  406764:	20400440 	.word	0x20400440
  406768:	20400ff4 	.word	0x20400ff4
  40676c:	20400848 	.word	0x20400848

00406770 <_free_r>:
  406770:	2900      	cmp	r1, #0
  406772:	d044      	beq.n	4067fe <_free_r+0x8e>
  406774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406778:	460d      	mov	r5, r1
  40677a:	4680      	mov	r8, r0
  40677c:	f7fc fa92 	bl	402ca4 <__malloc_lock>
  406780:	f855 7c04 	ldr.w	r7, [r5, #-4]
  406784:	4969      	ldr	r1, [pc, #420]	; (40692c <_free_r+0x1bc>)
  406786:	f027 0301 	bic.w	r3, r7, #1
  40678a:	f1a5 0408 	sub.w	r4, r5, #8
  40678e:	18e2      	adds	r2, r4, r3
  406790:	688e      	ldr	r6, [r1, #8]
  406792:	6850      	ldr	r0, [r2, #4]
  406794:	42b2      	cmp	r2, r6
  406796:	f020 0003 	bic.w	r0, r0, #3
  40679a:	d05e      	beq.n	40685a <_free_r+0xea>
  40679c:	07fe      	lsls	r6, r7, #31
  40679e:	6050      	str	r0, [r2, #4]
  4067a0:	d40b      	bmi.n	4067ba <_free_r+0x4a>
  4067a2:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4067a6:	1be4      	subs	r4, r4, r7
  4067a8:	f101 0e08 	add.w	lr, r1, #8
  4067ac:	68a5      	ldr	r5, [r4, #8]
  4067ae:	4575      	cmp	r5, lr
  4067b0:	443b      	add	r3, r7
  4067b2:	d06d      	beq.n	406890 <_free_r+0x120>
  4067b4:	68e7      	ldr	r7, [r4, #12]
  4067b6:	60ef      	str	r7, [r5, #12]
  4067b8:	60bd      	str	r5, [r7, #8]
  4067ba:	1815      	adds	r5, r2, r0
  4067bc:	686d      	ldr	r5, [r5, #4]
  4067be:	07ed      	lsls	r5, r5, #31
  4067c0:	d53e      	bpl.n	406840 <_free_r+0xd0>
  4067c2:	f043 0201 	orr.w	r2, r3, #1
  4067c6:	6062      	str	r2, [r4, #4]
  4067c8:	50e3      	str	r3, [r4, r3]
  4067ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4067ce:	d217      	bcs.n	406800 <_free_r+0x90>
  4067d0:	08db      	lsrs	r3, r3, #3
  4067d2:	1c58      	adds	r0, r3, #1
  4067d4:	109a      	asrs	r2, r3, #2
  4067d6:	684d      	ldr	r5, [r1, #4]
  4067d8:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4067dc:	60a7      	str	r7, [r4, #8]
  4067de:	2301      	movs	r3, #1
  4067e0:	4093      	lsls	r3, r2
  4067e2:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4067e6:	432b      	orrs	r3, r5
  4067e8:	3a08      	subs	r2, #8
  4067ea:	60e2      	str	r2, [r4, #12]
  4067ec:	604b      	str	r3, [r1, #4]
  4067ee:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4067f2:	60fc      	str	r4, [r7, #12]
  4067f4:	4640      	mov	r0, r8
  4067f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4067fa:	f7fc ba59 	b.w	402cb0 <__malloc_unlock>
  4067fe:	4770      	bx	lr
  406800:	0a5a      	lsrs	r2, r3, #9
  406802:	2a04      	cmp	r2, #4
  406804:	d852      	bhi.n	4068ac <_free_r+0x13c>
  406806:	099a      	lsrs	r2, r3, #6
  406808:	f102 0739 	add.w	r7, r2, #57	; 0x39
  40680c:	00ff      	lsls	r7, r7, #3
  40680e:	f102 0538 	add.w	r5, r2, #56	; 0x38
  406812:	19c8      	adds	r0, r1, r7
  406814:	59ca      	ldr	r2, [r1, r7]
  406816:	3808      	subs	r0, #8
  406818:	4290      	cmp	r0, r2
  40681a:	d04f      	beq.n	4068bc <_free_r+0x14c>
  40681c:	6851      	ldr	r1, [r2, #4]
  40681e:	f021 0103 	bic.w	r1, r1, #3
  406822:	428b      	cmp	r3, r1
  406824:	d232      	bcs.n	40688c <_free_r+0x11c>
  406826:	6892      	ldr	r2, [r2, #8]
  406828:	4290      	cmp	r0, r2
  40682a:	d1f7      	bne.n	40681c <_free_r+0xac>
  40682c:	68c3      	ldr	r3, [r0, #12]
  40682e:	60a0      	str	r0, [r4, #8]
  406830:	60e3      	str	r3, [r4, #12]
  406832:	609c      	str	r4, [r3, #8]
  406834:	60c4      	str	r4, [r0, #12]
  406836:	4640      	mov	r0, r8
  406838:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40683c:	f7fc ba38 	b.w	402cb0 <__malloc_unlock>
  406840:	6895      	ldr	r5, [r2, #8]
  406842:	4f3b      	ldr	r7, [pc, #236]	; (406930 <_free_r+0x1c0>)
  406844:	42bd      	cmp	r5, r7
  406846:	4403      	add	r3, r0
  406848:	d040      	beq.n	4068cc <_free_r+0x15c>
  40684a:	68d0      	ldr	r0, [r2, #12]
  40684c:	60e8      	str	r0, [r5, #12]
  40684e:	f043 0201 	orr.w	r2, r3, #1
  406852:	6085      	str	r5, [r0, #8]
  406854:	6062      	str	r2, [r4, #4]
  406856:	50e3      	str	r3, [r4, r3]
  406858:	e7b7      	b.n	4067ca <_free_r+0x5a>
  40685a:	07ff      	lsls	r7, r7, #31
  40685c:	4403      	add	r3, r0
  40685e:	d407      	bmi.n	406870 <_free_r+0x100>
  406860:	f855 2c08 	ldr.w	r2, [r5, #-8]
  406864:	1aa4      	subs	r4, r4, r2
  406866:	4413      	add	r3, r2
  406868:	68a0      	ldr	r0, [r4, #8]
  40686a:	68e2      	ldr	r2, [r4, #12]
  40686c:	60c2      	str	r2, [r0, #12]
  40686e:	6090      	str	r0, [r2, #8]
  406870:	4a30      	ldr	r2, [pc, #192]	; (406934 <_free_r+0x1c4>)
  406872:	6812      	ldr	r2, [r2, #0]
  406874:	f043 0001 	orr.w	r0, r3, #1
  406878:	4293      	cmp	r3, r2
  40687a:	6060      	str	r0, [r4, #4]
  40687c:	608c      	str	r4, [r1, #8]
  40687e:	d3b9      	bcc.n	4067f4 <_free_r+0x84>
  406880:	4b2d      	ldr	r3, [pc, #180]	; (406938 <_free_r+0x1c8>)
  406882:	4640      	mov	r0, r8
  406884:	6819      	ldr	r1, [r3, #0]
  406886:	f7ff ff23 	bl	4066d0 <_malloc_trim_r>
  40688a:	e7b3      	b.n	4067f4 <_free_r+0x84>
  40688c:	4610      	mov	r0, r2
  40688e:	e7cd      	b.n	40682c <_free_r+0xbc>
  406890:	1811      	adds	r1, r2, r0
  406892:	6849      	ldr	r1, [r1, #4]
  406894:	07c9      	lsls	r1, r1, #31
  406896:	d444      	bmi.n	406922 <_free_r+0x1b2>
  406898:	6891      	ldr	r1, [r2, #8]
  40689a:	68d2      	ldr	r2, [r2, #12]
  40689c:	60ca      	str	r2, [r1, #12]
  40689e:	4403      	add	r3, r0
  4068a0:	f043 0001 	orr.w	r0, r3, #1
  4068a4:	6091      	str	r1, [r2, #8]
  4068a6:	6060      	str	r0, [r4, #4]
  4068a8:	50e3      	str	r3, [r4, r3]
  4068aa:	e7a3      	b.n	4067f4 <_free_r+0x84>
  4068ac:	2a14      	cmp	r2, #20
  4068ae:	d816      	bhi.n	4068de <_free_r+0x16e>
  4068b0:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4068b4:	00ff      	lsls	r7, r7, #3
  4068b6:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4068ba:	e7aa      	b.n	406812 <_free_r+0xa2>
  4068bc:	10aa      	asrs	r2, r5, #2
  4068be:	2301      	movs	r3, #1
  4068c0:	684d      	ldr	r5, [r1, #4]
  4068c2:	4093      	lsls	r3, r2
  4068c4:	432b      	orrs	r3, r5
  4068c6:	604b      	str	r3, [r1, #4]
  4068c8:	4603      	mov	r3, r0
  4068ca:	e7b0      	b.n	40682e <_free_r+0xbe>
  4068cc:	f043 0201 	orr.w	r2, r3, #1
  4068d0:	614c      	str	r4, [r1, #20]
  4068d2:	610c      	str	r4, [r1, #16]
  4068d4:	60e5      	str	r5, [r4, #12]
  4068d6:	60a5      	str	r5, [r4, #8]
  4068d8:	6062      	str	r2, [r4, #4]
  4068da:	50e3      	str	r3, [r4, r3]
  4068dc:	e78a      	b.n	4067f4 <_free_r+0x84>
  4068de:	2a54      	cmp	r2, #84	; 0x54
  4068e0:	d806      	bhi.n	4068f0 <_free_r+0x180>
  4068e2:	0b1a      	lsrs	r2, r3, #12
  4068e4:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4068e8:	00ff      	lsls	r7, r7, #3
  4068ea:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4068ee:	e790      	b.n	406812 <_free_r+0xa2>
  4068f0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4068f4:	d806      	bhi.n	406904 <_free_r+0x194>
  4068f6:	0bda      	lsrs	r2, r3, #15
  4068f8:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4068fc:	00ff      	lsls	r7, r7, #3
  4068fe:	f102 0577 	add.w	r5, r2, #119	; 0x77
  406902:	e786      	b.n	406812 <_free_r+0xa2>
  406904:	f240 5054 	movw	r0, #1364	; 0x554
  406908:	4282      	cmp	r2, r0
  40690a:	d806      	bhi.n	40691a <_free_r+0x1aa>
  40690c:	0c9a      	lsrs	r2, r3, #18
  40690e:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  406912:	00ff      	lsls	r7, r7, #3
  406914:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  406918:	e77b      	b.n	406812 <_free_r+0xa2>
  40691a:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40691e:	257e      	movs	r5, #126	; 0x7e
  406920:	e777      	b.n	406812 <_free_r+0xa2>
  406922:	f043 0101 	orr.w	r1, r3, #1
  406926:	6061      	str	r1, [r4, #4]
  406928:	6013      	str	r3, [r2, #0]
  40692a:	e763      	b.n	4067f4 <_free_r+0x84>
  40692c:	20400440 	.word	0x20400440
  406930:	20400448 	.word	0x20400448
  406934:	2040084c 	.word	0x2040084c
  406938:	20401024 	.word	0x20401024

0040693c <__sfvwrite_r>:
  40693c:	6893      	ldr	r3, [r2, #8]
  40693e:	2b00      	cmp	r3, #0
  406940:	d073      	beq.n	406a2a <__sfvwrite_r+0xee>
  406942:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406946:	898b      	ldrh	r3, [r1, #12]
  406948:	b083      	sub	sp, #12
  40694a:	460c      	mov	r4, r1
  40694c:	0719      	lsls	r1, r3, #28
  40694e:	9000      	str	r0, [sp, #0]
  406950:	4616      	mov	r6, r2
  406952:	d526      	bpl.n	4069a2 <__sfvwrite_r+0x66>
  406954:	6922      	ldr	r2, [r4, #16]
  406956:	b322      	cbz	r2, 4069a2 <__sfvwrite_r+0x66>
  406958:	f013 0002 	ands.w	r0, r3, #2
  40695c:	6835      	ldr	r5, [r6, #0]
  40695e:	d02c      	beq.n	4069ba <__sfvwrite_r+0x7e>
  406960:	f04f 0900 	mov.w	r9, #0
  406964:	4fb0      	ldr	r7, [pc, #704]	; (406c28 <__sfvwrite_r+0x2ec>)
  406966:	46c8      	mov	r8, r9
  406968:	46b2      	mov	sl, r6
  40696a:	45b8      	cmp	r8, r7
  40696c:	4643      	mov	r3, r8
  40696e:	464a      	mov	r2, r9
  406970:	bf28      	it	cs
  406972:	463b      	movcs	r3, r7
  406974:	9800      	ldr	r0, [sp, #0]
  406976:	f1b8 0f00 	cmp.w	r8, #0
  40697a:	d050      	beq.n	406a1e <__sfvwrite_r+0xe2>
  40697c:	69e1      	ldr	r1, [r4, #28]
  40697e:	6a66      	ldr	r6, [r4, #36]	; 0x24
  406980:	47b0      	blx	r6
  406982:	2800      	cmp	r0, #0
  406984:	dd58      	ble.n	406a38 <__sfvwrite_r+0xfc>
  406986:	f8da 3008 	ldr.w	r3, [sl, #8]
  40698a:	1a1b      	subs	r3, r3, r0
  40698c:	4481      	add	r9, r0
  40698e:	eba8 0800 	sub.w	r8, r8, r0
  406992:	f8ca 3008 	str.w	r3, [sl, #8]
  406996:	2b00      	cmp	r3, #0
  406998:	d1e7      	bne.n	40696a <__sfvwrite_r+0x2e>
  40699a:	2000      	movs	r0, #0
  40699c:	b003      	add	sp, #12
  40699e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4069a2:	4621      	mov	r1, r4
  4069a4:	9800      	ldr	r0, [sp, #0]
  4069a6:	f7fe fc91 	bl	4052cc <__swsetup_r>
  4069aa:	2800      	cmp	r0, #0
  4069ac:	f040 8133 	bne.w	406c16 <__sfvwrite_r+0x2da>
  4069b0:	89a3      	ldrh	r3, [r4, #12]
  4069b2:	6835      	ldr	r5, [r6, #0]
  4069b4:	f013 0002 	ands.w	r0, r3, #2
  4069b8:	d1d2      	bne.n	406960 <__sfvwrite_r+0x24>
  4069ba:	f013 0901 	ands.w	r9, r3, #1
  4069be:	d145      	bne.n	406a4c <__sfvwrite_r+0x110>
  4069c0:	464f      	mov	r7, r9
  4069c2:	9601      	str	r6, [sp, #4]
  4069c4:	b337      	cbz	r7, 406a14 <__sfvwrite_r+0xd8>
  4069c6:	059a      	lsls	r2, r3, #22
  4069c8:	f8d4 8008 	ldr.w	r8, [r4, #8]
  4069cc:	f140 8083 	bpl.w	406ad6 <__sfvwrite_r+0x19a>
  4069d0:	4547      	cmp	r7, r8
  4069d2:	46c3      	mov	fp, r8
  4069d4:	f0c0 80ab 	bcc.w	406b2e <__sfvwrite_r+0x1f2>
  4069d8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4069dc:	f040 80ac 	bne.w	406b38 <__sfvwrite_r+0x1fc>
  4069e0:	6820      	ldr	r0, [r4, #0]
  4069e2:	46ba      	mov	sl, r7
  4069e4:	465a      	mov	r2, fp
  4069e6:	4649      	mov	r1, r9
  4069e8:	f000 faec 	bl	406fc4 <memmove>
  4069ec:	68a2      	ldr	r2, [r4, #8]
  4069ee:	6823      	ldr	r3, [r4, #0]
  4069f0:	eba2 0208 	sub.w	r2, r2, r8
  4069f4:	445b      	add	r3, fp
  4069f6:	60a2      	str	r2, [r4, #8]
  4069f8:	6023      	str	r3, [r4, #0]
  4069fa:	9a01      	ldr	r2, [sp, #4]
  4069fc:	6893      	ldr	r3, [r2, #8]
  4069fe:	eba3 030a 	sub.w	r3, r3, sl
  406a02:	44d1      	add	r9, sl
  406a04:	eba7 070a 	sub.w	r7, r7, sl
  406a08:	6093      	str	r3, [r2, #8]
  406a0a:	2b00      	cmp	r3, #0
  406a0c:	d0c5      	beq.n	40699a <__sfvwrite_r+0x5e>
  406a0e:	89a3      	ldrh	r3, [r4, #12]
  406a10:	2f00      	cmp	r7, #0
  406a12:	d1d8      	bne.n	4069c6 <__sfvwrite_r+0x8a>
  406a14:	f8d5 9000 	ldr.w	r9, [r5]
  406a18:	686f      	ldr	r7, [r5, #4]
  406a1a:	3508      	adds	r5, #8
  406a1c:	e7d2      	b.n	4069c4 <__sfvwrite_r+0x88>
  406a1e:	f8d5 9000 	ldr.w	r9, [r5]
  406a22:	f8d5 8004 	ldr.w	r8, [r5, #4]
  406a26:	3508      	adds	r5, #8
  406a28:	e79f      	b.n	40696a <__sfvwrite_r+0x2e>
  406a2a:	2000      	movs	r0, #0
  406a2c:	4770      	bx	lr
  406a2e:	4621      	mov	r1, r4
  406a30:	9800      	ldr	r0, [sp, #0]
  406a32:	f7ff fd1f 	bl	406474 <_fflush_r>
  406a36:	b370      	cbz	r0, 406a96 <__sfvwrite_r+0x15a>
  406a38:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406a3c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  406a40:	f04f 30ff 	mov.w	r0, #4294967295
  406a44:	81a3      	strh	r3, [r4, #12]
  406a46:	b003      	add	sp, #12
  406a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406a4c:	4681      	mov	r9, r0
  406a4e:	4633      	mov	r3, r6
  406a50:	464e      	mov	r6, r9
  406a52:	46a8      	mov	r8, r5
  406a54:	469a      	mov	sl, r3
  406a56:	464d      	mov	r5, r9
  406a58:	b34e      	cbz	r6, 406aae <__sfvwrite_r+0x172>
  406a5a:	b380      	cbz	r0, 406abe <__sfvwrite_r+0x182>
  406a5c:	6820      	ldr	r0, [r4, #0]
  406a5e:	6923      	ldr	r3, [r4, #16]
  406a60:	6962      	ldr	r2, [r4, #20]
  406a62:	45b1      	cmp	r9, r6
  406a64:	46cb      	mov	fp, r9
  406a66:	bf28      	it	cs
  406a68:	46b3      	movcs	fp, r6
  406a6a:	4298      	cmp	r0, r3
  406a6c:	465f      	mov	r7, fp
  406a6e:	d904      	bls.n	406a7a <__sfvwrite_r+0x13e>
  406a70:	68a3      	ldr	r3, [r4, #8]
  406a72:	4413      	add	r3, r2
  406a74:	459b      	cmp	fp, r3
  406a76:	f300 80a6 	bgt.w	406bc6 <__sfvwrite_r+0x28a>
  406a7a:	4593      	cmp	fp, r2
  406a7c:	db4b      	blt.n	406b16 <__sfvwrite_r+0x1da>
  406a7e:	4613      	mov	r3, r2
  406a80:	6a67      	ldr	r7, [r4, #36]	; 0x24
  406a82:	69e1      	ldr	r1, [r4, #28]
  406a84:	9800      	ldr	r0, [sp, #0]
  406a86:	462a      	mov	r2, r5
  406a88:	47b8      	blx	r7
  406a8a:	1e07      	subs	r7, r0, #0
  406a8c:	ddd4      	ble.n	406a38 <__sfvwrite_r+0xfc>
  406a8e:	ebb9 0907 	subs.w	r9, r9, r7
  406a92:	d0cc      	beq.n	406a2e <__sfvwrite_r+0xf2>
  406a94:	2001      	movs	r0, #1
  406a96:	f8da 3008 	ldr.w	r3, [sl, #8]
  406a9a:	1bdb      	subs	r3, r3, r7
  406a9c:	443d      	add	r5, r7
  406a9e:	1bf6      	subs	r6, r6, r7
  406aa0:	f8ca 3008 	str.w	r3, [sl, #8]
  406aa4:	2b00      	cmp	r3, #0
  406aa6:	f43f af78 	beq.w	40699a <__sfvwrite_r+0x5e>
  406aaa:	2e00      	cmp	r6, #0
  406aac:	d1d5      	bne.n	406a5a <__sfvwrite_r+0x11e>
  406aae:	f108 0308 	add.w	r3, r8, #8
  406ab2:	e913 0060 	ldmdb	r3, {r5, r6}
  406ab6:	4698      	mov	r8, r3
  406ab8:	3308      	adds	r3, #8
  406aba:	2e00      	cmp	r6, #0
  406abc:	d0f9      	beq.n	406ab2 <__sfvwrite_r+0x176>
  406abe:	4632      	mov	r2, r6
  406ac0:	210a      	movs	r1, #10
  406ac2:	4628      	mov	r0, r5
  406ac4:	f000 f994 	bl	406df0 <memchr>
  406ac8:	2800      	cmp	r0, #0
  406aca:	f000 80a1 	beq.w	406c10 <__sfvwrite_r+0x2d4>
  406ace:	3001      	adds	r0, #1
  406ad0:	eba0 0905 	sub.w	r9, r0, r5
  406ad4:	e7c2      	b.n	406a5c <__sfvwrite_r+0x120>
  406ad6:	6820      	ldr	r0, [r4, #0]
  406ad8:	6923      	ldr	r3, [r4, #16]
  406ada:	4298      	cmp	r0, r3
  406adc:	d802      	bhi.n	406ae4 <__sfvwrite_r+0x1a8>
  406ade:	6963      	ldr	r3, [r4, #20]
  406ae0:	429f      	cmp	r7, r3
  406ae2:	d25d      	bcs.n	406ba0 <__sfvwrite_r+0x264>
  406ae4:	45b8      	cmp	r8, r7
  406ae6:	bf28      	it	cs
  406ae8:	46b8      	movcs	r8, r7
  406aea:	4642      	mov	r2, r8
  406aec:	4649      	mov	r1, r9
  406aee:	f000 fa69 	bl	406fc4 <memmove>
  406af2:	68a3      	ldr	r3, [r4, #8]
  406af4:	6822      	ldr	r2, [r4, #0]
  406af6:	eba3 0308 	sub.w	r3, r3, r8
  406afa:	4442      	add	r2, r8
  406afc:	60a3      	str	r3, [r4, #8]
  406afe:	6022      	str	r2, [r4, #0]
  406b00:	b10b      	cbz	r3, 406b06 <__sfvwrite_r+0x1ca>
  406b02:	46c2      	mov	sl, r8
  406b04:	e779      	b.n	4069fa <__sfvwrite_r+0xbe>
  406b06:	4621      	mov	r1, r4
  406b08:	9800      	ldr	r0, [sp, #0]
  406b0a:	f7ff fcb3 	bl	406474 <_fflush_r>
  406b0e:	2800      	cmp	r0, #0
  406b10:	d192      	bne.n	406a38 <__sfvwrite_r+0xfc>
  406b12:	46c2      	mov	sl, r8
  406b14:	e771      	b.n	4069fa <__sfvwrite_r+0xbe>
  406b16:	465a      	mov	r2, fp
  406b18:	4629      	mov	r1, r5
  406b1a:	f000 fa53 	bl	406fc4 <memmove>
  406b1e:	68a2      	ldr	r2, [r4, #8]
  406b20:	6823      	ldr	r3, [r4, #0]
  406b22:	eba2 020b 	sub.w	r2, r2, fp
  406b26:	445b      	add	r3, fp
  406b28:	60a2      	str	r2, [r4, #8]
  406b2a:	6023      	str	r3, [r4, #0]
  406b2c:	e7af      	b.n	406a8e <__sfvwrite_r+0x152>
  406b2e:	6820      	ldr	r0, [r4, #0]
  406b30:	46b8      	mov	r8, r7
  406b32:	46ba      	mov	sl, r7
  406b34:	46bb      	mov	fp, r7
  406b36:	e755      	b.n	4069e4 <__sfvwrite_r+0xa8>
  406b38:	6962      	ldr	r2, [r4, #20]
  406b3a:	6820      	ldr	r0, [r4, #0]
  406b3c:	6921      	ldr	r1, [r4, #16]
  406b3e:	eb02 0842 	add.w	r8, r2, r2, lsl #1
  406b42:	eba0 0a01 	sub.w	sl, r0, r1
  406b46:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
  406b4a:	f10a 0001 	add.w	r0, sl, #1
  406b4e:	ea4f 0868 	mov.w	r8, r8, asr #1
  406b52:	4438      	add	r0, r7
  406b54:	4540      	cmp	r0, r8
  406b56:	4642      	mov	r2, r8
  406b58:	bf84      	itt	hi
  406b5a:	4680      	movhi	r8, r0
  406b5c:	4642      	movhi	r2, r8
  406b5e:	055b      	lsls	r3, r3, #21
  406b60:	d544      	bpl.n	406bec <__sfvwrite_r+0x2b0>
  406b62:	4611      	mov	r1, r2
  406b64:	9800      	ldr	r0, [sp, #0]
  406b66:	f7fb fd9f 	bl	4026a8 <_malloc_r>
  406b6a:	4683      	mov	fp, r0
  406b6c:	2800      	cmp	r0, #0
  406b6e:	d055      	beq.n	406c1c <__sfvwrite_r+0x2e0>
  406b70:	4652      	mov	r2, sl
  406b72:	6921      	ldr	r1, [r4, #16]
  406b74:	f000 f98c 	bl	406e90 <memcpy>
  406b78:	89a3      	ldrh	r3, [r4, #12]
  406b7a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
  406b7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  406b82:	81a3      	strh	r3, [r4, #12]
  406b84:	eb0b 000a 	add.w	r0, fp, sl
  406b88:	eba8 030a 	sub.w	r3, r8, sl
  406b8c:	f8c4 b010 	str.w	fp, [r4, #16]
  406b90:	f8c4 8014 	str.w	r8, [r4, #20]
  406b94:	6020      	str	r0, [r4, #0]
  406b96:	60a3      	str	r3, [r4, #8]
  406b98:	46b8      	mov	r8, r7
  406b9a:	46ba      	mov	sl, r7
  406b9c:	46bb      	mov	fp, r7
  406b9e:	e721      	b.n	4069e4 <__sfvwrite_r+0xa8>
  406ba0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
  406ba4:	42b9      	cmp	r1, r7
  406ba6:	bf28      	it	cs
  406ba8:	4639      	movcs	r1, r7
  406baa:	464a      	mov	r2, r9
  406bac:	fb91 f1f3 	sdiv	r1, r1, r3
  406bb0:	9800      	ldr	r0, [sp, #0]
  406bb2:	6a66      	ldr	r6, [r4, #36]	; 0x24
  406bb4:	fb03 f301 	mul.w	r3, r3, r1
  406bb8:	69e1      	ldr	r1, [r4, #28]
  406bba:	47b0      	blx	r6
  406bbc:	f1b0 0a00 	subs.w	sl, r0, #0
  406bc0:	f73f af1b 	bgt.w	4069fa <__sfvwrite_r+0xbe>
  406bc4:	e738      	b.n	406a38 <__sfvwrite_r+0xfc>
  406bc6:	461a      	mov	r2, r3
  406bc8:	4629      	mov	r1, r5
  406bca:	9301      	str	r3, [sp, #4]
  406bcc:	f000 f9fa 	bl	406fc4 <memmove>
  406bd0:	6822      	ldr	r2, [r4, #0]
  406bd2:	9b01      	ldr	r3, [sp, #4]
  406bd4:	9800      	ldr	r0, [sp, #0]
  406bd6:	441a      	add	r2, r3
  406bd8:	6022      	str	r2, [r4, #0]
  406bda:	4621      	mov	r1, r4
  406bdc:	f7ff fc4a 	bl	406474 <_fflush_r>
  406be0:	9b01      	ldr	r3, [sp, #4]
  406be2:	2800      	cmp	r0, #0
  406be4:	f47f af28 	bne.w	406a38 <__sfvwrite_r+0xfc>
  406be8:	461f      	mov	r7, r3
  406bea:	e750      	b.n	406a8e <__sfvwrite_r+0x152>
  406bec:	9800      	ldr	r0, [sp, #0]
  406bee:	f000 fd47 	bl	407680 <_realloc_r>
  406bf2:	4683      	mov	fp, r0
  406bf4:	2800      	cmp	r0, #0
  406bf6:	d1c5      	bne.n	406b84 <__sfvwrite_r+0x248>
  406bf8:	9d00      	ldr	r5, [sp, #0]
  406bfa:	6921      	ldr	r1, [r4, #16]
  406bfc:	4628      	mov	r0, r5
  406bfe:	f7ff fdb7 	bl	406770 <_free_r>
  406c02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406c06:	220c      	movs	r2, #12
  406c08:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  406c0c:	602a      	str	r2, [r5, #0]
  406c0e:	e715      	b.n	406a3c <__sfvwrite_r+0x100>
  406c10:	f106 0901 	add.w	r9, r6, #1
  406c14:	e722      	b.n	406a5c <__sfvwrite_r+0x120>
  406c16:	f04f 30ff 	mov.w	r0, #4294967295
  406c1a:	e6bf      	b.n	40699c <__sfvwrite_r+0x60>
  406c1c:	9a00      	ldr	r2, [sp, #0]
  406c1e:	230c      	movs	r3, #12
  406c20:	6013      	str	r3, [r2, #0]
  406c22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406c26:	e709      	b.n	406a3c <__sfvwrite_r+0x100>
  406c28:	7ffffc00 	.word	0x7ffffc00

00406c2c <_fwalk_reent>:
  406c2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406c30:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  406c34:	d01f      	beq.n	406c76 <_fwalk_reent+0x4a>
  406c36:	4688      	mov	r8, r1
  406c38:	4606      	mov	r6, r0
  406c3a:	f04f 0900 	mov.w	r9, #0
  406c3e:	687d      	ldr	r5, [r7, #4]
  406c40:	68bc      	ldr	r4, [r7, #8]
  406c42:	3d01      	subs	r5, #1
  406c44:	d411      	bmi.n	406c6a <_fwalk_reent+0x3e>
  406c46:	89a3      	ldrh	r3, [r4, #12]
  406c48:	2b01      	cmp	r3, #1
  406c4a:	f105 35ff 	add.w	r5, r5, #4294967295
  406c4e:	d908      	bls.n	406c62 <_fwalk_reent+0x36>
  406c50:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  406c54:	3301      	adds	r3, #1
  406c56:	4621      	mov	r1, r4
  406c58:	4630      	mov	r0, r6
  406c5a:	d002      	beq.n	406c62 <_fwalk_reent+0x36>
  406c5c:	47c0      	blx	r8
  406c5e:	ea49 0900 	orr.w	r9, r9, r0
  406c62:	1c6b      	adds	r3, r5, #1
  406c64:	f104 0468 	add.w	r4, r4, #104	; 0x68
  406c68:	d1ed      	bne.n	406c46 <_fwalk_reent+0x1a>
  406c6a:	683f      	ldr	r7, [r7, #0]
  406c6c:	2f00      	cmp	r7, #0
  406c6e:	d1e6      	bne.n	406c3e <_fwalk_reent+0x12>
  406c70:	4648      	mov	r0, r9
  406c72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406c76:	46b9      	mov	r9, r7
  406c78:	4648      	mov	r0, r9
  406c7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406c7e:	bf00      	nop

00406c80 <__locale_mb_cur_max>:
  406c80:	4b04      	ldr	r3, [pc, #16]	; (406c94 <__locale_mb_cur_max+0x14>)
  406c82:	4a05      	ldr	r2, [pc, #20]	; (406c98 <__locale_mb_cur_max+0x18>)
  406c84:	681b      	ldr	r3, [r3, #0]
  406c86:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  406c88:	2b00      	cmp	r3, #0
  406c8a:	bf08      	it	eq
  406c8c:	4613      	moveq	r3, r2
  406c8e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
  406c92:	4770      	bx	lr
  406c94:	20400010 	.word	0x20400010
  406c98:	20400854 	.word	0x20400854

00406c9c <_localeconv_r>:
  406c9c:	4a04      	ldr	r2, [pc, #16]	; (406cb0 <_localeconv_r+0x14>)
  406c9e:	4b05      	ldr	r3, [pc, #20]	; (406cb4 <_localeconv_r+0x18>)
  406ca0:	6812      	ldr	r2, [r2, #0]
  406ca2:	6b50      	ldr	r0, [r2, #52]	; 0x34
  406ca4:	2800      	cmp	r0, #0
  406ca6:	bf08      	it	eq
  406ca8:	4618      	moveq	r0, r3
  406caa:	30f0      	adds	r0, #240	; 0xf0
  406cac:	4770      	bx	lr
  406cae:	bf00      	nop
  406cb0:	20400010 	.word	0x20400010
  406cb4:	20400854 	.word	0x20400854

00406cb8 <__retarget_lock_init_recursive>:
  406cb8:	4770      	bx	lr
  406cba:	bf00      	nop

00406cbc <__retarget_lock_close_recursive>:
  406cbc:	4770      	bx	lr
  406cbe:	bf00      	nop

00406cc0 <__retarget_lock_acquire_recursive>:
  406cc0:	4770      	bx	lr
  406cc2:	bf00      	nop

00406cc4 <__retarget_lock_release_recursive>:
  406cc4:	4770      	bx	lr
  406cc6:	bf00      	nop

00406cc8 <__swhatbuf_r>:
  406cc8:	b570      	push	{r4, r5, r6, lr}
  406cca:	460c      	mov	r4, r1
  406ccc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406cd0:	2900      	cmp	r1, #0
  406cd2:	b090      	sub	sp, #64	; 0x40
  406cd4:	4615      	mov	r5, r2
  406cd6:	461e      	mov	r6, r3
  406cd8:	db14      	blt.n	406d04 <__swhatbuf_r+0x3c>
  406cda:	aa01      	add	r2, sp, #4
  406cdc:	f001 f8e4 	bl	407ea8 <_fstat_r>
  406ce0:	2800      	cmp	r0, #0
  406ce2:	db0f      	blt.n	406d04 <__swhatbuf_r+0x3c>
  406ce4:	9a02      	ldr	r2, [sp, #8]
  406ce6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  406cea:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  406cee:	fab2 f282 	clz	r2, r2
  406cf2:	0952      	lsrs	r2, r2, #5
  406cf4:	f44f 6380 	mov.w	r3, #1024	; 0x400
  406cf8:	f44f 6000 	mov.w	r0, #2048	; 0x800
  406cfc:	6032      	str	r2, [r6, #0]
  406cfe:	602b      	str	r3, [r5, #0]
  406d00:	b010      	add	sp, #64	; 0x40
  406d02:	bd70      	pop	{r4, r5, r6, pc}
  406d04:	89a2      	ldrh	r2, [r4, #12]
  406d06:	2300      	movs	r3, #0
  406d08:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  406d0c:	6033      	str	r3, [r6, #0]
  406d0e:	d004      	beq.n	406d1a <__swhatbuf_r+0x52>
  406d10:	2240      	movs	r2, #64	; 0x40
  406d12:	4618      	mov	r0, r3
  406d14:	602a      	str	r2, [r5, #0]
  406d16:	b010      	add	sp, #64	; 0x40
  406d18:	bd70      	pop	{r4, r5, r6, pc}
  406d1a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  406d1e:	602b      	str	r3, [r5, #0]
  406d20:	b010      	add	sp, #64	; 0x40
  406d22:	bd70      	pop	{r4, r5, r6, pc}

00406d24 <__smakebuf_r>:
  406d24:	898a      	ldrh	r2, [r1, #12]
  406d26:	0792      	lsls	r2, r2, #30
  406d28:	460b      	mov	r3, r1
  406d2a:	d506      	bpl.n	406d3a <__smakebuf_r+0x16>
  406d2c:	f101 0243 	add.w	r2, r1, #67	; 0x43
  406d30:	2101      	movs	r1, #1
  406d32:	601a      	str	r2, [r3, #0]
  406d34:	611a      	str	r2, [r3, #16]
  406d36:	6159      	str	r1, [r3, #20]
  406d38:	4770      	bx	lr
  406d3a:	b5f0      	push	{r4, r5, r6, r7, lr}
  406d3c:	b083      	sub	sp, #12
  406d3e:	ab01      	add	r3, sp, #4
  406d40:	466a      	mov	r2, sp
  406d42:	460c      	mov	r4, r1
  406d44:	4606      	mov	r6, r0
  406d46:	f7ff ffbf 	bl	406cc8 <__swhatbuf_r>
  406d4a:	9900      	ldr	r1, [sp, #0]
  406d4c:	4605      	mov	r5, r0
  406d4e:	4630      	mov	r0, r6
  406d50:	f7fb fcaa 	bl	4026a8 <_malloc_r>
  406d54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406d58:	b1d8      	cbz	r0, 406d92 <__smakebuf_r+0x6e>
  406d5a:	9a01      	ldr	r2, [sp, #4]
  406d5c:	4f15      	ldr	r7, [pc, #84]	; (406db4 <__smakebuf_r+0x90>)
  406d5e:	9900      	ldr	r1, [sp, #0]
  406d60:	63f7      	str	r7, [r6, #60]	; 0x3c
  406d62:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  406d66:	81a3      	strh	r3, [r4, #12]
  406d68:	6020      	str	r0, [r4, #0]
  406d6a:	6120      	str	r0, [r4, #16]
  406d6c:	6161      	str	r1, [r4, #20]
  406d6e:	b91a      	cbnz	r2, 406d78 <__smakebuf_r+0x54>
  406d70:	432b      	orrs	r3, r5
  406d72:	81a3      	strh	r3, [r4, #12]
  406d74:	b003      	add	sp, #12
  406d76:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406d78:	4630      	mov	r0, r6
  406d7a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  406d7e:	f001 f8a7 	bl	407ed0 <_isatty_r>
  406d82:	b1a0      	cbz	r0, 406dae <__smakebuf_r+0x8a>
  406d84:	89a3      	ldrh	r3, [r4, #12]
  406d86:	f023 0303 	bic.w	r3, r3, #3
  406d8a:	f043 0301 	orr.w	r3, r3, #1
  406d8e:	b21b      	sxth	r3, r3
  406d90:	e7ee      	b.n	406d70 <__smakebuf_r+0x4c>
  406d92:	059a      	lsls	r2, r3, #22
  406d94:	d4ee      	bmi.n	406d74 <__smakebuf_r+0x50>
  406d96:	f023 0303 	bic.w	r3, r3, #3
  406d9a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  406d9e:	f043 0302 	orr.w	r3, r3, #2
  406da2:	2101      	movs	r1, #1
  406da4:	81a3      	strh	r3, [r4, #12]
  406da6:	6022      	str	r2, [r4, #0]
  406da8:	6122      	str	r2, [r4, #16]
  406daa:	6161      	str	r1, [r4, #20]
  406dac:	e7e2      	b.n	406d74 <__smakebuf_r+0x50>
  406dae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  406db2:	e7dd      	b.n	406d70 <__smakebuf_r+0x4c>
  406db4:	004064c9 	.word	0x004064c9

00406db8 <__ascii_mbtowc>:
  406db8:	b082      	sub	sp, #8
  406dba:	b149      	cbz	r1, 406dd0 <__ascii_mbtowc+0x18>
  406dbc:	b15a      	cbz	r2, 406dd6 <__ascii_mbtowc+0x1e>
  406dbe:	b16b      	cbz	r3, 406ddc <__ascii_mbtowc+0x24>
  406dc0:	7813      	ldrb	r3, [r2, #0]
  406dc2:	600b      	str	r3, [r1, #0]
  406dc4:	7812      	ldrb	r2, [r2, #0]
  406dc6:	1c10      	adds	r0, r2, #0
  406dc8:	bf18      	it	ne
  406dca:	2001      	movne	r0, #1
  406dcc:	b002      	add	sp, #8
  406dce:	4770      	bx	lr
  406dd0:	a901      	add	r1, sp, #4
  406dd2:	2a00      	cmp	r2, #0
  406dd4:	d1f3      	bne.n	406dbe <__ascii_mbtowc+0x6>
  406dd6:	4610      	mov	r0, r2
  406dd8:	b002      	add	sp, #8
  406dda:	4770      	bx	lr
  406ddc:	f06f 0001 	mvn.w	r0, #1
  406de0:	e7f4      	b.n	406dcc <__ascii_mbtowc+0x14>
  406de2:	bf00      	nop
	...

00406df0 <memchr>:
  406df0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406df4:	2a10      	cmp	r2, #16
  406df6:	db2b      	blt.n	406e50 <memchr+0x60>
  406df8:	f010 0f07 	tst.w	r0, #7
  406dfc:	d008      	beq.n	406e10 <memchr+0x20>
  406dfe:	f810 3b01 	ldrb.w	r3, [r0], #1
  406e02:	3a01      	subs	r2, #1
  406e04:	428b      	cmp	r3, r1
  406e06:	d02d      	beq.n	406e64 <memchr+0x74>
  406e08:	f010 0f07 	tst.w	r0, #7
  406e0c:	b342      	cbz	r2, 406e60 <memchr+0x70>
  406e0e:	d1f6      	bne.n	406dfe <memchr+0xe>
  406e10:	b4f0      	push	{r4, r5, r6, r7}
  406e12:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  406e16:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  406e1a:	f022 0407 	bic.w	r4, r2, #7
  406e1e:	f07f 0700 	mvns.w	r7, #0
  406e22:	2300      	movs	r3, #0
  406e24:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  406e28:	3c08      	subs	r4, #8
  406e2a:	ea85 0501 	eor.w	r5, r5, r1
  406e2e:	ea86 0601 	eor.w	r6, r6, r1
  406e32:	fa85 f547 	uadd8	r5, r5, r7
  406e36:	faa3 f587 	sel	r5, r3, r7
  406e3a:	fa86 f647 	uadd8	r6, r6, r7
  406e3e:	faa5 f687 	sel	r6, r5, r7
  406e42:	b98e      	cbnz	r6, 406e68 <memchr+0x78>
  406e44:	d1ee      	bne.n	406e24 <memchr+0x34>
  406e46:	bcf0      	pop	{r4, r5, r6, r7}
  406e48:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406e4c:	f002 0207 	and.w	r2, r2, #7
  406e50:	b132      	cbz	r2, 406e60 <memchr+0x70>
  406e52:	f810 3b01 	ldrb.w	r3, [r0], #1
  406e56:	3a01      	subs	r2, #1
  406e58:	ea83 0301 	eor.w	r3, r3, r1
  406e5c:	b113      	cbz	r3, 406e64 <memchr+0x74>
  406e5e:	d1f8      	bne.n	406e52 <memchr+0x62>
  406e60:	2000      	movs	r0, #0
  406e62:	4770      	bx	lr
  406e64:	3801      	subs	r0, #1
  406e66:	4770      	bx	lr
  406e68:	2d00      	cmp	r5, #0
  406e6a:	bf06      	itte	eq
  406e6c:	4635      	moveq	r5, r6
  406e6e:	3803      	subeq	r0, #3
  406e70:	3807      	subne	r0, #7
  406e72:	f015 0f01 	tst.w	r5, #1
  406e76:	d107      	bne.n	406e88 <memchr+0x98>
  406e78:	3001      	adds	r0, #1
  406e7a:	f415 7f80 	tst.w	r5, #256	; 0x100
  406e7e:	bf02      	ittt	eq
  406e80:	3001      	addeq	r0, #1
  406e82:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  406e86:	3001      	addeq	r0, #1
  406e88:	bcf0      	pop	{r4, r5, r6, r7}
  406e8a:	3801      	subs	r0, #1
  406e8c:	4770      	bx	lr
  406e8e:	bf00      	nop

00406e90 <memcpy>:
  406e90:	4684      	mov	ip, r0
  406e92:	ea41 0300 	orr.w	r3, r1, r0
  406e96:	f013 0303 	ands.w	r3, r3, #3
  406e9a:	d16d      	bne.n	406f78 <memcpy+0xe8>
  406e9c:	3a40      	subs	r2, #64	; 0x40
  406e9e:	d341      	bcc.n	406f24 <memcpy+0x94>
  406ea0:	f851 3b04 	ldr.w	r3, [r1], #4
  406ea4:	f840 3b04 	str.w	r3, [r0], #4
  406ea8:	f851 3b04 	ldr.w	r3, [r1], #4
  406eac:	f840 3b04 	str.w	r3, [r0], #4
  406eb0:	f851 3b04 	ldr.w	r3, [r1], #4
  406eb4:	f840 3b04 	str.w	r3, [r0], #4
  406eb8:	f851 3b04 	ldr.w	r3, [r1], #4
  406ebc:	f840 3b04 	str.w	r3, [r0], #4
  406ec0:	f851 3b04 	ldr.w	r3, [r1], #4
  406ec4:	f840 3b04 	str.w	r3, [r0], #4
  406ec8:	f851 3b04 	ldr.w	r3, [r1], #4
  406ecc:	f840 3b04 	str.w	r3, [r0], #4
  406ed0:	f851 3b04 	ldr.w	r3, [r1], #4
  406ed4:	f840 3b04 	str.w	r3, [r0], #4
  406ed8:	f851 3b04 	ldr.w	r3, [r1], #4
  406edc:	f840 3b04 	str.w	r3, [r0], #4
  406ee0:	f851 3b04 	ldr.w	r3, [r1], #4
  406ee4:	f840 3b04 	str.w	r3, [r0], #4
  406ee8:	f851 3b04 	ldr.w	r3, [r1], #4
  406eec:	f840 3b04 	str.w	r3, [r0], #4
  406ef0:	f851 3b04 	ldr.w	r3, [r1], #4
  406ef4:	f840 3b04 	str.w	r3, [r0], #4
  406ef8:	f851 3b04 	ldr.w	r3, [r1], #4
  406efc:	f840 3b04 	str.w	r3, [r0], #4
  406f00:	f851 3b04 	ldr.w	r3, [r1], #4
  406f04:	f840 3b04 	str.w	r3, [r0], #4
  406f08:	f851 3b04 	ldr.w	r3, [r1], #4
  406f0c:	f840 3b04 	str.w	r3, [r0], #4
  406f10:	f851 3b04 	ldr.w	r3, [r1], #4
  406f14:	f840 3b04 	str.w	r3, [r0], #4
  406f18:	f851 3b04 	ldr.w	r3, [r1], #4
  406f1c:	f840 3b04 	str.w	r3, [r0], #4
  406f20:	3a40      	subs	r2, #64	; 0x40
  406f22:	d2bd      	bcs.n	406ea0 <memcpy+0x10>
  406f24:	3230      	adds	r2, #48	; 0x30
  406f26:	d311      	bcc.n	406f4c <memcpy+0xbc>
  406f28:	f851 3b04 	ldr.w	r3, [r1], #4
  406f2c:	f840 3b04 	str.w	r3, [r0], #4
  406f30:	f851 3b04 	ldr.w	r3, [r1], #4
  406f34:	f840 3b04 	str.w	r3, [r0], #4
  406f38:	f851 3b04 	ldr.w	r3, [r1], #4
  406f3c:	f840 3b04 	str.w	r3, [r0], #4
  406f40:	f851 3b04 	ldr.w	r3, [r1], #4
  406f44:	f840 3b04 	str.w	r3, [r0], #4
  406f48:	3a10      	subs	r2, #16
  406f4a:	d2ed      	bcs.n	406f28 <memcpy+0x98>
  406f4c:	320c      	adds	r2, #12
  406f4e:	d305      	bcc.n	406f5c <memcpy+0xcc>
  406f50:	f851 3b04 	ldr.w	r3, [r1], #4
  406f54:	f840 3b04 	str.w	r3, [r0], #4
  406f58:	3a04      	subs	r2, #4
  406f5a:	d2f9      	bcs.n	406f50 <memcpy+0xc0>
  406f5c:	3204      	adds	r2, #4
  406f5e:	d008      	beq.n	406f72 <memcpy+0xe2>
  406f60:	07d2      	lsls	r2, r2, #31
  406f62:	bf1c      	itt	ne
  406f64:	f811 3b01 	ldrbne.w	r3, [r1], #1
  406f68:	f800 3b01 	strbne.w	r3, [r0], #1
  406f6c:	d301      	bcc.n	406f72 <memcpy+0xe2>
  406f6e:	880b      	ldrh	r3, [r1, #0]
  406f70:	8003      	strh	r3, [r0, #0]
  406f72:	4660      	mov	r0, ip
  406f74:	4770      	bx	lr
  406f76:	bf00      	nop
  406f78:	2a08      	cmp	r2, #8
  406f7a:	d313      	bcc.n	406fa4 <memcpy+0x114>
  406f7c:	078b      	lsls	r3, r1, #30
  406f7e:	d08d      	beq.n	406e9c <memcpy+0xc>
  406f80:	f010 0303 	ands.w	r3, r0, #3
  406f84:	d08a      	beq.n	406e9c <memcpy+0xc>
  406f86:	f1c3 0304 	rsb	r3, r3, #4
  406f8a:	1ad2      	subs	r2, r2, r3
  406f8c:	07db      	lsls	r3, r3, #31
  406f8e:	bf1c      	itt	ne
  406f90:	f811 3b01 	ldrbne.w	r3, [r1], #1
  406f94:	f800 3b01 	strbne.w	r3, [r0], #1
  406f98:	d380      	bcc.n	406e9c <memcpy+0xc>
  406f9a:	f831 3b02 	ldrh.w	r3, [r1], #2
  406f9e:	f820 3b02 	strh.w	r3, [r0], #2
  406fa2:	e77b      	b.n	406e9c <memcpy+0xc>
  406fa4:	3a04      	subs	r2, #4
  406fa6:	d3d9      	bcc.n	406f5c <memcpy+0xcc>
  406fa8:	3a01      	subs	r2, #1
  406faa:	f811 3b01 	ldrb.w	r3, [r1], #1
  406fae:	f800 3b01 	strb.w	r3, [r0], #1
  406fb2:	d2f9      	bcs.n	406fa8 <memcpy+0x118>
  406fb4:	780b      	ldrb	r3, [r1, #0]
  406fb6:	7003      	strb	r3, [r0, #0]
  406fb8:	784b      	ldrb	r3, [r1, #1]
  406fba:	7043      	strb	r3, [r0, #1]
  406fbc:	788b      	ldrb	r3, [r1, #2]
  406fbe:	7083      	strb	r3, [r0, #2]
  406fc0:	4660      	mov	r0, ip
  406fc2:	4770      	bx	lr

00406fc4 <memmove>:
  406fc4:	4288      	cmp	r0, r1
  406fc6:	b5f0      	push	{r4, r5, r6, r7, lr}
  406fc8:	d90d      	bls.n	406fe6 <memmove+0x22>
  406fca:	188b      	adds	r3, r1, r2
  406fcc:	4298      	cmp	r0, r3
  406fce:	d20a      	bcs.n	406fe6 <memmove+0x22>
  406fd0:	1884      	adds	r4, r0, r2
  406fd2:	2a00      	cmp	r2, #0
  406fd4:	d051      	beq.n	40707a <memmove+0xb6>
  406fd6:	4622      	mov	r2, r4
  406fd8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  406fdc:	f802 4d01 	strb.w	r4, [r2, #-1]!
  406fe0:	4299      	cmp	r1, r3
  406fe2:	d1f9      	bne.n	406fd8 <memmove+0x14>
  406fe4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406fe6:	2a0f      	cmp	r2, #15
  406fe8:	d948      	bls.n	40707c <memmove+0xb8>
  406fea:	ea41 0300 	orr.w	r3, r1, r0
  406fee:	079b      	lsls	r3, r3, #30
  406ff0:	d146      	bne.n	407080 <memmove+0xbc>
  406ff2:	f100 0410 	add.w	r4, r0, #16
  406ff6:	f101 0310 	add.w	r3, r1, #16
  406ffa:	4615      	mov	r5, r2
  406ffc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  407000:	f844 6c10 	str.w	r6, [r4, #-16]
  407004:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  407008:	f844 6c0c 	str.w	r6, [r4, #-12]
  40700c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  407010:	f844 6c08 	str.w	r6, [r4, #-8]
  407014:	3d10      	subs	r5, #16
  407016:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40701a:	f844 6c04 	str.w	r6, [r4, #-4]
  40701e:	2d0f      	cmp	r5, #15
  407020:	f103 0310 	add.w	r3, r3, #16
  407024:	f104 0410 	add.w	r4, r4, #16
  407028:	d8e8      	bhi.n	406ffc <memmove+0x38>
  40702a:	f1a2 0310 	sub.w	r3, r2, #16
  40702e:	f023 030f 	bic.w	r3, r3, #15
  407032:	f002 0e0f 	and.w	lr, r2, #15
  407036:	3310      	adds	r3, #16
  407038:	f1be 0f03 	cmp.w	lr, #3
  40703c:	4419      	add	r1, r3
  40703e:	4403      	add	r3, r0
  407040:	d921      	bls.n	407086 <memmove+0xc2>
  407042:	1f1e      	subs	r6, r3, #4
  407044:	460d      	mov	r5, r1
  407046:	4674      	mov	r4, lr
  407048:	3c04      	subs	r4, #4
  40704a:	f855 7b04 	ldr.w	r7, [r5], #4
  40704e:	f846 7f04 	str.w	r7, [r6, #4]!
  407052:	2c03      	cmp	r4, #3
  407054:	d8f8      	bhi.n	407048 <memmove+0x84>
  407056:	f1ae 0404 	sub.w	r4, lr, #4
  40705a:	f024 0403 	bic.w	r4, r4, #3
  40705e:	3404      	adds	r4, #4
  407060:	4421      	add	r1, r4
  407062:	4423      	add	r3, r4
  407064:	f002 0203 	and.w	r2, r2, #3
  407068:	b162      	cbz	r2, 407084 <memmove+0xc0>
  40706a:	3b01      	subs	r3, #1
  40706c:	440a      	add	r2, r1
  40706e:	f811 4b01 	ldrb.w	r4, [r1], #1
  407072:	f803 4f01 	strb.w	r4, [r3, #1]!
  407076:	428a      	cmp	r2, r1
  407078:	d1f9      	bne.n	40706e <memmove+0xaa>
  40707a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40707c:	4603      	mov	r3, r0
  40707e:	e7f3      	b.n	407068 <memmove+0xa4>
  407080:	4603      	mov	r3, r0
  407082:	e7f2      	b.n	40706a <memmove+0xa6>
  407084:	bdf0      	pop	{r4, r5, r6, r7, pc}
  407086:	4672      	mov	r2, lr
  407088:	e7ee      	b.n	407068 <memmove+0xa4>
  40708a:	bf00      	nop

0040708c <_Balloc>:
  40708c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40708e:	b570      	push	{r4, r5, r6, lr}
  407090:	4605      	mov	r5, r0
  407092:	460c      	mov	r4, r1
  407094:	b14b      	cbz	r3, 4070aa <_Balloc+0x1e>
  407096:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40709a:	b180      	cbz	r0, 4070be <_Balloc+0x32>
  40709c:	6802      	ldr	r2, [r0, #0]
  40709e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  4070a2:	2300      	movs	r3, #0
  4070a4:	6103      	str	r3, [r0, #16]
  4070a6:	60c3      	str	r3, [r0, #12]
  4070a8:	bd70      	pop	{r4, r5, r6, pc}
  4070aa:	2221      	movs	r2, #33	; 0x21
  4070ac:	2104      	movs	r1, #4
  4070ae:	f000 fe57 	bl	407d60 <_calloc_r>
  4070b2:	64e8      	str	r0, [r5, #76]	; 0x4c
  4070b4:	4603      	mov	r3, r0
  4070b6:	2800      	cmp	r0, #0
  4070b8:	d1ed      	bne.n	407096 <_Balloc+0xa>
  4070ba:	2000      	movs	r0, #0
  4070bc:	bd70      	pop	{r4, r5, r6, pc}
  4070be:	2101      	movs	r1, #1
  4070c0:	fa01 f604 	lsl.w	r6, r1, r4
  4070c4:	1d72      	adds	r2, r6, #5
  4070c6:	4628      	mov	r0, r5
  4070c8:	0092      	lsls	r2, r2, #2
  4070ca:	f000 fe49 	bl	407d60 <_calloc_r>
  4070ce:	2800      	cmp	r0, #0
  4070d0:	d0f3      	beq.n	4070ba <_Balloc+0x2e>
  4070d2:	6044      	str	r4, [r0, #4]
  4070d4:	6086      	str	r6, [r0, #8]
  4070d6:	e7e4      	b.n	4070a2 <_Balloc+0x16>

004070d8 <_Bfree>:
  4070d8:	b131      	cbz	r1, 4070e8 <_Bfree+0x10>
  4070da:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4070dc:	684a      	ldr	r2, [r1, #4]
  4070de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4070e2:	6008      	str	r0, [r1, #0]
  4070e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4070e8:	4770      	bx	lr
  4070ea:	bf00      	nop

004070ec <__multadd>:
  4070ec:	b5f0      	push	{r4, r5, r6, r7, lr}
  4070ee:	690c      	ldr	r4, [r1, #16]
  4070f0:	b083      	sub	sp, #12
  4070f2:	460d      	mov	r5, r1
  4070f4:	4606      	mov	r6, r0
  4070f6:	f101 0e14 	add.w	lr, r1, #20
  4070fa:	2700      	movs	r7, #0
  4070fc:	f8de 0000 	ldr.w	r0, [lr]
  407100:	b281      	uxth	r1, r0
  407102:	fb02 3301 	mla	r3, r2, r1, r3
  407106:	0c01      	lsrs	r1, r0, #16
  407108:	0c18      	lsrs	r0, r3, #16
  40710a:	fb02 0101 	mla	r1, r2, r1, r0
  40710e:	b29b      	uxth	r3, r3
  407110:	3701      	adds	r7, #1
  407112:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  407116:	42bc      	cmp	r4, r7
  407118:	f84e 3b04 	str.w	r3, [lr], #4
  40711c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  407120:	dcec      	bgt.n	4070fc <__multadd+0x10>
  407122:	b13b      	cbz	r3, 407134 <__multadd+0x48>
  407124:	68aa      	ldr	r2, [r5, #8]
  407126:	4294      	cmp	r4, r2
  407128:	da07      	bge.n	40713a <__multadd+0x4e>
  40712a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40712e:	3401      	adds	r4, #1
  407130:	6153      	str	r3, [r2, #20]
  407132:	612c      	str	r4, [r5, #16]
  407134:	4628      	mov	r0, r5
  407136:	b003      	add	sp, #12
  407138:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40713a:	6869      	ldr	r1, [r5, #4]
  40713c:	9301      	str	r3, [sp, #4]
  40713e:	3101      	adds	r1, #1
  407140:	4630      	mov	r0, r6
  407142:	f7ff ffa3 	bl	40708c <_Balloc>
  407146:	692a      	ldr	r2, [r5, #16]
  407148:	3202      	adds	r2, #2
  40714a:	f105 010c 	add.w	r1, r5, #12
  40714e:	4607      	mov	r7, r0
  407150:	0092      	lsls	r2, r2, #2
  407152:	300c      	adds	r0, #12
  407154:	f7ff fe9c 	bl	406e90 <memcpy>
  407158:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40715a:	6869      	ldr	r1, [r5, #4]
  40715c:	9b01      	ldr	r3, [sp, #4]
  40715e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  407162:	6028      	str	r0, [r5, #0]
  407164:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  407168:	463d      	mov	r5, r7
  40716a:	e7de      	b.n	40712a <__multadd+0x3e>

0040716c <__hi0bits>:
  40716c:	0c02      	lsrs	r2, r0, #16
  40716e:	0412      	lsls	r2, r2, #16
  407170:	4603      	mov	r3, r0
  407172:	b9b2      	cbnz	r2, 4071a2 <__hi0bits+0x36>
  407174:	0403      	lsls	r3, r0, #16
  407176:	2010      	movs	r0, #16
  407178:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40717c:	bf04      	itt	eq
  40717e:	021b      	lsleq	r3, r3, #8
  407180:	3008      	addeq	r0, #8
  407182:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  407186:	bf04      	itt	eq
  407188:	011b      	lsleq	r3, r3, #4
  40718a:	3004      	addeq	r0, #4
  40718c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  407190:	bf04      	itt	eq
  407192:	009b      	lsleq	r3, r3, #2
  407194:	3002      	addeq	r0, #2
  407196:	2b00      	cmp	r3, #0
  407198:	db02      	blt.n	4071a0 <__hi0bits+0x34>
  40719a:	005b      	lsls	r3, r3, #1
  40719c:	d403      	bmi.n	4071a6 <__hi0bits+0x3a>
  40719e:	2020      	movs	r0, #32
  4071a0:	4770      	bx	lr
  4071a2:	2000      	movs	r0, #0
  4071a4:	e7e8      	b.n	407178 <__hi0bits+0xc>
  4071a6:	3001      	adds	r0, #1
  4071a8:	4770      	bx	lr
  4071aa:	bf00      	nop

004071ac <__lo0bits>:
  4071ac:	6803      	ldr	r3, [r0, #0]
  4071ae:	f013 0207 	ands.w	r2, r3, #7
  4071b2:	4601      	mov	r1, r0
  4071b4:	d007      	beq.n	4071c6 <__lo0bits+0x1a>
  4071b6:	07da      	lsls	r2, r3, #31
  4071b8:	d421      	bmi.n	4071fe <__lo0bits+0x52>
  4071ba:	0798      	lsls	r0, r3, #30
  4071bc:	d421      	bmi.n	407202 <__lo0bits+0x56>
  4071be:	089b      	lsrs	r3, r3, #2
  4071c0:	600b      	str	r3, [r1, #0]
  4071c2:	2002      	movs	r0, #2
  4071c4:	4770      	bx	lr
  4071c6:	b298      	uxth	r0, r3
  4071c8:	b198      	cbz	r0, 4071f2 <__lo0bits+0x46>
  4071ca:	4610      	mov	r0, r2
  4071cc:	f013 0fff 	tst.w	r3, #255	; 0xff
  4071d0:	bf04      	itt	eq
  4071d2:	0a1b      	lsreq	r3, r3, #8
  4071d4:	3008      	addeq	r0, #8
  4071d6:	071a      	lsls	r2, r3, #28
  4071d8:	bf04      	itt	eq
  4071da:	091b      	lsreq	r3, r3, #4
  4071dc:	3004      	addeq	r0, #4
  4071de:	079a      	lsls	r2, r3, #30
  4071e0:	bf04      	itt	eq
  4071e2:	089b      	lsreq	r3, r3, #2
  4071e4:	3002      	addeq	r0, #2
  4071e6:	07da      	lsls	r2, r3, #31
  4071e8:	d407      	bmi.n	4071fa <__lo0bits+0x4e>
  4071ea:	085b      	lsrs	r3, r3, #1
  4071ec:	d104      	bne.n	4071f8 <__lo0bits+0x4c>
  4071ee:	2020      	movs	r0, #32
  4071f0:	4770      	bx	lr
  4071f2:	0c1b      	lsrs	r3, r3, #16
  4071f4:	2010      	movs	r0, #16
  4071f6:	e7e9      	b.n	4071cc <__lo0bits+0x20>
  4071f8:	3001      	adds	r0, #1
  4071fa:	600b      	str	r3, [r1, #0]
  4071fc:	4770      	bx	lr
  4071fe:	2000      	movs	r0, #0
  407200:	4770      	bx	lr
  407202:	085b      	lsrs	r3, r3, #1
  407204:	600b      	str	r3, [r1, #0]
  407206:	2001      	movs	r0, #1
  407208:	4770      	bx	lr
  40720a:	bf00      	nop

0040720c <__i2b>:
  40720c:	b510      	push	{r4, lr}
  40720e:	460c      	mov	r4, r1
  407210:	2101      	movs	r1, #1
  407212:	f7ff ff3b 	bl	40708c <_Balloc>
  407216:	2201      	movs	r2, #1
  407218:	6144      	str	r4, [r0, #20]
  40721a:	6102      	str	r2, [r0, #16]
  40721c:	bd10      	pop	{r4, pc}
  40721e:	bf00      	nop

00407220 <__multiply>:
  407220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407224:	690c      	ldr	r4, [r1, #16]
  407226:	6915      	ldr	r5, [r2, #16]
  407228:	42ac      	cmp	r4, r5
  40722a:	b083      	sub	sp, #12
  40722c:	468b      	mov	fp, r1
  40722e:	4616      	mov	r6, r2
  407230:	da04      	bge.n	40723c <__multiply+0x1c>
  407232:	4622      	mov	r2, r4
  407234:	46b3      	mov	fp, r6
  407236:	462c      	mov	r4, r5
  407238:	460e      	mov	r6, r1
  40723a:	4615      	mov	r5, r2
  40723c:	f8db 3008 	ldr.w	r3, [fp, #8]
  407240:	f8db 1004 	ldr.w	r1, [fp, #4]
  407244:	eb04 0805 	add.w	r8, r4, r5
  407248:	4598      	cmp	r8, r3
  40724a:	bfc8      	it	gt
  40724c:	3101      	addgt	r1, #1
  40724e:	f7ff ff1d 	bl	40708c <_Balloc>
  407252:	f100 0914 	add.w	r9, r0, #20
  407256:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40725a:	45d1      	cmp	r9, sl
  40725c:	9000      	str	r0, [sp, #0]
  40725e:	d205      	bcs.n	40726c <__multiply+0x4c>
  407260:	464b      	mov	r3, r9
  407262:	2100      	movs	r1, #0
  407264:	f843 1b04 	str.w	r1, [r3], #4
  407268:	459a      	cmp	sl, r3
  40726a:	d8fb      	bhi.n	407264 <__multiply+0x44>
  40726c:	f106 0c14 	add.w	ip, r6, #20
  407270:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  407274:	f10b 0b14 	add.w	fp, fp, #20
  407278:	459c      	cmp	ip, r3
  40727a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40727e:	d24c      	bcs.n	40731a <__multiply+0xfa>
  407280:	f8cd a004 	str.w	sl, [sp, #4]
  407284:	469a      	mov	sl, r3
  407286:	f8dc 5000 	ldr.w	r5, [ip]
  40728a:	b2af      	uxth	r7, r5
  40728c:	b1ef      	cbz	r7, 4072ca <__multiply+0xaa>
  40728e:	2100      	movs	r1, #0
  407290:	464d      	mov	r5, r9
  407292:	465e      	mov	r6, fp
  407294:	460c      	mov	r4, r1
  407296:	f856 2b04 	ldr.w	r2, [r6], #4
  40729a:	6828      	ldr	r0, [r5, #0]
  40729c:	b293      	uxth	r3, r2
  40729e:	b281      	uxth	r1, r0
  4072a0:	fb07 1303 	mla	r3, r7, r3, r1
  4072a4:	0c12      	lsrs	r2, r2, #16
  4072a6:	0c01      	lsrs	r1, r0, #16
  4072a8:	4423      	add	r3, r4
  4072aa:	fb07 1102 	mla	r1, r7, r2, r1
  4072ae:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4072b2:	b29b      	uxth	r3, r3
  4072b4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4072b8:	45b6      	cmp	lr, r6
  4072ba:	f845 3b04 	str.w	r3, [r5], #4
  4072be:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4072c2:	d8e8      	bhi.n	407296 <__multiply+0x76>
  4072c4:	602c      	str	r4, [r5, #0]
  4072c6:	f8dc 5000 	ldr.w	r5, [ip]
  4072ca:	0c2d      	lsrs	r5, r5, #16
  4072cc:	d01d      	beq.n	40730a <__multiply+0xea>
  4072ce:	f8d9 3000 	ldr.w	r3, [r9]
  4072d2:	4648      	mov	r0, r9
  4072d4:	461c      	mov	r4, r3
  4072d6:	4659      	mov	r1, fp
  4072d8:	2200      	movs	r2, #0
  4072da:	880e      	ldrh	r6, [r1, #0]
  4072dc:	0c24      	lsrs	r4, r4, #16
  4072de:	fb05 4406 	mla	r4, r5, r6, r4
  4072e2:	4422      	add	r2, r4
  4072e4:	b29b      	uxth	r3, r3
  4072e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4072ea:	f840 3b04 	str.w	r3, [r0], #4
  4072ee:	f851 3b04 	ldr.w	r3, [r1], #4
  4072f2:	6804      	ldr	r4, [r0, #0]
  4072f4:	0c1b      	lsrs	r3, r3, #16
  4072f6:	b2a6      	uxth	r6, r4
  4072f8:	fb05 6303 	mla	r3, r5, r3, r6
  4072fc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  407300:	458e      	cmp	lr, r1
  407302:	ea4f 4213 	mov.w	r2, r3, lsr #16
  407306:	d8e8      	bhi.n	4072da <__multiply+0xba>
  407308:	6003      	str	r3, [r0, #0]
  40730a:	f10c 0c04 	add.w	ip, ip, #4
  40730e:	45e2      	cmp	sl, ip
  407310:	f109 0904 	add.w	r9, r9, #4
  407314:	d8b7      	bhi.n	407286 <__multiply+0x66>
  407316:	f8dd a004 	ldr.w	sl, [sp, #4]
  40731a:	f1b8 0f00 	cmp.w	r8, #0
  40731e:	dd0b      	ble.n	407338 <__multiply+0x118>
  407320:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  407324:	f1aa 0a04 	sub.w	sl, sl, #4
  407328:	b11b      	cbz	r3, 407332 <__multiply+0x112>
  40732a:	e005      	b.n	407338 <__multiply+0x118>
  40732c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  407330:	b913      	cbnz	r3, 407338 <__multiply+0x118>
  407332:	f1b8 0801 	subs.w	r8, r8, #1
  407336:	d1f9      	bne.n	40732c <__multiply+0x10c>
  407338:	9800      	ldr	r0, [sp, #0]
  40733a:	f8c0 8010 	str.w	r8, [r0, #16]
  40733e:	b003      	add	sp, #12
  407340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407344 <__pow5mult>:
  407344:	f012 0303 	ands.w	r3, r2, #3
  407348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40734c:	4614      	mov	r4, r2
  40734e:	4607      	mov	r7, r0
  407350:	d12e      	bne.n	4073b0 <__pow5mult+0x6c>
  407352:	460d      	mov	r5, r1
  407354:	10a4      	asrs	r4, r4, #2
  407356:	d01c      	beq.n	407392 <__pow5mult+0x4e>
  407358:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40735a:	b396      	cbz	r6, 4073c2 <__pow5mult+0x7e>
  40735c:	07e3      	lsls	r3, r4, #31
  40735e:	f04f 0800 	mov.w	r8, #0
  407362:	d406      	bmi.n	407372 <__pow5mult+0x2e>
  407364:	1064      	asrs	r4, r4, #1
  407366:	d014      	beq.n	407392 <__pow5mult+0x4e>
  407368:	6830      	ldr	r0, [r6, #0]
  40736a:	b1a8      	cbz	r0, 407398 <__pow5mult+0x54>
  40736c:	4606      	mov	r6, r0
  40736e:	07e3      	lsls	r3, r4, #31
  407370:	d5f8      	bpl.n	407364 <__pow5mult+0x20>
  407372:	4632      	mov	r2, r6
  407374:	4629      	mov	r1, r5
  407376:	4638      	mov	r0, r7
  407378:	f7ff ff52 	bl	407220 <__multiply>
  40737c:	b1b5      	cbz	r5, 4073ac <__pow5mult+0x68>
  40737e:	686a      	ldr	r2, [r5, #4]
  407380:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407382:	1064      	asrs	r4, r4, #1
  407384:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  407388:	6029      	str	r1, [r5, #0]
  40738a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40738e:	4605      	mov	r5, r0
  407390:	d1ea      	bne.n	407368 <__pow5mult+0x24>
  407392:	4628      	mov	r0, r5
  407394:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407398:	4632      	mov	r2, r6
  40739a:	4631      	mov	r1, r6
  40739c:	4638      	mov	r0, r7
  40739e:	f7ff ff3f 	bl	407220 <__multiply>
  4073a2:	6030      	str	r0, [r6, #0]
  4073a4:	f8c0 8000 	str.w	r8, [r0]
  4073a8:	4606      	mov	r6, r0
  4073aa:	e7e0      	b.n	40736e <__pow5mult+0x2a>
  4073ac:	4605      	mov	r5, r0
  4073ae:	e7d9      	b.n	407364 <__pow5mult+0x20>
  4073b0:	1e5a      	subs	r2, r3, #1
  4073b2:	4d0b      	ldr	r5, [pc, #44]	; (4073e0 <__pow5mult+0x9c>)
  4073b4:	2300      	movs	r3, #0
  4073b6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4073ba:	f7ff fe97 	bl	4070ec <__multadd>
  4073be:	4605      	mov	r5, r0
  4073c0:	e7c8      	b.n	407354 <__pow5mult+0x10>
  4073c2:	2101      	movs	r1, #1
  4073c4:	4638      	mov	r0, r7
  4073c6:	f7ff fe61 	bl	40708c <_Balloc>
  4073ca:	f240 2171 	movw	r1, #625	; 0x271
  4073ce:	2201      	movs	r2, #1
  4073d0:	2300      	movs	r3, #0
  4073d2:	6141      	str	r1, [r0, #20]
  4073d4:	6102      	str	r2, [r0, #16]
  4073d6:	4606      	mov	r6, r0
  4073d8:	64b8      	str	r0, [r7, #72]	; 0x48
  4073da:	6003      	str	r3, [r0, #0]
  4073dc:	e7be      	b.n	40735c <__pow5mult+0x18>
  4073de:	bf00      	nop
  4073e0:	00410a98 	.word	0x00410a98

004073e4 <__lshift>:
  4073e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4073e8:	4691      	mov	r9, r2
  4073ea:	690a      	ldr	r2, [r1, #16]
  4073ec:	688b      	ldr	r3, [r1, #8]
  4073ee:	ea4f 1469 	mov.w	r4, r9, asr #5
  4073f2:	eb04 0802 	add.w	r8, r4, r2
  4073f6:	f108 0501 	add.w	r5, r8, #1
  4073fa:	429d      	cmp	r5, r3
  4073fc:	460e      	mov	r6, r1
  4073fe:	4607      	mov	r7, r0
  407400:	6849      	ldr	r1, [r1, #4]
  407402:	dd04      	ble.n	40740e <__lshift+0x2a>
  407404:	005b      	lsls	r3, r3, #1
  407406:	429d      	cmp	r5, r3
  407408:	f101 0101 	add.w	r1, r1, #1
  40740c:	dcfa      	bgt.n	407404 <__lshift+0x20>
  40740e:	4638      	mov	r0, r7
  407410:	f7ff fe3c 	bl	40708c <_Balloc>
  407414:	2c00      	cmp	r4, #0
  407416:	f100 0314 	add.w	r3, r0, #20
  40741a:	dd06      	ble.n	40742a <__lshift+0x46>
  40741c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  407420:	2100      	movs	r1, #0
  407422:	f843 1b04 	str.w	r1, [r3], #4
  407426:	429a      	cmp	r2, r3
  407428:	d1fb      	bne.n	407422 <__lshift+0x3e>
  40742a:	6934      	ldr	r4, [r6, #16]
  40742c:	f106 0114 	add.w	r1, r6, #20
  407430:	f019 091f 	ands.w	r9, r9, #31
  407434:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  407438:	d01d      	beq.n	407476 <__lshift+0x92>
  40743a:	f1c9 0c20 	rsb	ip, r9, #32
  40743e:	2200      	movs	r2, #0
  407440:	680c      	ldr	r4, [r1, #0]
  407442:	fa04 f409 	lsl.w	r4, r4, r9
  407446:	4314      	orrs	r4, r2
  407448:	f843 4b04 	str.w	r4, [r3], #4
  40744c:	f851 2b04 	ldr.w	r2, [r1], #4
  407450:	458e      	cmp	lr, r1
  407452:	fa22 f20c 	lsr.w	r2, r2, ip
  407456:	d8f3      	bhi.n	407440 <__lshift+0x5c>
  407458:	601a      	str	r2, [r3, #0]
  40745a:	b10a      	cbz	r2, 407460 <__lshift+0x7c>
  40745c:	f108 0502 	add.w	r5, r8, #2
  407460:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407462:	6872      	ldr	r2, [r6, #4]
  407464:	3d01      	subs	r5, #1
  407466:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40746a:	6105      	str	r5, [r0, #16]
  40746c:	6031      	str	r1, [r6, #0]
  40746e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  407472:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407476:	3b04      	subs	r3, #4
  407478:	f851 2b04 	ldr.w	r2, [r1], #4
  40747c:	f843 2f04 	str.w	r2, [r3, #4]!
  407480:	458e      	cmp	lr, r1
  407482:	d8f9      	bhi.n	407478 <__lshift+0x94>
  407484:	e7ec      	b.n	407460 <__lshift+0x7c>
  407486:	bf00      	nop

00407488 <__mcmp>:
  407488:	b430      	push	{r4, r5}
  40748a:	690b      	ldr	r3, [r1, #16]
  40748c:	4605      	mov	r5, r0
  40748e:	6900      	ldr	r0, [r0, #16]
  407490:	1ac0      	subs	r0, r0, r3
  407492:	d10f      	bne.n	4074b4 <__mcmp+0x2c>
  407494:	009b      	lsls	r3, r3, #2
  407496:	3514      	adds	r5, #20
  407498:	3114      	adds	r1, #20
  40749a:	4419      	add	r1, r3
  40749c:	442b      	add	r3, r5
  40749e:	e001      	b.n	4074a4 <__mcmp+0x1c>
  4074a0:	429d      	cmp	r5, r3
  4074a2:	d207      	bcs.n	4074b4 <__mcmp+0x2c>
  4074a4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4074a8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4074ac:	4294      	cmp	r4, r2
  4074ae:	d0f7      	beq.n	4074a0 <__mcmp+0x18>
  4074b0:	d302      	bcc.n	4074b8 <__mcmp+0x30>
  4074b2:	2001      	movs	r0, #1
  4074b4:	bc30      	pop	{r4, r5}
  4074b6:	4770      	bx	lr
  4074b8:	f04f 30ff 	mov.w	r0, #4294967295
  4074bc:	e7fa      	b.n	4074b4 <__mcmp+0x2c>
  4074be:	bf00      	nop

004074c0 <__mdiff>:
  4074c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4074c4:	690f      	ldr	r7, [r1, #16]
  4074c6:	460e      	mov	r6, r1
  4074c8:	6911      	ldr	r1, [r2, #16]
  4074ca:	1a7f      	subs	r7, r7, r1
  4074cc:	2f00      	cmp	r7, #0
  4074ce:	4690      	mov	r8, r2
  4074d0:	d117      	bne.n	407502 <__mdiff+0x42>
  4074d2:	0089      	lsls	r1, r1, #2
  4074d4:	f106 0514 	add.w	r5, r6, #20
  4074d8:	f102 0e14 	add.w	lr, r2, #20
  4074dc:	186b      	adds	r3, r5, r1
  4074de:	4471      	add	r1, lr
  4074e0:	e001      	b.n	4074e6 <__mdiff+0x26>
  4074e2:	429d      	cmp	r5, r3
  4074e4:	d25c      	bcs.n	4075a0 <__mdiff+0xe0>
  4074e6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4074ea:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4074ee:	42a2      	cmp	r2, r4
  4074f0:	d0f7      	beq.n	4074e2 <__mdiff+0x22>
  4074f2:	d25e      	bcs.n	4075b2 <__mdiff+0xf2>
  4074f4:	4633      	mov	r3, r6
  4074f6:	462c      	mov	r4, r5
  4074f8:	4646      	mov	r6, r8
  4074fa:	4675      	mov	r5, lr
  4074fc:	4698      	mov	r8, r3
  4074fe:	2701      	movs	r7, #1
  407500:	e005      	b.n	40750e <__mdiff+0x4e>
  407502:	db58      	blt.n	4075b6 <__mdiff+0xf6>
  407504:	f106 0514 	add.w	r5, r6, #20
  407508:	f108 0414 	add.w	r4, r8, #20
  40750c:	2700      	movs	r7, #0
  40750e:	6871      	ldr	r1, [r6, #4]
  407510:	f7ff fdbc 	bl	40708c <_Balloc>
  407514:	f8d8 3010 	ldr.w	r3, [r8, #16]
  407518:	6936      	ldr	r6, [r6, #16]
  40751a:	60c7      	str	r7, [r0, #12]
  40751c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  407520:	46a6      	mov	lr, r4
  407522:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  407526:	f100 0414 	add.w	r4, r0, #20
  40752a:	2300      	movs	r3, #0
  40752c:	f85e 1b04 	ldr.w	r1, [lr], #4
  407530:	f855 8b04 	ldr.w	r8, [r5], #4
  407534:	b28a      	uxth	r2, r1
  407536:	fa13 f388 	uxtah	r3, r3, r8
  40753a:	0c09      	lsrs	r1, r1, #16
  40753c:	1a9a      	subs	r2, r3, r2
  40753e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  407542:	eb03 4322 	add.w	r3, r3, r2, asr #16
  407546:	b292      	uxth	r2, r2
  407548:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40754c:	45f4      	cmp	ip, lr
  40754e:	f844 2b04 	str.w	r2, [r4], #4
  407552:	ea4f 4323 	mov.w	r3, r3, asr #16
  407556:	d8e9      	bhi.n	40752c <__mdiff+0x6c>
  407558:	42af      	cmp	r7, r5
  40755a:	d917      	bls.n	40758c <__mdiff+0xcc>
  40755c:	46a4      	mov	ip, r4
  40755e:	46ae      	mov	lr, r5
  407560:	f85e 2b04 	ldr.w	r2, [lr], #4
  407564:	fa13 f382 	uxtah	r3, r3, r2
  407568:	1419      	asrs	r1, r3, #16
  40756a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40756e:	b29b      	uxth	r3, r3
  407570:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  407574:	4577      	cmp	r7, lr
  407576:	f84c 2b04 	str.w	r2, [ip], #4
  40757a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40757e:	d8ef      	bhi.n	407560 <__mdiff+0xa0>
  407580:	43ed      	mvns	r5, r5
  407582:	442f      	add	r7, r5
  407584:	f027 0703 	bic.w	r7, r7, #3
  407588:	3704      	adds	r7, #4
  40758a:	443c      	add	r4, r7
  40758c:	3c04      	subs	r4, #4
  40758e:	b922      	cbnz	r2, 40759a <__mdiff+0xda>
  407590:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  407594:	3e01      	subs	r6, #1
  407596:	2b00      	cmp	r3, #0
  407598:	d0fa      	beq.n	407590 <__mdiff+0xd0>
  40759a:	6106      	str	r6, [r0, #16]
  40759c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4075a0:	2100      	movs	r1, #0
  4075a2:	f7ff fd73 	bl	40708c <_Balloc>
  4075a6:	2201      	movs	r2, #1
  4075a8:	2300      	movs	r3, #0
  4075aa:	6102      	str	r2, [r0, #16]
  4075ac:	6143      	str	r3, [r0, #20]
  4075ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4075b2:	4674      	mov	r4, lr
  4075b4:	e7ab      	b.n	40750e <__mdiff+0x4e>
  4075b6:	4633      	mov	r3, r6
  4075b8:	f106 0414 	add.w	r4, r6, #20
  4075bc:	f102 0514 	add.w	r5, r2, #20
  4075c0:	4616      	mov	r6, r2
  4075c2:	2701      	movs	r7, #1
  4075c4:	4698      	mov	r8, r3
  4075c6:	e7a2      	b.n	40750e <__mdiff+0x4e>

004075c8 <__d2b>:
  4075c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4075cc:	b082      	sub	sp, #8
  4075ce:	2101      	movs	r1, #1
  4075d0:	461c      	mov	r4, r3
  4075d2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4075d6:	4615      	mov	r5, r2
  4075d8:	9e08      	ldr	r6, [sp, #32]
  4075da:	f7ff fd57 	bl	40708c <_Balloc>
  4075de:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4075e2:	4680      	mov	r8, r0
  4075e4:	b10f      	cbz	r7, 4075ea <__d2b+0x22>
  4075e6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4075ea:	9401      	str	r4, [sp, #4]
  4075ec:	b31d      	cbz	r5, 407636 <__d2b+0x6e>
  4075ee:	a802      	add	r0, sp, #8
  4075f0:	f840 5d08 	str.w	r5, [r0, #-8]!
  4075f4:	f7ff fdda 	bl	4071ac <__lo0bits>
  4075f8:	2800      	cmp	r0, #0
  4075fa:	d134      	bne.n	407666 <__d2b+0x9e>
  4075fc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  407600:	f8c8 2014 	str.w	r2, [r8, #20]
  407604:	2b00      	cmp	r3, #0
  407606:	bf0c      	ite	eq
  407608:	2101      	moveq	r1, #1
  40760a:	2102      	movne	r1, #2
  40760c:	f8c8 3018 	str.w	r3, [r8, #24]
  407610:	f8c8 1010 	str.w	r1, [r8, #16]
  407614:	b9df      	cbnz	r7, 40764e <__d2b+0x86>
  407616:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40761a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40761e:	6030      	str	r0, [r6, #0]
  407620:	6918      	ldr	r0, [r3, #16]
  407622:	f7ff fda3 	bl	40716c <__hi0bits>
  407626:	9b09      	ldr	r3, [sp, #36]	; 0x24
  407628:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40762c:	6018      	str	r0, [r3, #0]
  40762e:	4640      	mov	r0, r8
  407630:	b002      	add	sp, #8
  407632:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407636:	a801      	add	r0, sp, #4
  407638:	f7ff fdb8 	bl	4071ac <__lo0bits>
  40763c:	9b01      	ldr	r3, [sp, #4]
  40763e:	f8c8 3014 	str.w	r3, [r8, #20]
  407642:	2101      	movs	r1, #1
  407644:	3020      	adds	r0, #32
  407646:	f8c8 1010 	str.w	r1, [r8, #16]
  40764a:	2f00      	cmp	r7, #0
  40764c:	d0e3      	beq.n	407616 <__d2b+0x4e>
  40764e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  407650:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  407654:	4407      	add	r7, r0
  407656:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40765a:	6037      	str	r7, [r6, #0]
  40765c:	6018      	str	r0, [r3, #0]
  40765e:	4640      	mov	r0, r8
  407660:	b002      	add	sp, #8
  407662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407666:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40766a:	f1c0 0220 	rsb	r2, r0, #32
  40766e:	fa03 f202 	lsl.w	r2, r3, r2
  407672:	430a      	orrs	r2, r1
  407674:	40c3      	lsrs	r3, r0
  407676:	9301      	str	r3, [sp, #4]
  407678:	f8c8 2014 	str.w	r2, [r8, #20]
  40767c:	e7c2      	b.n	407604 <__d2b+0x3c>
  40767e:	bf00      	nop

00407680 <_realloc_r>:
  407680:	2900      	cmp	r1, #0
  407682:	f000 8095 	beq.w	4077b0 <_realloc_r+0x130>
  407686:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40768a:	460d      	mov	r5, r1
  40768c:	4616      	mov	r6, r2
  40768e:	b083      	sub	sp, #12
  407690:	4680      	mov	r8, r0
  407692:	f106 070b 	add.w	r7, r6, #11
  407696:	f7fb fb05 	bl	402ca4 <__malloc_lock>
  40769a:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40769e:	2f16      	cmp	r7, #22
  4076a0:	f02e 0403 	bic.w	r4, lr, #3
  4076a4:	f1a5 0908 	sub.w	r9, r5, #8
  4076a8:	d83c      	bhi.n	407724 <_realloc_r+0xa4>
  4076aa:	2210      	movs	r2, #16
  4076ac:	4617      	mov	r7, r2
  4076ae:	42be      	cmp	r6, r7
  4076b0:	d83d      	bhi.n	40772e <_realloc_r+0xae>
  4076b2:	4294      	cmp	r4, r2
  4076b4:	da43      	bge.n	40773e <_realloc_r+0xbe>
  4076b6:	4bc4      	ldr	r3, [pc, #784]	; (4079c8 <_realloc_r+0x348>)
  4076b8:	6899      	ldr	r1, [r3, #8]
  4076ba:	eb09 0004 	add.w	r0, r9, r4
  4076be:	4288      	cmp	r0, r1
  4076c0:	f000 80b4 	beq.w	40782c <_realloc_r+0x1ac>
  4076c4:	6843      	ldr	r3, [r0, #4]
  4076c6:	f023 0101 	bic.w	r1, r3, #1
  4076ca:	4401      	add	r1, r0
  4076cc:	6849      	ldr	r1, [r1, #4]
  4076ce:	07c9      	lsls	r1, r1, #31
  4076d0:	d54c      	bpl.n	40776c <_realloc_r+0xec>
  4076d2:	f01e 0f01 	tst.w	lr, #1
  4076d6:	f000 809b 	beq.w	407810 <_realloc_r+0x190>
  4076da:	4631      	mov	r1, r6
  4076dc:	4640      	mov	r0, r8
  4076de:	f7fa ffe3 	bl	4026a8 <_malloc_r>
  4076e2:	4606      	mov	r6, r0
  4076e4:	2800      	cmp	r0, #0
  4076e6:	d03a      	beq.n	40775e <_realloc_r+0xde>
  4076e8:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4076ec:	f023 0301 	bic.w	r3, r3, #1
  4076f0:	444b      	add	r3, r9
  4076f2:	f1a0 0208 	sub.w	r2, r0, #8
  4076f6:	429a      	cmp	r2, r3
  4076f8:	f000 8121 	beq.w	40793e <_realloc_r+0x2be>
  4076fc:	1f22      	subs	r2, r4, #4
  4076fe:	2a24      	cmp	r2, #36	; 0x24
  407700:	f200 8107 	bhi.w	407912 <_realloc_r+0x292>
  407704:	2a13      	cmp	r2, #19
  407706:	f200 80db 	bhi.w	4078c0 <_realloc_r+0x240>
  40770a:	4603      	mov	r3, r0
  40770c:	462a      	mov	r2, r5
  40770e:	6811      	ldr	r1, [r2, #0]
  407710:	6019      	str	r1, [r3, #0]
  407712:	6851      	ldr	r1, [r2, #4]
  407714:	6059      	str	r1, [r3, #4]
  407716:	6892      	ldr	r2, [r2, #8]
  407718:	609a      	str	r2, [r3, #8]
  40771a:	4629      	mov	r1, r5
  40771c:	4640      	mov	r0, r8
  40771e:	f7ff f827 	bl	406770 <_free_r>
  407722:	e01c      	b.n	40775e <_realloc_r+0xde>
  407724:	f027 0707 	bic.w	r7, r7, #7
  407728:	2f00      	cmp	r7, #0
  40772a:	463a      	mov	r2, r7
  40772c:	dabf      	bge.n	4076ae <_realloc_r+0x2e>
  40772e:	2600      	movs	r6, #0
  407730:	230c      	movs	r3, #12
  407732:	4630      	mov	r0, r6
  407734:	f8c8 3000 	str.w	r3, [r8]
  407738:	b003      	add	sp, #12
  40773a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40773e:	462e      	mov	r6, r5
  407740:	1be3      	subs	r3, r4, r7
  407742:	2b0f      	cmp	r3, #15
  407744:	d81e      	bhi.n	407784 <_realloc_r+0x104>
  407746:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40774a:	f003 0301 	and.w	r3, r3, #1
  40774e:	4323      	orrs	r3, r4
  407750:	444c      	add	r4, r9
  407752:	f8c9 3004 	str.w	r3, [r9, #4]
  407756:	6863      	ldr	r3, [r4, #4]
  407758:	f043 0301 	orr.w	r3, r3, #1
  40775c:	6063      	str	r3, [r4, #4]
  40775e:	4640      	mov	r0, r8
  407760:	f7fb faa6 	bl	402cb0 <__malloc_unlock>
  407764:	4630      	mov	r0, r6
  407766:	b003      	add	sp, #12
  407768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40776c:	f023 0303 	bic.w	r3, r3, #3
  407770:	18e1      	adds	r1, r4, r3
  407772:	4291      	cmp	r1, r2
  407774:	db1f      	blt.n	4077b6 <_realloc_r+0x136>
  407776:	68c3      	ldr	r3, [r0, #12]
  407778:	6882      	ldr	r2, [r0, #8]
  40777a:	462e      	mov	r6, r5
  40777c:	60d3      	str	r3, [r2, #12]
  40777e:	460c      	mov	r4, r1
  407780:	609a      	str	r2, [r3, #8]
  407782:	e7dd      	b.n	407740 <_realloc_r+0xc0>
  407784:	f8d9 2004 	ldr.w	r2, [r9, #4]
  407788:	eb09 0107 	add.w	r1, r9, r7
  40778c:	f002 0201 	and.w	r2, r2, #1
  407790:	444c      	add	r4, r9
  407792:	f043 0301 	orr.w	r3, r3, #1
  407796:	4317      	orrs	r7, r2
  407798:	f8c9 7004 	str.w	r7, [r9, #4]
  40779c:	604b      	str	r3, [r1, #4]
  40779e:	6863      	ldr	r3, [r4, #4]
  4077a0:	f043 0301 	orr.w	r3, r3, #1
  4077a4:	3108      	adds	r1, #8
  4077a6:	6063      	str	r3, [r4, #4]
  4077a8:	4640      	mov	r0, r8
  4077aa:	f7fe ffe1 	bl	406770 <_free_r>
  4077ae:	e7d6      	b.n	40775e <_realloc_r+0xde>
  4077b0:	4611      	mov	r1, r2
  4077b2:	f7fa bf79 	b.w	4026a8 <_malloc_r>
  4077b6:	f01e 0f01 	tst.w	lr, #1
  4077ba:	d18e      	bne.n	4076da <_realloc_r+0x5a>
  4077bc:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4077c0:	eba9 0a01 	sub.w	sl, r9, r1
  4077c4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4077c8:	f021 0103 	bic.w	r1, r1, #3
  4077cc:	440b      	add	r3, r1
  4077ce:	4423      	add	r3, r4
  4077d0:	4293      	cmp	r3, r2
  4077d2:	db25      	blt.n	407820 <_realloc_r+0x1a0>
  4077d4:	68c2      	ldr	r2, [r0, #12]
  4077d6:	6881      	ldr	r1, [r0, #8]
  4077d8:	4656      	mov	r6, sl
  4077da:	60ca      	str	r2, [r1, #12]
  4077dc:	6091      	str	r1, [r2, #8]
  4077de:	f8da 100c 	ldr.w	r1, [sl, #12]
  4077e2:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4077e6:	1f22      	subs	r2, r4, #4
  4077e8:	2a24      	cmp	r2, #36	; 0x24
  4077ea:	60c1      	str	r1, [r0, #12]
  4077ec:	6088      	str	r0, [r1, #8]
  4077ee:	f200 8094 	bhi.w	40791a <_realloc_r+0x29a>
  4077f2:	2a13      	cmp	r2, #19
  4077f4:	d96f      	bls.n	4078d6 <_realloc_r+0x256>
  4077f6:	6829      	ldr	r1, [r5, #0]
  4077f8:	f8ca 1008 	str.w	r1, [sl, #8]
  4077fc:	6869      	ldr	r1, [r5, #4]
  4077fe:	f8ca 100c 	str.w	r1, [sl, #12]
  407802:	2a1b      	cmp	r2, #27
  407804:	f200 80a2 	bhi.w	40794c <_realloc_r+0x2cc>
  407808:	3508      	adds	r5, #8
  40780a:	f10a 0210 	add.w	r2, sl, #16
  40780e:	e063      	b.n	4078d8 <_realloc_r+0x258>
  407810:	f855 3c08 	ldr.w	r3, [r5, #-8]
  407814:	eba9 0a03 	sub.w	sl, r9, r3
  407818:	f8da 1004 	ldr.w	r1, [sl, #4]
  40781c:	f021 0103 	bic.w	r1, r1, #3
  407820:	1863      	adds	r3, r4, r1
  407822:	4293      	cmp	r3, r2
  407824:	f6ff af59 	blt.w	4076da <_realloc_r+0x5a>
  407828:	4656      	mov	r6, sl
  40782a:	e7d8      	b.n	4077de <_realloc_r+0x15e>
  40782c:	6841      	ldr	r1, [r0, #4]
  40782e:	f021 0b03 	bic.w	fp, r1, #3
  407832:	44a3      	add	fp, r4
  407834:	f107 0010 	add.w	r0, r7, #16
  407838:	4583      	cmp	fp, r0
  40783a:	da56      	bge.n	4078ea <_realloc_r+0x26a>
  40783c:	f01e 0f01 	tst.w	lr, #1
  407840:	f47f af4b 	bne.w	4076da <_realloc_r+0x5a>
  407844:	f855 1c08 	ldr.w	r1, [r5, #-8]
  407848:	eba9 0a01 	sub.w	sl, r9, r1
  40784c:	f8da 1004 	ldr.w	r1, [sl, #4]
  407850:	f021 0103 	bic.w	r1, r1, #3
  407854:	448b      	add	fp, r1
  407856:	4558      	cmp	r0, fp
  407858:	dce2      	bgt.n	407820 <_realloc_r+0x1a0>
  40785a:	4656      	mov	r6, sl
  40785c:	f8da 100c 	ldr.w	r1, [sl, #12]
  407860:	f856 0f08 	ldr.w	r0, [r6, #8]!
  407864:	1f22      	subs	r2, r4, #4
  407866:	2a24      	cmp	r2, #36	; 0x24
  407868:	60c1      	str	r1, [r0, #12]
  40786a:	6088      	str	r0, [r1, #8]
  40786c:	f200 808f 	bhi.w	40798e <_realloc_r+0x30e>
  407870:	2a13      	cmp	r2, #19
  407872:	f240 808a 	bls.w	40798a <_realloc_r+0x30a>
  407876:	6829      	ldr	r1, [r5, #0]
  407878:	f8ca 1008 	str.w	r1, [sl, #8]
  40787c:	6869      	ldr	r1, [r5, #4]
  40787e:	f8ca 100c 	str.w	r1, [sl, #12]
  407882:	2a1b      	cmp	r2, #27
  407884:	f200 808a 	bhi.w	40799c <_realloc_r+0x31c>
  407888:	3508      	adds	r5, #8
  40788a:	f10a 0210 	add.w	r2, sl, #16
  40788e:	6829      	ldr	r1, [r5, #0]
  407890:	6011      	str	r1, [r2, #0]
  407892:	6869      	ldr	r1, [r5, #4]
  407894:	6051      	str	r1, [r2, #4]
  407896:	68a9      	ldr	r1, [r5, #8]
  407898:	6091      	str	r1, [r2, #8]
  40789a:	eb0a 0107 	add.w	r1, sl, r7
  40789e:	ebab 0207 	sub.w	r2, fp, r7
  4078a2:	f042 0201 	orr.w	r2, r2, #1
  4078a6:	6099      	str	r1, [r3, #8]
  4078a8:	604a      	str	r2, [r1, #4]
  4078aa:	f8da 3004 	ldr.w	r3, [sl, #4]
  4078ae:	f003 0301 	and.w	r3, r3, #1
  4078b2:	431f      	orrs	r7, r3
  4078b4:	4640      	mov	r0, r8
  4078b6:	f8ca 7004 	str.w	r7, [sl, #4]
  4078ba:	f7fb f9f9 	bl	402cb0 <__malloc_unlock>
  4078be:	e751      	b.n	407764 <_realloc_r+0xe4>
  4078c0:	682b      	ldr	r3, [r5, #0]
  4078c2:	6003      	str	r3, [r0, #0]
  4078c4:	686b      	ldr	r3, [r5, #4]
  4078c6:	6043      	str	r3, [r0, #4]
  4078c8:	2a1b      	cmp	r2, #27
  4078ca:	d82d      	bhi.n	407928 <_realloc_r+0x2a8>
  4078cc:	f100 0308 	add.w	r3, r0, #8
  4078d0:	f105 0208 	add.w	r2, r5, #8
  4078d4:	e71b      	b.n	40770e <_realloc_r+0x8e>
  4078d6:	4632      	mov	r2, r6
  4078d8:	6829      	ldr	r1, [r5, #0]
  4078da:	6011      	str	r1, [r2, #0]
  4078dc:	6869      	ldr	r1, [r5, #4]
  4078de:	6051      	str	r1, [r2, #4]
  4078e0:	68a9      	ldr	r1, [r5, #8]
  4078e2:	6091      	str	r1, [r2, #8]
  4078e4:	461c      	mov	r4, r3
  4078e6:	46d1      	mov	r9, sl
  4078e8:	e72a      	b.n	407740 <_realloc_r+0xc0>
  4078ea:	eb09 0107 	add.w	r1, r9, r7
  4078ee:	ebab 0b07 	sub.w	fp, fp, r7
  4078f2:	f04b 0201 	orr.w	r2, fp, #1
  4078f6:	6099      	str	r1, [r3, #8]
  4078f8:	604a      	str	r2, [r1, #4]
  4078fa:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4078fe:	f003 0301 	and.w	r3, r3, #1
  407902:	431f      	orrs	r7, r3
  407904:	4640      	mov	r0, r8
  407906:	f845 7c04 	str.w	r7, [r5, #-4]
  40790a:	f7fb f9d1 	bl	402cb0 <__malloc_unlock>
  40790e:	462e      	mov	r6, r5
  407910:	e728      	b.n	407764 <_realloc_r+0xe4>
  407912:	4629      	mov	r1, r5
  407914:	f7ff fb56 	bl	406fc4 <memmove>
  407918:	e6ff      	b.n	40771a <_realloc_r+0x9a>
  40791a:	4629      	mov	r1, r5
  40791c:	4630      	mov	r0, r6
  40791e:	461c      	mov	r4, r3
  407920:	46d1      	mov	r9, sl
  407922:	f7ff fb4f 	bl	406fc4 <memmove>
  407926:	e70b      	b.n	407740 <_realloc_r+0xc0>
  407928:	68ab      	ldr	r3, [r5, #8]
  40792a:	6083      	str	r3, [r0, #8]
  40792c:	68eb      	ldr	r3, [r5, #12]
  40792e:	60c3      	str	r3, [r0, #12]
  407930:	2a24      	cmp	r2, #36	; 0x24
  407932:	d017      	beq.n	407964 <_realloc_r+0x2e4>
  407934:	f100 0310 	add.w	r3, r0, #16
  407938:	f105 0210 	add.w	r2, r5, #16
  40793c:	e6e7      	b.n	40770e <_realloc_r+0x8e>
  40793e:	f850 3c04 	ldr.w	r3, [r0, #-4]
  407942:	f023 0303 	bic.w	r3, r3, #3
  407946:	441c      	add	r4, r3
  407948:	462e      	mov	r6, r5
  40794a:	e6f9      	b.n	407740 <_realloc_r+0xc0>
  40794c:	68a9      	ldr	r1, [r5, #8]
  40794e:	f8ca 1010 	str.w	r1, [sl, #16]
  407952:	68e9      	ldr	r1, [r5, #12]
  407954:	f8ca 1014 	str.w	r1, [sl, #20]
  407958:	2a24      	cmp	r2, #36	; 0x24
  40795a:	d00c      	beq.n	407976 <_realloc_r+0x2f6>
  40795c:	3510      	adds	r5, #16
  40795e:	f10a 0218 	add.w	r2, sl, #24
  407962:	e7b9      	b.n	4078d8 <_realloc_r+0x258>
  407964:	692b      	ldr	r3, [r5, #16]
  407966:	6103      	str	r3, [r0, #16]
  407968:	696b      	ldr	r3, [r5, #20]
  40796a:	6143      	str	r3, [r0, #20]
  40796c:	f105 0218 	add.w	r2, r5, #24
  407970:	f100 0318 	add.w	r3, r0, #24
  407974:	e6cb      	b.n	40770e <_realloc_r+0x8e>
  407976:	692a      	ldr	r2, [r5, #16]
  407978:	f8ca 2018 	str.w	r2, [sl, #24]
  40797c:	696a      	ldr	r2, [r5, #20]
  40797e:	f8ca 201c 	str.w	r2, [sl, #28]
  407982:	3518      	adds	r5, #24
  407984:	f10a 0220 	add.w	r2, sl, #32
  407988:	e7a6      	b.n	4078d8 <_realloc_r+0x258>
  40798a:	4632      	mov	r2, r6
  40798c:	e77f      	b.n	40788e <_realloc_r+0x20e>
  40798e:	4629      	mov	r1, r5
  407990:	4630      	mov	r0, r6
  407992:	9301      	str	r3, [sp, #4]
  407994:	f7ff fb16 	bl	406fc4 <memmove>
  407998:	9b01      	ldr	r3, [sp, #4]
  40799a:	e77e      	b.n	40789a <_realloc_r+0x21a>
  40799c:	68a9      	ldr	r1, [r5, #8]
  40799e:	f8ca 1010 	str.w	r1, [sl, #16]
  4079a2:	68e9      	ldr	r1, [r5, #12]
  4079a4:	f8ca 1014 	str.w	r1, [sl, #20]
  4079a8:	2a24      	cmp	r2, #36	; 0x24
  4079aa:	d003      	beq.n	4079b4 <_realloc_r+0x334>
  4079ac:	3510      	adds	r5, #16
  4079ae:	f10a 0218 	add.w	r2, sl, #24
  4079b2:	e76c      	b.n	40788e <_realloc_r+0x20e>
  4079b4:	692a      	ldr	r2, [r5, #16]
  4079b6:	f8ca 2018 	str.w	r2, [sl, #24]
  4079ba:	696a      	ldr	r2, [r5, #20]
  4079bc:	f8ca 201c 	str.w	r2, [sl, #28]
  4079c0:	3518      	adds	r5, #24
  4079c2:	f10a 0220 	add.w	r2, sl, #32
  4079c6:	e762      	b.n	40788e <_realloc_r+0x20e>
  4079c8:	20400440 	.word	0x20400440

004079cc <__sread>:
  4079cc:	b510      	push	{r4, lr}
  4079ce:	460c      	mov	r4, r1
  4079d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4079d4:	f000 faa4 	bl	407f20 <_read_r>
  4079d8:	2800      	cmp	r0, #0
  4079da:	db03      	blt.n	4079e4 <__sread+0x18>
  4079dc:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4079de:	4403      	add	r3, r0
  4079e0:	6523      	str	r3, [r4, #80]	; 0x50
  4079e2:	bd10      	pop	{r4, pc}
  4079e4:	89a3      	ldrh	r3, [r4, #12]
  4079e6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4079ea:	81a3      	strh	r3, [r4, #12]
  4079ec:	bd10      	pop	{r4, pc}
  4079ee:	bf00      	nop

004079f0 <__swrite>:
  4079f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4079f4:	4616      	mov	r6, r2
  4079f6:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4079fa:	461f      	mov	r7, r3
  4079fc:	05d3      	lsls	r3, r2, #23
  4079fe:	460c      	mov	r4, r1
  407a00:	4605      	mov	r5, r0
  407a02:	d507      	bpl.n	407a14 <__swrite+0x24>
  407a04:	2200      	movs	r2, #0
  407a06:	2302      	movs	r3, #2
  407a08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  407a0c:	f000 fa72 	bl	407ef4 <_lseek_r>
  407a10:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  407a14:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  407a18:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  407a1c:	81a2      	strh	r2, [r4, #12]
  407a1e:	463b      	mov	r3, r7
  407a20:	4632      	mov	r2, r6
  407a22:	4628      	mov	r0, r5
  407a24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  407a28:	f000 b922 	b.w	407c70 <_write_r>

00407a2c <__sseek>:
  407a2c:	b510      	push	{r4, lr}
  407a2e:	460c      	mov	r4, r1
  407a30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  407a34:	f000 fa5e 	bl	407ef4 <_lseek_r>
  407a38:	89a3      	ldrh	r3, [r4, #12]
  407a3a:	1c42      	adds	r2, r0, #1
  407a3c:	bf0e      	itee	eq
  407a3e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  407a42:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  407a46:	6520      	strne	r0, [r4, #80]	; 0x50
  407a48:	81a3      	strh	r3, [r4, #12]
  407a4a:	bd10      	pop	{r4, pc}

00407a4c <__sclose>:
  407a4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  407a50:	f000 b9b6 	b.w	407dc0 <_close_r>

00407a54 <__ssprint_r>:
  407a54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407a58:	6893      	ldr	r3, [r2, #8]
  407a5a:	b083      	sub	sp, #12
  407a5c:	4690      	mov	r8, r2
  407a5e:	2b00      	cmp	r3, #0
  407a60:	d070      	beq.n	407b44 <__ssprint_r+0xf0>
  407a62:	4682      	mov	sl, r0
  407a64:	460c      	mov	r4, r1
  407a66:	6817      	ldr	r7, [r2, #0]
  407a68:	688d      	ldr	r5, [r1, #8]
  407a6a:	6808      	ldr	r0, [r1, #0]
  407a6c:	e042      	b.n	407af4 <__ssprint_r+0xa0>
  407a6e:	89a3      	ldrh	r3, [r4, #12]
  407a70:	f413 6f90 	tst.w	r3, #1152	; 0x480
  407a74:	d02e      	beq.n	407ad4 <__ssprint_r+0x80>
  407a76:	6965      	ldr	r5, [r4, #20]
  407a78:	6921      	ldr	r1, [r4, #16]
  407a7a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  407a7e:	eba0 0b01 	sub.w	fp, r0, r1
  407a82:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  407a86:	f10b 0001 	add.w	r0, fp, #1
  407a8a:	106d      	asrs	r5, r5, #1
  407a8c:	4430      	add	r0, r6
  407a8e:	42a8      	cmp	r0, r5
  407a90:	462a      	mov	r2, r5
  407a92:	bf84      	itt	hi
  407a94:	4605      	movhi	r5, r0
  407a96:	462a      	movhi	r2, r5
  407a98:	055b      	lsls	r3, r3, #21
  407a9a:	d538      	bpl.n	407b0e <__ssprint_r+0xba>
  407a9c:	4611      	mov	r1, r2
  407a9e:	4650      	mov	r0, sl
  407aa0:	f7fa fe02 	bl	4026a8 <_malloc_r>
  407aa4:	2800      	cmp	r0, #0
  407aa6:	d03c      	beq.n	407b22 <__ssprint_r+0xce>
  407aa8:	465a      	mov	r2, fp
  407aaa:	6921      	ldr	r1, [r4, #16]
  407aac:	9001      	str	r0, [sp, #4]
  407aae:	f7ff f9ef 	bl	406e90 <memcpy>
  407ab2:	89a2      	ldrh	r2, [r4, #12]
  407ab4:	9b01      	ldr	r3, [sp, #4]
  407ab6:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  407aba:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  407abe:	81a2      	strh	r2, [r4, #12]
  407ac0:	eba5 020b 	sub.w	r2, r5, fp
  407ac4:	eb03 000b 	add.w	r0, r3, fp
  407ac8:	6165      	str	r5, [r4, #20]
  407aca:	6123      	str	r3, [r4, #16]
  407acc:	6020      	str	r0, [r4, #0]
  407ace:	60a2      	str	r2, [r4, #8]
  407ad0:	4635      	mov	r5, r6
  407ad2:	46b3      	mov	fp, r6
  407ad4:	465a      	mov	r2, fp
  407ad6:	4649      	mov	r1, r9
  407ad8:	f7ff fa74 	bl	406fc4 <memmove>
  407adc:	f8d8 3008 	ldr.w	r3, [r8, #8]
  407ae0:	68a2      	ldr	r2, [r4, #8]
  407ae2:	6820      	ldr	r0, [r4, #0]
  407ae4:	1b55      	subs	r5, r2, r5
  407ae6:	4458      	add	r0, fp
  407ae8:	1b9e      	subs	r6, r3, r6
  407aea:	60a5      	str	r5, [r4, #8]
  407aec:	6020      	str	r0, [r4, #0]
  407aee:	f8c8 6008 	str.w	r6, [r8, #8]
  407af2:	b33e      	cbz	r6, 407b44 <__ssprint_r+0xf0>
  407af4:	687e      	ldr	r6, [r7, #4]
  407af6:	463b      	mov	r3, r7
  407af8:	3708      	adds	r7, #8
  407afa:	2e00      	cmp	r6, #0
  407afc:	d0fa      	beq.n	407af4 <__ssprint_r+0xa0>
  407afe:	42ae      	cmp	r6, r5
  407b00:	f8d3 9000 	ldr.w	r9, [r3]
  407b04:	46ab      	mov	fp, r5
  407b06:	d2b2      	bcs.n	407a6e <__ssprint_r+0x1a>
  407b08:	4635      	mov	r5, r6
  407b0a:	46b3      	mov	fp, r6
  407b0c:	e7e2      	b.n	407ad4 <__ssprint_r+0x80>
  407b0e:	4650      	mov	r0, sl
  407b10:	f7ff fdb6 	bl	407680 <_realloc_r>
  407b14:	4603      	mov	r3, r0
  407b16:	2800      	cmp	r0, #0
  407b18:	d1d2      	bne.n	407ac0 <__ssprint_r+0x6c>
  407b1a:	6921      	ldr	r1, [r4, #16]
  407b1c:	4650      	mov	r0, sl
  407b1e:	f7fe fe27 	bl	406770 <_free_r>
  407b22:	230c      	movs	r3, #12
  407b24:	f8ca 3000 	str.w	r3, [sl]
  407b28:	89a3      	ldrh	r3, [r4, #12]
  407b2a:	2200      	movs	r2, #0
  407b2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  407b30:	f04f 30ff 	mov.w	r0, #4294967295
  407b34:	81a3      	strh	r3, [r4, #12]
  407b36:	f8c8 2008 	str.w	r2, [r8, #8]
  407b3a:	f8c8 2004 	str.w	r2, [r8, #4]
  407b3e:	b003      	add	sp, #12
  407b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407b44:	2000      	movs	r0, #0
  407b46:	f8c8 0004 	str.w	r0, [r8, #4]
  407b4a:	b003      	add	sp, #12
  407b4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407b50 <__swbuf_r>:
  407b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407b52:	460d      	mov	r5, r1
  407b54:	4614      	mov	r4, r2
  407b56:	4606      	mov	r6, r0
  407b58:	b110      	cbz	r0, 407b60 <__swbuf_r+0x10>
  407b5a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  407b5c:	2b00      	cmp	r3, #0
  407b5e:	d04b      	beq.n	407bf8 <__swbuf_r+0xa8>
  407b60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  407b64:	69a3      	ldr	r3, [r4, #24]
  407b66:	60a3      	str	r3, [r4, #8]
  407b68:	b291      	uxth	r1, r2
  407b6a:	0708      	lsls	r0, r1, #28
  407b6c:	d539      	bpl.n	407be2 <__swbuf_r+0x92>
  407b6e:	6923      	ldr	r3, [r4, #16]
  407b70:	2b00      	cmp	r3, #0
  407b72:	d036      	beq.n	407be2 <__swbuf_r+0x92>
  407b74:	b2ed      	uxtb	r5, r5
  407b76:	0489      	lsls	r1, r1, #18
  407b78:	462f      	mov	r7, r5
  407b7a:	d515      	bpl.n	407ba8 <__swbuf_r+0x58>
  407b7c:	6822      	ldr	r2, [r4, #0]
  407b7e:	6961      	ldr	r1, [r4, #20]
  407b80:	1ad3      	subs	r3, r2, r3
  407b82:	428b      	cmp	r3, r1
  407b84:	da1c      	bge.n	407bc0 <__swbuf_r+0x70>
  407b86:	3301      	adds	r3, #1
  407b88:	68a1      	ldr	r1, [r4, #8]
  407b8a:	1c50      	adds	r0, r2, #1
  407b8c:	3901      	subs	r1, #1
  407b8e:	60a1      	str	r1, [r4, #8]
  407b90:	6020      	str	r0, [r4, #0]
  407b92:	7015      	strb	r5, [r2, #0]
  407b94:	6962      	ldr	r2, [r4, #20]
  407b96:	429a      	cmp	r2, r3
  407b98:	d01a      	beq.n	407bd0 <__swbuf_r+0x80>
  407b9a:	89a3      	ldrh	r3, [r4, #12]
  407b9c:	07db      	lsls	r3, r3, #31
  407b9e:	d501      	bpl.n	407ba4 <__swbuf_r+0x54>
  407ba0:	2d0a      	cmp	r5, #10
  407ba2:	d015      	beq.n	407bd0 <__swbuf_r+0x80>
  407ba4:	4638      	mov	r0, r7
  407ba6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407ba8:	6e61      	ldr	r1, [r4, #100]	; 0x64
  407baa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  407bae:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  407bb2:	81a2      	strh	r2, [r4, #12]
  407bb4:	6822      	ldr	r2, [r4, #0]
  407bb6:	6661      	str	r1, [r4, #100]	; 0x64
  407bb8:	6961      	ldr	r1, [r4, #20]
  407bba:	1ad3      	subs	r3, r2, r3
  407bbc:	428b      	cmp	r3, r1
  407bbe:	dbe2      	blt.n	407b86 <__swbuf_r+0x36>
  407bc0:	4621      	mov	r1, r4
  407bc2:	4630      	mov	r0, r6
  407bc4:	f7fe fc56 	bl	406474 <_fflush_r>
  407bc8:	b940      	cbnz	r0, 407bdc <__swbuf_r+0x8c>
  407bca:	6822      	ldr	r2, [r4, #0]
  407bcc:	2301      	movs	r3, #1
  407bce:	e7db      	b.n	407b88 <__swbuf_r+0x38>
  407bd0:	4621      	mov	r1, r4
  407bd2:	4630      	mov	r0, r6
  407bd4:	f7fe fc4e 	bl	406474 <_fflush_r>
  407bd8:	2800      	cmp	r0, #0
  407bda:	d0e3      	beq.n	407ba4 <__swbuf_r+0x54>
  407bdc:	f04f 37ff 	mov.w	r7, #4294967295
  407be0:	e7e0      	b.n	407ba4 <__swbuf_r+0x54>
  407be2:	4621      	mov	r1, r4
  407be4:	4630      	mov	r0, r6
  407be6:	f7fd fb71 	bl	4052cc <__swsetup_r>
  407bea:	2800      	cmp	r0, #0
  407bec:	d1f6      	bne.n	407bdc <__swbuf_r+0x8c>
  407bee:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  407bf2:	6923      	ldr	r3, [r4, #16]
  407bf4:	b291      	uxth	r1, r2
  407bf6:	e7bd      	b.n	407b74 <__swbuf_r+0x24>
  407bf8:	f7fe fc94 	bl	406524 <__sinit>
  407bfc:	e7b0      	b.n	407b60 <__swbuf_r+0x10>
  407bfe:	bf00      	nop

00407c00 <_wcrtomb_r>:
  407c00:	b5f0      	push	{r4, r5, r6, r7, lr}
  407c02:	4606      	mov	r6, r0
  407c04:	b085      	sub	sp, #20
  407c06:	461f      	mov	r7, r3
  407c08:	b189      	cbz	r1, 407c2e <_wcrtomb_r+0x2e>
  407c0a:	4c10      	ldr	r4, [pc, #64]	; (407c4c <_wcrtomb_r+0x4c>)
  407c0c:	4d10      	ldr	r5, [pc, #64]	; (407c50 <_wcrtomb_r+0x50>)
  407c0e:	6824      	ldr	r4, [r4, #0]
  407c10:	6b64      	ldr	r4, [r4, #52]	; 0x34
  407c12:	2c00      	cmp	r4, #0
  407c14:	bf08      	it	eq
  407c16:	462c      	moveq	r4, r5
  407c18:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
  407c1c:	47a0      	blx	r4
  407c1e:	1c43      	adds	r3, r0, #1
  407c20:	d103      	bne.n	407c2a <_wcrtomb_r+0x2a>
  407c22:	2200      	movs	r2, #0
  407c24:	238a      	movs	r3, #138	; 0x8a
  407c26:	603a      	str	r2, [r7, #0]
  407c28:	6033      	str	r3, [r6, #0]
  407c2a:	b005      	add	sp, #20
  407c2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  407c2e:	460c      	mov	r4, r1
  407c30:	4906      	ldr	r1, [pc, #24]	; (407c4c <_wcrtomb_r+0x4c>)
  407c32:	4a07      	ldr	r2, [pc, #28]	; (407c50 <_wcrtomb_r+0x50>)
  407c34:	6809      	ldr	r1, [r1, #0]
  407c36:	6b49      	ldr	r1, [r1, #52]	; 0x34
  407c38:	2900      	cmp	r1, #0
  407c3a:	bf08      	it	eq
  407c3c:	4611      	moveq	r1, r2
  407c3e:	4622      	mov	r2, r4
  407c40:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
  407c44:	a901      	add	r1, sp, #4
  407c46:	47a0      	blx	r4
  407c48:	e7e9      	b.n	407c1e <_wcrtomb_r+0x1e>
  407c4a:	bf00      	nop
  407c4c:	20400010 	.word	0x20400010
  407c50:	20400854 	.word	0x20400854

00407c54 <__ascii_wctomb>:
  407c54:	b121      	cbz	r1, 407c60 <__ascii_wctomb+0xc>
  407c56:	2aff      	cmp	r2, #255	; 0xff
  407c58:	d804      	bhi.n	407c64 <__ascii_wctomb+0x10>
  407c5a:	700a      	strb	r2, [r1, #0]
  407c5c:	2001      	movs	r0, #1
  407c5e:	4770      	bx	lr
  407c60:	4608      	mov	r0, r1
  407c62:	4770      	bx	lr
  407c64:	238a      	movs	r3, #138	; 0x8a
  407c66:	6003      	str	r3, [r0, #0]
  407c68:	f04f 30ff 	mov.w	r0, #4294967295
  407c6c:	4770      	bx	lr
  407c6e:	bf00      	nop

00407c70 <_write_r>:
  407c70:	b570      	push	{r4, r5, r6, lr}
  407c72:	460d      	mov	r5, r1
  407c74:	4c08      	ldr	r4, [pc, #32]	; (407c98 <_write_r+0x28>)
  407c76:	4611      	mov	r1, r2
  407c78:	4606      	mov	r6, r0
  407c7a:	461a      	mov	r2, r3
  407c7c:	4628      	mov	r0, r5
  407c7e:	2300      	movs	r3, #0
  407c80:	6023      	str	r3, [r4, #0]
  407c82:	f7f8 fe6f 	bl	400964 <_write>
  407c86:	1c43      	adds	r3, r0, #1
  407c88:	d000      	beq.n	407c8c <_write_r+0x1c>
  407c8a:	bd70      	pop	{r4, r5, r6, pc}
  407c8c:	6823      	ldr	r3, [r4, #0]
  407c8e:	2b00      	cmp	r3, #0
  407c90:	d0fb      	beq.n	407c8a <_write_r+0x1a>
  407c92:	6033      	str	r3, [r6, #0]
  407c94:	bd70      	pop	{r4, r5, r6, pc}
  407c96:	bf00      	nop
  407c98:	20401068 	.word	0x20401068

00407c9c <__register_exitproc>:
  407c9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  407ca0:	4d2c      	ldr	r5, [pc, #176]	; (407d54 <__register_exitproc+0xb8>)
  407ca2:	4606      	mov	r6, r0
  407ca4:	6828      	ldr	r0, [r5, #0]
  407ca6:	4698      	mov	r8, r3
  407ca8:	460f      	mov	r7, r1
  407caa:	4691      	mov	r9, r2
  407cac:	f7ff f808 	bl	406cc0 <__retarget_lock_acquire_recursive>
  407cb0:	4b29      	ldr	r3, [pc, #164]	; (407d58 <__register_exitproc+0xbc>)
  407cb2:	681c      	ldr	r4, [r3, #0]
  407cb4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  407cb8:	2b00      	cmp	r3, #0
  407cba:	d03e      	beq.n	407d3a <__register_exitproc+0x9e>
  407cbc:	685a      	ldr	r2, [r3, #4]
  407cbe:	2a1f      	cmp	r2, #31
  407cc0:	dc1c      	bgt.n	407cfc <__register_exitproc+0x60>
  407cc2:	f102 0e01 	add.w	lr, r2, #1
  407cc6:	b176      	cbz	r6, 407ce6 <__register_exitproc+0x4a>
  407cc8:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  407ccc:	2401      	movs	r4, #1
  407cce:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  407cd2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  407cd6:	4094      	lsls	r4, r2
  407cd8:	4320      	orrs	r0, r4
  407cda:	2e02      	cmp	r6, #2
  407cdc:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  407ce0:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  407ce4:	d023      	beq.n	407d2e <__register_exitproc+0x92>
  407ce6:	3202      	adds	r2, #2
  407ce8:	f8c3 e004 	str.w	lr, [r3, #4]
  407cec:	6828      	ldr	r0, [r5, #0]
  407cee:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  407cf2:	f7fe ffe7 	bl	406cc4 <__retarget_lock_release_recursive>
  407cf6:	2000      	movs	r0, #0
  407cf8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407cfc:	4b17      	ldr	r3, [pc, #92]	; (407d5c <__register_exitproc+0xc0>)
  407cfe:	b30b      	cbz	r3, 407d44 <__register_exitproc+0xa8>
  407d00:	f44f 70c8 	mov.w	r0, #400	; 0x190
  407d04:	f7fa fcc8 	bl	402698 <malloc>
  407d08:	4603      	mov	r3, r0
  407d0a:	b1d8      	cbz	r0, 407d44 <__register_exitproc+0xa8>
  407d0c:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  407d10:	6002      	str	r2, [r0, #0]
  407d12:	2100      	movs	r1, #0
  407d14:	6041      	str	r1, [r0, #4]
  407d16:	460a      	mov	r2, r1
  407d18:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  407d1c:	f04f 0e01 	mov.w	lr, #1
  407d20:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  407d24:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  407d28:	2e00      	cmp	r6, #0
  407d2a:	d0dc      	beq.n	407ce6 <__register_exitproc+0x4a>
  407d2c:	e7cc      	b.n	407cc8 <__register_exitproc+0x2c>
  407d2e:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  407d32:	430c      	orrs	r4, r1
  407d34:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  407d38:	e7d5      	b.n	407ce6 <__register_exitproc+0x4a>
  407d3a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  407d3e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  407d42:	e7bb      	b.n	407cbc <__register_exitproc+0x20>
  407d44:	6828      	ldr	r0, [r5, #0]
  407d46:	f7fe ffbd 	bl	406cc4 <__retarget_lock_release_recursive>
  407d4a:	f04f 30ff 	mov.w	r0, #4294967295
  407d4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407d52:	bf00      	nop
  407d54:	20400850 	.word	0x20400850
  407d58:	00410900 	.word	0x00410900
  407d5c:	00402699 	.word	0x00402699

00407d60 <_calloc_r>:
  407d60:	b510      	push	{r4, lr}
  407d62:	fb02 f101 	mul.w	r1, r2, r1
  407d66:	f7fa fc9f 	bl	4026a8 <_malloc_r>
  407d6a:	4604      	mov	r4, r0
  407d6c:	b1d8      	cbz	r0, 407da6 <_calloc_r+0x46>
  407d6e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  407d72:	f022 0203 	bic.w	r2, r2, #3
  407d76:	3a04      	subs	r2, #4
  407d78:	2a24      	cmp	r2, #36	; 0x24
  407d7a:	d818      	bhi.n	407dae <_calloc_r+0x4e>
  407d7c:	2a13      	cmp	r2, #19
  407d7e:	d914      	bls.n	407daa <_calloc_r+0x4a>
  407d80:	2300      	movs	r3, #0
  407d82:	2a1b      	cmp	r2, #27
  407d84:	6003      	str	r3, [r0, #0]
  407d86:	6043      	str	r3, [r0, #4]
  407d88:	d916      	bls.n	407db8 <_calloc_r+0x58>
  407d8a:	2a24      	cmp	r2, #36	; 0x24
  407d8c:	6083      	str	r3, [r0, #8]
  407d8e:	60c3      	str	r3, [r0, #12]
  407d90:	bf11      	iteee	ne
  407d92:	f100 0210 	addne.w	r2, r0, #16
  407d96:	6103      	streq	r3, [r0, #16]
  407d98:	6143      	streq	r3, [r0, #20]
  407d9a:	f100 0218 	addeq.w	r2, r0, #24
  407d9e:	2300      	movs	r3, #0
  407da0:	6013      	str	r3, [r2, #0]
  407da2:	6053      	str	r3, [r2, #4]
  407da4:	6093      	str	r3, [r2, #8]
  407da6:	4620      	mov	r0, r4
  407da8:	bd10      	pop	{r4, pc}
  407daa:	4602      	mov	r2, r0
  407dac:	e7f7      	b.n	407d9e <_calloc_r+0x3e>
  407dae:	2100      	movs	r1, #0
  407db0:	f7fa ff2a 	bl	402c08 <memset>
  407db4:	4620      	mov	r0, r4
  407db6:	bd10      	pop	{r4, pc}
  407db8:	f100 0208 	add.w	r2, r0, #8
  407dbc:	e7ef      	b.n	407d9e <_calloc_r+0x3e>
  407dbe:	bf00      	nop

00407dc0 <_close_r>:
  407dc0:	b538      	push	{r3, r4, r5, lr}
  407dc2:	4c07      	ldr	r4, [pc, #28]	; (407de0 <_close_r+0x20>)
  407dc4:	2300      	movs	r3, #0
  407dc6:	4605      	mov	r5, r0
  407dc8:	4608      	mov	r0, r1
  407dca:	6023      	str	r3, [r4, #0]
  407dcc:	f7fa f8ce 	bl	401f6c <_close>
  407dd0:	1c43      	adds	r3, r0, #1
  407dd2:	d000      	beq.n	407dd6 <_close_r+0x16>
  407dd4:	bd38      	pop	{r3, r4, r5, pc}
  407dd6:	6823      	ldr	r3, [r4, #0]
  407dd8:	2b00      	cmp	r3, #0
  407dda:	d0fb      	beq.n	407dd4 <_close_r+0x14>
  407ddc:	602b      	str	r3, [r5, #0]
  407dde:	bd38      	pop	{r3, r4, r5, pc}
  407de0:	20401068 	.word	0x20401068

00407de4 <_fclose_r>:
  407de4:	b570      	push	{r4, r5, r6, lr}
  407de6:	b159      	cbz	r1, 407e00 <_fclose_r+0x1c>
  407de8:	4605      	mov	r5, r0
  407dea:	460c      	mov	r4, r1
  407dec:	b110      	cbz	r0, 407df4 <_fclose_r+0x10>
  407dee:	6b83      	ldr	r3, [r0, #56]	; 0x38
  407df0:	2b00      	cmp	r3, #0
  407df2:	d03c      	beq.n	407e6e <_fclose_r+0x8a>
  407df4:	6e63      	ldr	r3, [r4, #100]	; 0x64
  407df6:	07d8      	lsls	r0, r3, #31
  407df8:	d505      	bpl.n	407e06 <_fclose_r+0x22>
  407dfa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  407dfe:	b92b      	cbnz	r3, 407e0c <_fclose_r+0x28>
  407e00:	2600      	movs	r6, #0
  407e02:	4630      	mov	r0, r6
  407e04:	bd70      	pop	{r4, r5, r6, pc}
  407e06:	89a3      	ldrh	r3, [r4, #12]
  407e08:	0599      	lsls	r1, r3, #22
  407e0a:	d53c      	bpl.n	407e86 <_fclose_r+0xa2>
  407e0c:	4621      	mov	r1, r4
  407e0e:	4628      	mov	r0, r5
  407e10:	f7fe fa90 	bl	406334 <__sflush_r>
  407e14:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  407e16:	4606      	mov	r6, r0
  407e18:	b133      	cbz	r3, 407e28 <_fclose_r+0x44>
  407e1a:	69e1      	ldr	r1, [r4, #28]
  407e1c:	4628      	mov	r0, r5
  407e1e:	4798      	blx	r3
  407e20:	2800      	cmp	r0, #0
  407e22:	bfb8      	it	lt
  407e24:	f04f 36ff 	movlt.w	r6, #4294967295
  407e28:	89a3      	ldrh	r3, [r4, #12]
  407e2a:	061a      	lsls	r2, r3, #24
  407e2c:	d422      	bmi.n	407e74 <_fclose_r+0x90>
  407e2e:	6b21      	ldr	r1, [r4, #48]	; 0x30
  407e30:	b141      	cbz	r1, 407e44 <_fclose_r+0x60>
  407e32:	f104 0340 	add.w	r3, r4, #64	; 0x40
  407e36:	4299      	cmp	r1, r3
  407e38:	d002      	beq.n	407e40 <_fclose_r+0x5c>
  407e3a:	4628      	mov	r0, r5
  407e3c:	f7fe fc98 	bl	406770 <_free_r>
  407e40:	2300      	movs	r3, #0
  407e42:	6323      	str	r3, [r4, #48]	; 0x30
  407e44:	6c61      	ldr	r1, [r4, #68]	; 0x44
  407e46:	b121      	cbz	r1, 407e52 <_fclose_r+0x6e>
  407e48:	4628      	mov	r0, r5
  407e4a:	f7fe fc91 	bl	406770 <_free_r>
  407e4e:	2300      	movs	r3, #0
  407e50:	6463      	str	r3, [r4, #68]	; 0x44
  407e52:	f7fe fb93 	bl	40657c <__sfp_lock_acquire>
  407e56:	6e63      	ldr	r3, [r4, #100]	; 0x64
  407e58:	2200      	movs	r2, #0
  407e5a:	07db      	lsls	r3, r3, #31
  407e5c:	81a2      	strh	r2, [r4, #12]
  407e5e:	d50e      	bpl.n	407e7e <_fclose_r+0x9a>
  407e60:	6da0      	ldr	r0, [r4, #88]	; 0x58
  407e62:	f7fe ff2b 	bl	406cbc <__retarget_lock_close_recursive>
  407e66:	f7fe fb8f 	bl	406588 <__sfp_lock_release>
  407e6a:	4630      	mov	r0, r6
  407e6c:	bd70      	pop	{r4, r5, r6, pc}
  407e6e:	f7fe fb59 	bl	406524 <__sinit>
  407e72:	e7bf      	b.n	407df4 <_fclose_r+0x10>
  407e74:	6921      	ldr	r1, [r4, #16]
  407e76:	4628      	mov	r0, r5
  407e78:	f7fe fc7a 	bl	406770 <_free_r>
  407e7c:	e7d7      	b.n	407e2e <_fclose_r+0x4a>
  407e7e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  407e80:	f7fe ff20 	bl	406cc4 <__retarget_lock_release_recursive>
  407e84:	e7ec      	b.n	407e60 <_fclose_r+0x7c>
  407e86:	6da0      	ldr	r0, [r4, #88]	; 0x58
  407e88:	f7fe ff1a 	bl	406cc0 <__retarget_lock_acquire_recursive>
  407e8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  407e90:	2b00      	cmp	r3, #0
  407e92:	d1bb      	bne.n	407e0c <_fclose_r+0x28>
  407e94:	6e66      	ldr	r6, [r4, #100]	; 0x64
  407e96:	f016 0601 	ands.w	r6, r6, #1
  407e9a:	d1b1      	bne.n	407e00 <_fclose_r+0x1c>
  407e9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
  407e9e:	f7fe ff11 	bl	406cc4 <__retarget_lock_release_recursive>
  407ea2:	4630      	mov	r0, r6
  407ea4:	bd70      	pop	{r4, r5, r6, pc}
  407ea6:	bf00      	nop

00407ea8 <_fstat_r>:
  407ea8:	b538      	push	{r3, r4, r5, lr}
  407eaa:	460b      	mov	r3, r1
  407eac:	4c07      	ldr	r4, [pc, #28]	; (407ecc <_fstat_r+0x24>)
  407eae:	4605      	mov	r5, r0
  407eb0:	4611      	mov	r1, r2
  407eb2:	4618      	mov	r0, r3
  407eb4:	2300      	movs	r3, #0
  407eb6:	6023      	str	r3, [r4, #0]
  407eb8:	f7fa f85b 	bl	401f72 <_fstat>
  407ebc:	1c43      	adds	r3, r0, #1
  407ebe:	d000      	beq.n	407ec2 <_fstat_r+0x1a>
  407ec0:	bd38      	pop	{r3, r4, r5, pc}
  407ec2:	6823      	ldr	r3, [r4, #0]
  407ec4:	2b00      	cmp	r3, #0
  407ec6:	d0fb      	beq.n	407ec0 <_fstat_r+0x18>
  407ec8:	602b      	str	r3, [r5, #0]
  407eca:	bd38      	pop	{r3, r4, r5, pc}
  407ecc:	20401068 	.word	0x20401068

00407ed0 <_isatty_r>:
  407ed0:	b538      	push	{r3, r4, r5, lr}
  407ed2:	4c07      	ldr	r4, [pc, #28]	; (407ef0 <_isatty_r+0x20>)
  407ed4:	2300      	movs	r3, #0
  407ed6:	4605      	mov	r5, r0
  407ed8:	4608      	mov	r0, r1
  407eda:	6023      	str	r3, [r4, #0]
  407edc:	f7fa f84e 	bl	401f7c <_isatty>
  407ee0:	1c43      	adds	r3, r0, #1
  407ee2:	d000      	beq.n	407ee6 <_isatty_r+0x16>
  407ee4:	bd38      	pop	{r3, r4, r5, pc}
  407ee6:	6823      	ldr	r3, [r4, #0]
  407ee8:	2b00      	cmp	r3, #0
  407eea:	d0fb      	beq.n	407ee4 <_isatty_r+0x14>
  407eec:	602b      	str	r3, [r5, #0]
  407eee:	bd38      	pop	{r3, r4, r5, pc}
  407ef0:	20401068 	.word	0x20401068

00407ef4 <_lseek_r>:
  407ef4:	b570      	push	{r4, r5, r6, lr}
  407ef6:	460d      	mov	r5, r1
  407ef8:	4c08      	ldr	r4, [pc, #32]	; (407f1c <_lseek_r+0x28>)
  407efa:	4611      	mov	r1, r2
  407efc:	4606      	mov	r6, r0
  407efe:	461a      	mov	r2, r3
  407f00:	4628      	mov	r0, r5
  407f02:	2300      	movs	r3, #0
  407f04:	6023      	str	r3, [r4, #0]
  407f06:	f7fa f83b 	bl	401f80 <_lseek>
  407f0a:	1c43      	adds	r3, r0, #1
  407f0c:	d000      	beq.n	407f10 <_lseek_r+0x1c>
  407f0e:	bd70      	pop	{r4, r5, r6, pc}
  407f10:	6823      	ldr	r3, [r4, #0]
  407f12:	2b00      	cmp	r3, #0
  407f14:	d0fb      	beq.n	407f0e <_lseek_r+0x1a>
  407f16:	6033      	str	r3, [r6, #0]
  407f18:	bd70      	pop	{r4, r5, r6, pc}
  407f1a:	bf00      	nop
  407f1c:	20401068 	.word	0x20401068

00407f20 <_read_r>:
  407f20:	b570      	push	{r4, r5, r6, lr}
  407f22:	460d      	mov	r5, r1
  407f24:	4c08      	ldr	r4, [pc, #32]	; (407f48 <_read_r+0x28>)
  407f26:	4611      	mov	r1, r2
  407f28:	4606      	mov	r6, r0
  407f2a:	461a      	mov	r2, r3
  407f2c:	4628      	mov	r0, r5
  407f2e:	2300      	movs	r3, #0
  407f30:	6023      	str	r3, [r4, #0]
  407f32:	f7f8 fcf9 	bl	400928 <_read>
  407f36:	1c43      	adds	r3, r0, #1
  407f38:	d000      	beq.n	407f3c <_read_r+0x1c>
  407f3a:	bd70      	pop	{r4, r5, r6, pc}
  407f3c:	6823      	ldr	r3, [r4, #0]
  407f3e:	2b00      	cmp	r3, #0
  407f40:	d0fb      	beq.n	407f3a <_read_r+0x1a>
  407f42:	6033      	str	r3, [r6, #0]
  407f44:	bd70      	pop	{r4, r5, r6, pc}
  407f46:	bf00      	nop
  407f48:	20401068 	.word	0x20401068

00407f4c <__aeabi_drsub>:
  407f4c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  407f50:	e002      	b.n	407f58 <__adddf3>
  407f52:	bf00      	nop

00407f54 <__aeabi_dsub>:
  407f54:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00407f58 <__adddf3>:
  407f58:	b530      	push	{r4, r5, lr}
  407f5a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  407f5e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  407f62:	ea94 0f05 	teq	r4, r5
  407f66:	bf08      	it	eq
  407f68:	ea90 0f02 	teqeq	r0, r2
  407f6c:	bf1f      	itttt	ne
  407f6e:	ea54 0c00 	orrsne.w	ip, r4, r0
  407f72:	ea55 0c02 	orrsne.w	ip, r5, r2
  407f76:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  407f7a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  407f7e:	f000 80e2 	beq.w	408146 <__adddf3+0x1ee>
  407f82:	ea4f 5454 	mov.w	r4, r4, lsr #21
  407f86:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  407f8a:	bfb8      	it	lt
  407f8c:	426d      	neglt	r5, r5
  407f8e:	dd0c      	ble.n	407faa <__adddf3+0x52>
  407f90:	442c      	add	r4, r5
  407f92:	ea80 0202 	eor.w	r2, r0, r2
  407f96:	ea81 0303 	eor.w	r3, r1, r3
  407f9a:	ea82 0000 	eor.w	r0, r2, r0
  407f9e:	ea83 0101 	eor.w	r1, r3, r1
  407fa2:	ea80 0202 	eor.w	r2, r0, r2
  407fa6:	ea81 0303 	eor.w	r3, r1, r3
  407faa:	2d36      	cmp	r5, #54	; 0x36
  407fac:	bf88      	it	hi
  407fae:	bd30      	pophi	{r4, r5, pc}
  407fb0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407fb4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  407fb8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  407fbc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  407fc0:	d002      	beq.n	407fc8 <__adddf3+0x70>
  407fc2:	4240      	negs	r0, r0
  407fc4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407fc8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  407fcc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  407fd0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  407fd4:	d002      	beq.n	407fdc <__adddf3+0x84>
  407fd6:	4252      	negs	r2, r2
  407fd8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  407fdc:	ea94 0f05 	teq	r4, r5
  407fe0:	f000 80a7 	beq.w	408132 <__adddf3+0x1da>
  407fe4:	f1a4 0401 	sub.w	r4, r4, #1
  407fe8:	f1d5 0e20 	rsbs	lr, r5, #32
  407fec:	db0d      	blt.n	40800a <__adddf3+0xb2>
  407fee:	fa02 fc0e 	lsl.w	ip, r2, lr
  407ff2:	fa22 f205 	lsr.w	r2, r2, r5
  407ff6:	1880      	adds	r0, r0, r2
  407ff8:	f141 0100 	adc.w	r1, r1, #0
  407ffc:	fa03 f20e 	lsl.w	r2, r3, lr
  408000:	1880      	adds	r0, r0, r2
  408002:	fa43 f305 	asr.w	r3, r3, r5
  408006:	4159      	adcs	r1, r3
  408008:	e00e      	b.n	408028 <__adddf3+0xd0>
  40800a:	f1a5 0520 	sub.w	r5, r5, #32
  40800e:	f10e 0e20 	add.w	lr, lr, #32
  408012:	2a01      	cmp	r2, #1
  408014:	fa03 fc0e 	lsl.w	ip, r3, lr
  408018:	bf28      	it	cs
  40801a:	f04c 0c02 	orrcs.w	ip, ip, #2
  40801e:	fa43 f305 	asr.w	r3, r3, r5
  408022:	18c0      	adds	r0, r0, r3
  408024:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  408028:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40802c:	d507      	bpl.n	40803e <__adddf3+0xe6>
  40802e:	f04f 0e00 	mov.w	lr, #0
  408032:	f1dc 0c00 	rsbs	ip, ip, #0
  408036:	eb7e 0000 	sbcs.w	r0, lr, r0
  40803a:	eb6e 0101 	sbc.w	r1, lr, r1
  40803e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  408042:	d31b      	bcc.n	40807c <__adddf3+0x124>
  408044:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  408048:	d30c      	bcc.n	408064 <__adddf3+0x10c>
  40804a:	0849      	lsrs	r1, r1, #1
  40804c:	ea5f 0030 	movs.w	r0, r0, rrx
  408050:	ea4f 0c3c 	mov.w	ip, ip, rrx
  408054:	f104 0401 	add.w	r4, r4, #1
  408058:	ea4f 5244 	mov.w	r2, r4, lsl #21
  40805c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  408060:	f080 809a 	bcs.w	408198 <__adddf3+0x240>
  408064:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  408068:	bf08      	it	eq
  40806a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40806e:	f150 0000 	adcs.w	r0, r0, #0
  408072:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  408076:	ea41 0105 	orr.w	r1, r1, r5
  40807a:	bd30      	pop	{r4, r5, pc}
  40807c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  408080:	4140      	adcs	r0, r0
  408082:	eb41 0101 	adc.w	r1, r1, r1
  408086:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40808a:	f1a4 0401 	sub.w	r4, r4, #1
  40808e:	d1e9      	bne.n	408064 <__adddf3+0x10c>
  408090:	f091 0f00 	teq	r1, #0
  408094:	bf04      	itt	eq
  408096:	4601      	moveq	r1, r0
  408098:	2000      	moveq	r0, #0
  40809a:	fab1 f381 	clz	r3, r1
  40809e:	bf08      	it	eq
  4080a0:	3320      	addeq	r3, #32
  4080a2:	f1a3 030b 	sub.w	r3, r3, #11
  4080a6:	f1b3 0220 	subs.w	r2, r3, #32
  4080aa:	da0c      	bge.n	4080c6 <__adddf3+0x16e>
  4080ac:	320c      	adds	r2, #12
  4080ae:	dd08      	ble.n	4080c2 <__adddf3+0x16a>
  4080b0:	f102 0c14 	add.w	ip, r2, #20
  4080b4:	f1c2 020c 	rsb	r2, r2, #12
  4080b8:	fa01 f00c 	lsl.w	r0, r1, ip
  4080bc:	fa21 f102 	lsr.w	r1, r1, r2
  4080c0:	e00c      	b.n	4080dc <__adddf3+0x184>
  4080c2:	f102 0214 	add.w	r2, r2, #20
  4080c6:	bfd8      	it	le
  4080c8:	f1c2 0c20 	rsble	ip, r2, #32
  4080cc:	fa01 f102 	lsl.w	r1, r1, r2
  4080d0:	fa20 fc0c 	lsr.w	ip, r0, ip
  4080d4:	bfdc      	itt	le
  4080d6:	ea41 010c 	orrle.w	r1, r1, ip
  4080da:	4090      	lslle	r0, r2
  4080dc:	1ae4      	subs	r4, r4, r3
  4080de:	bfa2      	ittt	ge
  4080e0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  4080e4:	4329      	orrge	r1, r5
  4080e6:	bd30      	popge	{r4, r5, pc}
  4080e8:	ea6f 0404 	mvn.w	r4, r4
  4080ec:	3c1f      	subs	r4, #31
  4080ee:	da1c      	bge.n	40812a <__adddf3+0x1d2>
  4080f0:	340c      	adds	r4, #12
  4080f2:	dc0e      	bgt.n	408112 <__adddf3+0x1ba>
  4080f4:	f104 0414 	add.w	r4, r4, #20
  4080f8:	f1c4 0220 	rsb	r2, r4, #32
  4080fc:	fa20 f004 	lsr.w	r0, r0, r4
  408100:	fa01 f302 	lsl.w	r3, r1, r2
  408104:	ea40 0003 	orr.w	r0, r0, r3
  408108:	fa21 f304 	lsr.w	r3, r1, r4
  40810c:	ea45 0103 	orr.w	r1, r5, r3
  408110:	bd30      	pop	{r4, r5, pc}
  408112:	f1c4 040c 	rsb	r4, r4, #12
  408116:	f1c4 0220 	rsb	r2, r4, #32
  40811a:	fa20 f002 	lsr.w	r0, r0, r2
  40811e:	fa01 f304 	lsl.w	r3, r1, r4
  408122:	ea40 0003 	orr.w	r0, r0, r3
  408126:	4629      	mov	r1, r5
  408128:	bd30      	pop	{r4, r5, pc}
  40812a:	fa21 f004 	lsr.w	r0, r1, r4
  40812e:	4629      	mov	r1, r5
  408130:	bd30      	pop	{r4, r5, pc}
  408132:	f094 0f00 	teq	r4, #0
  408136:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  40813a:	bf06      	itte	eq
  40813c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  408140:	3401      	addeq	r4, #1
  408142:	3d01      	subne	r5, #1
  408144:	e74e      	b.n	407fe4 <__adddf3+0x8c>
  408146:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40814a:	bf18      	it	ne
  40814c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  408150:	d029      	beq.n	4081a6 <__adddf3+0x24e>
  408152:	ea94 0f05 	teq	r4, r5
  408156:	bf08      	it	eq
  408158:	ea90 0f02 	teqeq	r0, r2
  40815c:	d005      	beq.n	40816a <__adddf3+0x212>
  40815e:	ea54 0c00 	orrs.w	ip, r4, r0
  408162:	bf04      	itt	eq
  408164:	4619      	moveq	r1, r3
  408166:	4610      	moveq	r0, r2
  408168:	bd30      	pop	{r4, r5, pc}
  40816a:	ea91 0f03 	teq	r1, r3
  40816e:	bf1e      	ittt	ne
  408170:	2100      	movne	r1, #0
  408172:	2000      	movne	r0, #0
  408174:	bd30      	popne	{r4, r5, pc}
  408176:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40817a:	d105      	bne.n	408188 <__adddf3+0x230>
  40817c:	0040      	lsls	r0, r0, #1
  40817e:	4149      	adcs	r1, r1
  408180:	bf28      	it	cs
  408182:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  408186:	bd30      	pop	{r4, r5, pc}
  408188:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40818c:	bf3c      	itt	cc
  40818e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  408192:	bd30      	popcc	{r4, r5, pc}
  408194:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  408198:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40819c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4081a0:	f04f 0000 	mov.w	r0, #0
  4081a4:	bd30      	pop	{r4, r5, pc}
  4081a6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4081aa:	bf1a      	itte	ne
  4081ac:	4619      	movne	r1, r3
  4081ae:	4610      	movne	r0, r2
  4081b0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4081b4:	bf1c      	itt	ne
  4081b6:	460b      	movne	r3, r1
  4081b8:	4602      	movne	r2, r0
  4081ba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4081be:	bf06      	itte	eq
  4081c0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4081c4:	ea91 0f03 	teqeq	r1, r3
  4081c8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4081cc:	bd30      	pop	{r4, r5, pc}
  4081ce:	bf00      	nop

004081d0 <__aeabi_ui2d>:
  4081d0:	f090 0f00 	teq	r0, #0
  4081d4:	bf04      	itt	eq
  4081d6:	2100      	moveq	r1, #0
  4081d8:	4770      	bxeq	lr
  4081da:	b530      	push	{r4, r5, lr}
  4081dc:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4081e0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4081e4:	f04f 0500 	mov.w	r5, #0
  4081e8:	f04f 0100 	mov.w	r1, #0
  4081ec:	e750      	b.n	408090 <__adddf3+0x138>
  4081ee:	bf00      	nop

004081f0 <__aeabi_i2d>:
  4081f0:	f090 0f00 	teq	r0, #0
  4081f4:	bf04      	itt	eq
  4081f6:	2100      	moveq	r1, #0
  4081f8:	4770      	bxeq	lr
  4081fa:	b530      	push	{r4, r5, lr}
  4081fc:	f44f 6480 	mov.w	r4, #1024	; 0x400
  408200:	f104 0432 	add.w	r4, r4, #50	; 0x32
  408204:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  408208:	bf48      	it	mi
  40820a:	4240      	negmi	r0, r0
  40820c:	f04f 0100 	mov.w	r1, #0
  408210:	e73e      	b.n	408090 <__adddf3+0x138>
  408212:	bf00      	nop

00408214 <__aeabi_f2d>:
  408214:	0042      	lsls	r2, r0, #1
  408216:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40821a:	ea4f 0131 	mov.w	r1, r1, rrx
  40821e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  408222:	bf1f      	itttt	ne
  408224:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  408228:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40822c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  408230:	4770      	bxne	lr
  408232:	f092 0f00 	teq	r2, #0
  408236:	bf14      	ite	ne
  408238:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  40823c:	4770      	bxeq	lr
  40823e:	b530      	push	{r4, r5, lr}
  408240:	f44f 7460 	mov.w	r4, #896	; 0x380
  408244:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  408248:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40824c:	e720      	b.n	408090 <__adddf3+0x138>
  40824e:	bf00      	nop

00408250 <__aeabi_ul2d>:
  408250:	ea50 0201 	orrs.w	r2, r0, r1
  408254:	bf08      	it	eq
  408256:	4770      	bxeq	lr
  408258:	b530      	push	{r4, r5, lr}
  40825a:	f04f 0500 	mov.w	r5, #0
  40825e:	e00a      	b.n	408276 <__aeabi_l2d+0x16>

00408260 <__aeabi_l2d>:
  408260:	ea50 0201 	orrs.w	r2, r0, r1
  408264:	bf08      	it	eq
  408266:	4770      	bxeq	lr
  408268:	b530      	push	{r4, r5, lr}
  40826a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  40826e:	d502      	bpl.n	408276 <__aeabi_l2d+0x16>
  408270:	4240      	negs	r0, r0
  408272:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  408276:	f44f 6480 	mov.w	r4, #1024	; 0x400
  40827a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40827e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  408282:	f43f aedc 	beq.w	40803e <__adddf3+0xe6>
  408286:	f04f 0203 	mov.w	r2, #3
  40828a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40828e:	bf18      	it	ne
  408290:	3203      	addne	r2, #3
  408292:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  408296:	bf18      	it	ne
  408298:	3203      	addne	r2, #3
  40829a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40829e:	f1c2 0320 	rsb	r3, r2, #32
  4082a2:	fa00 fc03 	lsl.w	ip, r0, r3
  4082a6:	fa20 f002 	lsr.w	r0, r0, r2
  4082aa:	fa01 fe03 	lsl.w	lr, r1, r3
  4082ae:	ea40 000e 	orr.w	r0, r0, lr
  4082b2:	fa21 f102 	lsr.w	r1, r1, r2
  4082b6:	4414      	add	r4, r2
  4082b8:	e6c1      	b.n	40803e <__adddf3+0xe6>
  4082ba:	bf00      	nop

004082bc <__aeabi_dmul>:
  4082bc:	b570      	push	{r4, r5, r6, lr}
  4082be:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4082c2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4082c6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4082ca:	bf1d      	ittte	ne
  4082cc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4082d0:	ea94 0f0c 	teqne	r4, ip
  4082d4:	ea95 0f0c 	teqne	r5, ip
  4082d8:	f000 f8de 	bleq	408498 <__aeabi_dmul+0x1dc>
  4082dc:	442c      	add	r4, r5
  4082de:	ea81 0603 	eor.w	r6, r1, r3
  4082e2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  4082e6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  4082ea:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4082ee:	bf18      	it	ne
  4082f0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  4082f4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4082f8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4082fc:	d038      	beq.n	408370 <__aeabi_dmul+0xb4>
  4082fe:	fba0 ce02 	umull	ip, lr, r0, r2
  408302:	f04f 0500 	mov.w	r5, #0
  408306:	fbe1 e502 	umlal	lr, r5, r1, r2
  40830a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40830e:	fbe0 e503 	umlal	lr, r5, r0, r3
  408312:	f04f 0600 	mov.w	r6, #0
  408316:	fbe1 5603 	umlal	r5, r6, r1, r3
  40831a:	f09c 0f00 	teq	ip, #0
  40831e:	bf18      	it	ne
  408320:	f04e 0e01 	orrne.w	lr, lr, #1
  408324:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  408328:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  40832c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  408330:	d204      	bcs.n	40833c <__aeabi_dmul+0x80>
  408332:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  408336:	416d      	adcs	r5, r5
  408338:	eb46 0606 	adc.w	r6, r6, r6
  40833c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  408340:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  408344:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  408348:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  40834c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  408350:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  408354:	bf88      	it	hi
  408356:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40835a:	d81e      	bhi.n	40839a <__aeabi_dmul+0xde>
  40835c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  408360:	bf08      	it	eq
  408362:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  408366:	f150 0000 	adcs.w	r0, r0, #0
  40836a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40836e:	bd70      	pop	{r4, r5, r6, pc}
  408370:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  408374:	ea46 0101 	orr.w	r1, r6, r1
  408378:	ea40 0002 	orr.w	r0, r0, r2
  40837c:	ea81 0103 	eor.w	r1, r1, r3
  408380:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  408384:	bfc2      	ittt	gt
  408386:	ebd4 050c 	rsbsgt	r5, r4, ip
  40838a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40838e:	bd70      	popgt	{r4, r5, r6, pc}
  408390:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  408394:	f04f 0e00 	mov.w	lr, #0
  408398:	3c01      	subs	r4, #1
  40839a:	f300 80ab 	bgt.w	4084f4 <__aeabi_dmul+0x238>
  40839e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  4083a2:	bfde      	ittt	le
  4083a4:	2000      	movle	r0, #0
  4083a6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4083aa:	bd70      	pople	{r4, r5, r6, pc}
  4083ac:	f1c4 0400 	rsb	r4, r4, #0
  4083b0:	3c20      	subs	r4, #32
  4083b2:	da35      	bge.n	408420 <__aeabi_dmul+0x164>
  4083b4:	340c      	adds	r4, #12
  4083b6:	dc1b      	bgt.n	4083f0 <__aeabi_dmul+0x134>
  4083b8:	f104 0414 	add.w	r4, r4, #20
  4083bc:	f1c4 0520 	rsb	r5, r4, #32
  4083c0:	fa00 f305 	lsl.w	r3, r0, r5
  4083c4:	fa20 f004 	lsr.w	r0, r0, r4
  4083c8:	fa01 f205 	lsl.w	r2, r1, r5
  4083cc:	ea40 0002 	orr.w	r0, r0, r2
  4083d0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  4083d4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4083d8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4083dc:	fa21 f604 	lsr.w	r6, r1, r4
  4083e0:	eb42 0106 	adc.w	r1, r2, r6
  4083e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4083e8:	bf08      	it	eq
  4083ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4083ee:	bd70      	pop	{r4, r5, r6, pc}
  4083f0:	f1c4 040c 	rsb	r4, r4, #12
  4083f4:	f1c4 0520 	rsb	r5, r4, #32
  4083f8:	fa00 f304 	lsl.w	r3, r0, r4
  4083fc:	fa20 f005 	lsr.w	r0, r0, r5
  408400:	fa01 f204 	lsl.w	r2, r1, r4
  408404:	ea40 0002 	orr.w	r0, r0, r2
  408408:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40840c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  408410:	f141 0100 	adc.w	r1, r1, #0
  408414:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  408418:	bf08      	it	eq
  40841a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40841e:	bd70      	pop	{r4, r5, r6, pc}
  408420:	f1c4 0520 	rsb	r5, r4, #32
  408424:	fa00 f205 	lsl.w	r2, r0, r5
  408428:	ea4e 0e02 	orr.w	lr, lr, r2
  40842c:	fa20 f304 	lsr.w	r3, r0, r4
  408430:	fa01 f205 	lsl.w	r2, r1, r5
  408434:	ea43 0302 	orr.w	r3, r3, r2
  408438:	fa21 f004 	lsr.w	r0, r1, r4
  40843c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  408440:	fa21 f204 	lsr.w	r2, r1, r4
  408444:	ea20 0002 	bic.w	r0, r0, r2
  408448:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  40844c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  408450:	bf08      	it	eq
  408452:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  408456:	bd70      	pop	{r4, r5, r6, pc}
  408458:	f094 0f00 	teq	r4, #0
  40845c:	d10f      	bne.n	40847e <__aeabi_dmul+0x1c2>
  40845e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  408462:	0040      	lsls	r0, r0, #1
  408464:	eb41 0101 	adc.w	r1, r1, r1
  408468:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40846c:	bf08      	it	eq
  40846e:	3c01      	subeq	r4, #1
  408470:	d0f7      	beq.n	408462 <__aeabi_dmul+0x1a6>
  408472:	ea41 0106 	orr.w	r1, r1, r6
  408476:	f095 0f00 	teq	r5, #0
  40847a:	bf18      	it	ne
  40847c:	4770      	bxne	lr
  40847e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  408482:	0052      	lsls	r2, r2, #1
  408484:	eb43 0303 	adc.w	r3, r3, r3
  408488:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40848c:	bf08      	it	eq
  40848e:	3d01      	subeq	r5, #1
  408490:	d0f7      	beq.n	408482 <__aeabi_dmul+0x1c6>
  408492:	ea43 0306 	orr.w	r3, r3, r6
  408496:	4770      	bx	lr
  408498:	ea94 0f0c 	teq	r4, ip
  40849c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4084a0:	bf18      	it	ne
  4084a2:	ea95 0f0c 	teqne	r5, ip
  4084a6:	d00c      	beq.n	4084c2 <__aeabi_dmul+0x206>
  4084a8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4084ac:	bf18      	it	ne
  4084ae:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4084b2:	d1d1      	bne.n	408458 <__aeabi_dmul+0x19c>
  4084b4:	ea81 0103 	eor.w	r1, r1, r3
  4084b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4084bc:	f04f 0000 	mov.w	r0, #0
  4084c0:	bd70      	pop	{r4, r5, r6, pc}
  4084c2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4084c6:	bf06      	itte	eq
  4084c8:	4610      	moveq	r0, r2
  4084ca:	4619      	moveq	r1, r3
  4084cc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4084d0:	d019      	beq.n	408506 <__aeabi_dmul+0x24a>
  4084d2:	ea94 0f0c 	teq	r4, ip
  4084d6:	d102      	bne.n	4084de <__aeabi_dmul+0x222>
  4084d8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  4084dc:	d113      	bne.n	408506 <__aeabi_dmul+0x24a>
  4084de:	ea95 0f0c 	teq	r5, ip
  4084e2:	d105      	bne.n	4084f0 <__aeabi_dmul+0x234>
  4084e4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4084e8:	bf1c      	itt	ne
  4084ea:	4610      	movne	r0, r2
  4084ec:	4619      	movne	r1, r3
  4084ee:	d10a      	bne.n	408506 <__aeabi_dmul+0x24a>
  4084f0:	ea81 0103 	eor.w	r1, r1, r3
  4084f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4084f8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4084fc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  408500:	f04f 0000 	mov.w	r0, #0
  408504:	bd70      	pop	{r4, r5, r6, pc}
  408506:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40850a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40850e:	bd70      	pop	{r4, r5, r6, pc}

00408510 <__aeabi_ddiv>:
  408510:	b570      	push	{r4, r5, r6, lr}
  408512:	f04f 0cff 	mov.w	ip, #255	; 0xff
  408516:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40851a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40851e:	bf1d      	ittte	ne
  408520:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  408524:	ea94 0f0c 	teqne	r4, ip
  408528:	ea95 0f0c 	teqne	r5, ip
  40852c:	f000 f8a7 	bleq	40867e <__aeabi_ddiv+0x16e>
  408530:	eba4 0405 	sub.w	r4, r4, r5
  408534:	ea81 0e03 	eor.w	lr, r1, r3
  408538:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40853c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  408540:	f000 8088 	beq.w	408654 <__aeabi_ddiv+0x144>
  408544:	ea4f 3303 	mov.w	r3, r3, lsl #12
  408548:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  40854c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  408550:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  408554:	ea4f 2202 	mov.w	r2, r2, lsl #8
  408558:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  40855c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  408560:	ea4f 2600 	mov.w	r6, r0, lsl #8
  408564:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  408568:	429d      	cmp	r5, r3
  40856a:	bf08      	it	eq
  40856c:	4296      	cmpeq	r6, r2
  40856e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  408572:	f504 7440 	add.w	r4, r4, #768	; 0x300
  408576:	d202      	bcs.n	40857e <__aeabi_ddiv+0x6e>
  408578:	085b      	lsrs	r3, r3, #1
  40857a:	ea4f 0232 	mov.w	r2, r2, rrx
  40857e:	1ab6      	subs	r6, r6, r2
  408580:	eb65 0503 	sbc.w	r5, r5, r3
  408584:	085b      	lsrs	r3, r3, #1
  408586:	ea4f 0232 	mov.w	r2, r2, rrx
  40858a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40858e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  408592:	ebb6 0e02 	subs.w	lr, r6, r2
  408596:	eb75 0e03 	sbcs.w	lr, r5, r3
  40859a:	bf22      	ittt	cs
  40859c:	1ab6      	subcs	r6, r6, r2
  40859e:	4675      	movcs	r5, lr
  4085a0:	ea40 000c 	orrcs.w	r0, r0, ip
  4085a4:	085b      	lsrs	r3, r3, #1
  4085a6:	ea4f 0232 	mov.w	r2, r2, rrx
  4085aa:	ebb6 0e02 	subs.w	lr, r6, r2
  4085ae:	eb75 0e03 	sbcs.w	lr, r5, r3
  4085b2:	bf22      	ittt	cs
  4085b4:	1ab6      	subcs	r6, r6, r2
  4085b6:	4675      	movcs	r5, lr
  4085b8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4085bc:	085b      	lsrs	r3, r3, #1
  4085be:	ea4f 0232 	mov.w	r2, r2, rrx
  4085c2:	ebb6 0e02 	subs.w	lr, r6, r2
  4085c6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4085ca:	bf22      	ittt	cs
  4085cc:	1ab6      	subcs	r6, r6, r2
  4085ce:	4675      	movcs	r5, lr
  4085d0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4085d4:	085b      	lsrs	r3, r3, #1
  4085d6:	ea4f 0232 	mov.w	r2, r2, rrx
  4085da:	ebb6 0e02 	subs.w	lr, r6, r2
  4085de:	eb75 0e03 	sbcs.w	lr, r5, r3
  4085e2:	bf22      	ittt	cs
  4085e4:	1ab6      	subcs	r6, r6, r2
  4085e6:	4675      	movcs	r5, lr
  4085e8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4085ec:	ea55 0e06 	orrs.w	lr, r5, r6
  4085f0:	d018      	beq.n	408624 <__aeabi_ddiv+0x114>
  4085f2:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4085f6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4085fa:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4085fe:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  408602:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  408606:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40860a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40860e:	d1c0      	bne.n	408592 <__aeabi_ddiv+0x82>
  408610:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  408614:	d10b      	bne.n	40862e <__aeabi_ddiv+0x11e>
  408616:	ea41 0100 	orr.w	r1, r1, r0
  40861a:	f04f 0000 	mov.w	r0, #0
  40861e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  408622:	e7b6      	b.n	408592 <__aeabi_ddiv+0x82>
  408624:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  408628:	bf04      	itt	eq
  40862a:	4301      	orreq	r1, r0
  40862c:	2000      	moveq	r0, #0
  40862e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  408632:	bf88      	it	hi
  408634:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  408638:	f63f aeaf 	bhi.w	40839a <__aeabi_dmul+0xde>
  40863c:	ebb5 0c03 	subs.w	ip, r5, r3
  408640:	bf04      	itt	eq
  408642:	ebb6 0c02 	subseq.w	ip, r6, r2
  408646:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40864a:	f150 0000 	adcs.w	r0, r0, #0
  40864e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  408652:	bd70      	pop	{r4, r5, r6, pc}
  408654:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  408658:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  40865c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  408660:	bfc2      	ittt	gt
  408662:	ebd4 050c 	rsbsgt	r5, r4, ip
  408666:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40866a:	bd70      	popgt	{r4, r5, r6, pc}
  40866c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  408670:	f04f 0e00 	mov.w	lr, #0
  408674:	3c01      	subs	r4, #1
  408676:	e690      	b.n	40839a <__aeabi_dmul+0xde>
  408678:	ea45 0e06 	orr.w	lr, r5, r6
  40867c:	e68d      	b.n	40839a <__aeabi_dmul+0xde>
  40867e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  408682:	ea94 0f0c 	teq	r4, ip
  408686:	bf08      	it	eq
  408688:	ea95 0f0c 	teqeq	r5, ip
  40868c:	f43f af3b 	beq.w	408506 <__aeabi_dmul+0x24a>
  408690:	ea94 0f0c 	teq	r4, ip
  408694:	d10a      	bne.n	4086ac <__aeabi_ddiv+0x19c>
  408696:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40869a:	f47f af34 	bne.w	408506 <__aeabi_dmul+0x24a>
  40869e:	ea95 0f0c 	teq	r5, ip
  4086a2:	f47f af25 	bne.w	4084f0 <__aeabi_dmul+0x234>
  4086a6:	4610      	mov	r0, r2
  4086a8:	4619      	mov	r1, r3
  4086aa:	e72c      	b.n	408506 <__aeabi_dmul+0x24a>
  4086ac:	ea95 0f0c 	teq	r5, ip
  4086b0:	d106      	bne.n	4086c0 <__aeabi_ddiv+0x1b0>
  4086b2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4086b6:	f43f aefd 	beq.w	4084b4 <__aeabi_dmul+0x1f8>
  4086ba:	4610      	mov	r0, r2
  4086bc:	4619      	mov	r1, r3
  4086be:	e722      	b.n	408506 <__aeabi_dmul+0x24a>
  4086c0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4086c4:	bf18      	it	ne
  4086c6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4086ca:	f47f aec5 	bne.w	408458 <__aeabi_dmul+0x19c>
  4086ce:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4086d2:	f47f af0d 	bne.w	4084f0 <__aeabi_dmul+0x234>
  4086d6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4086da:	f47f aeeb 	bne.w	4084b4 <__aeabi_dmul+0x1f8>
  4086de:	e712      	b.n	408506 <__aeabi_dmul+0x24a>

004086e0 <__gedf2>:
  4086e0:	f04f 3cff 	mov.w	ip, #4294967295
  4086e4:	e006      	b.n	4086f4 <__cmpdf2+0x4>
  4086e6:	bf00      	nop

004086e8 <__ledf2>:
  4086e8:	f04f 0c01 	mov.w	ip, #1
  4086ec:	e002      	b.n	4086f4 <__cmpdf2+0x4>
  4086ee:	bf00      	nop

004086f0 <__cmpdf2>:
  4086f0:	f04f 0c01 	mov.w	ip, #1
  4086f4:	f84d cd04 	str.w	ip, [sp, #-4]!
  4086f8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4086fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408700:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408704:	bf18      	it	ne
  408706:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40870a:	d01b      	beq.n	408744 <__cmpdf2+0x54>
  40870c:	b001      	add	sp, #4
  40870e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  408712:	bf0c      	ite	eq
  408714:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  408718:	ea91 0f03 	teqne	r1, r3
  40871c:	bf02      	ittt	eq
  40871e:	ea90 0f02 	teqeq	r0, r2
  408722:	2000      	moveq	r0, #0
  408724:	4770      	bxeq	lr
  408726:	f110 0f00 	cmn.w	r0, #0
  40872a:	ea91 0f03 	teq	r1, r3
  40872e:	bf58      	it	pl
  408730:	4299      	cmppl	r1, r3
  408732:	bf08      	it	eq
  408734:	4290      	cmpeq	r0, r2
  408736:	bf2c      	ite	cs
  408738:	17d8      	asrcs	r0, r3, #31
  40873a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  40873e:	f040 0001 	orr.w	r0, r0, #1
  408742:	4770      	bx	lr
  408744:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  408748:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40874c:	d102      	bne.n	408754 <__cmpdf2+0x64>
  40874e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  408752:	d107      	bne.n	408764 <__cmpdf2+0x74>
  408754:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408758:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40875c:	d1d6      	bne.n	40870c <__cmpdf2+0x1c>
  40875e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  408762:	d0d3      	beq.n	40870c <__cmpdf2+0x1c>
  408764:	f85d 0b04 	ldr.w	r0, [sp], #4
  408768:	4770      	bx	lr
  40876a:	bf00      	nop

0040876c <__aeabi_cdrcmple>:
  40876c:	4684      	mov	ip, r0
  40876e:	4610      	mov	r0, r2
  408770:	4662      	mov	r2, ip
  408772:	468c      	mov	ip, r1
  408774:	4619      	mov	r1, r3
  408776:	4663      	mov	r3, ip
  408778:	e000      	b.n	40877c <__aeabi_cdcmpeq>
  40877a:	bf00      	nop

0040877c <__aeabi_cdcmpeq>:
  40877c:	b501      	push	{r0, lr}
  40877e:	f7ff ffb7 	bl	4086f0 <__cmpdf2>
  408782:	2800      	cmp	r0, #0
  408784:	bf48      	it	mi
  408786:	f110 0f00 	cmnmi.w	r0, #0
  40878a:	bd01      	pop	{r0, pc}

0040878c <__aeabi_dcmpeq>:
  40878c:	f84d ed08 	str.w	lr, [sp, #-8]!
  408790:	f7ff fff4 	bl	40877c <__aeabi_cdcmpeq>
  408794:	bf0c      	ite	eq
  408796:	2001      	moveq	r0, #1
  408798:	2000      	movne	r0, #0
  40879a:	f85d fb08 	ldr.w	pc, [sp], #8
  40879e:	bf00      	nop

004087a0 <__aeabi_dcmplt>:
  4087a0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4087a4:	f7ff ffea 	bl	40877c <__aeabi_cdcmpeq>
  4087a8:	bf34      	ite	cc
  4087aa:	2001      	movcc	r0, #1
  4087ac:	2000      	movcs	r0, #0
  4087ae:	f85d fb08 	ldr.w	pc, [sp], #8
  4087b2:	bf00      	nop

004087b4 <__aeabi_dcmple>:
  4087b4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4087b8:	f7ff ffe0 	bl	40877c <__aeabi_cdcmpeq>
  4087bc:	bf94      	ite	ls
  4087be:	2001      	movls	r0, #1
  4087c0:	2000      	movhi	r0, #0
  4087c2:	f85d fb08 	ldr.w	pc, [sp], #8
  4087c6:	bf00      	nop

004087c8 <__aeabi_dcmpge>:
  4087c8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4087cc:	f7ff ffce 	bl	40876c <__aeabi_cdrcmple>
  4087d0:	bf94      	ite	ls
  4087d2:	2001      	movls	r0, #1
  4087d4:	2000      	movhi	r0, #0
  4087d6:	f85d fb08 	ldr.w	pc, [sp], #8
  4087da:	bf00      	nop

004087dc <__aeabi_dcmpgt>:
  4087dc:	f84d ed08 	str.w	lr, [sp, #-8]!
  4087e0:	f7ff ffc4 	bl	40876c <__aeabi_cdrcmple>
  4087e4:	bf34      	ite	cc
  4087e6:	2001      	movcc	r0, #1
  4087e8:	2000      	movcs	r0, #0
  4087ea:	f85d fb08 	ldr.w	pc, [sp], #8
  4087ee:	bf00      	nop

004087f0 <__aeabi_dcmpun>:
  4087f0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4087f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4087f8:	d102      	bne.n	408800 <__aeabi_dcmpun+0x10>
  4087fa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4087fe:	d10a      	bne.n	408816 <__aeabi_dcmpun+0x26>
  408800:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408804:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408808:	d102      	bne.n	408810 <__aeabi_dcmpun+0x20>
  40880a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40880e:	d102      	bne.n	408816 <__aeabi_dcmpun+0x26>
  408810:	f04f 0000 	mov.w	r0, #0
  408814:	4770      	bx	lr
  408816:	f04f 0001 	mov.w	r0, #1
  40881a:	4770      	bx	lr

0040881c <__aeabi_d2iz>:
  40881c:	ea4f 0241 	mov.w	r2, r1, lsl #1
  408820:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  408824:	d215      	bcs.n	408852 <__aeabi_d2iz+0x36>
  408826:	d511      	bpl.n	40884c <__aeabi_d2iz+0x30>
  408828:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  40882c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  408830:	d912      	bls.n	408858 <__aeabi_d2iz+0x3c>
  408832:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  408836:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40883a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  40883e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  408842:	fa23 f002 	lsr.w	r0, r3, r2
  408846:	bf18      	it	ne
  408848:	4240      	negne	r0, r0
  40884a:	4770      	bx	lr
  40884c:	f04f 0000 	mov.w	r0, #0
  408850:	4770      	bx	lr
  408852:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  408856:	d105      	bne.n	408864 <__aeabi_d2iz+0x48>
  408858:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  40885c:	bf08      	it	eq
  40885e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  408862:	4770      	bx	lr
  408864:	f04f 0000 	mov.w	r0, #0
  408868:	4770      	bx	lr
  40886a:	bf00      	nop

0040886c <__aeabi_uldivmod>:
  40886c:	b953      	cbnz	r3, 408884 <__aeabi_uldivmod+0x18>
  40886e:	b94a      	cbnz	r2, 408884 <__aeabi_uldivmod+0x18>
  408870:	2900      	cmp	r1, #0
  408872:	bf08      	it	eq
  408874:	2800      	cmpeq	r0, #0
  408876:	bf1c      	itt	ne
  408878:	f04f 31ff 	movne.w	r1, #4294967295
  40887c:	f04f 30ff 	movne.w	r0, #4294967295
  408880:	f000 b97a 	b.w	408b78 <__aeabi_idiv0>
  408884:	f1ad 0c08 	sub.w	ip, sp, #8
  408888:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  40888c:	f000 f806 	bl	40889c <__udivmoddi4>
  408890:	f8dd e004 	ldr.w	lr, [sp, #4]
  408894:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  408898:	b004      	add	sp, #16
  40889a:	4770      	bx	lr

0040889c <__udivmoddi4>:
  40889c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4088a0:	468c      	mov	ip, r1
  4088a2:	460d      	mov	r5, r1
  4088a4:	4604      	mov	r4, r0
  4088a6:	9e08      	ldr	r6, [sp, #32]
  4088a8:	2b00      	cmp	r3, #0
  4088aa:	d151      	bne.n	408950 <__udivmoddi4+0xb4>
  4088ac:	428a      	cmp	r2, r1
  4088ae:	4617      	mov	r7, r2
  4088b0:	d96d      	bls.n	40898e <__udivmoddi4+0xf2>
  4088b2:	fab2 fe82 	clz	lr, r2
  4088b6:	f1be 0f00 	cmp.w	lr, #0
  4088ba:	d00b      	beq.n	4088d4 <__udivmoddi4+0x38>
  4088bc:	f1ce 0c20 	rsb	ip, lr, #32
  4088c0:	fa01 f50e 	lsl.w	r5, r1, lr
  4088c4:	fa20 fc0c 	lsr.w	ip, r0, ip
  4088c8:	fa02 f70e 	lsl.w	r7, r2, lr
  4088cc:	ea4c 0c05 	orr.w	ip, ip, r5
  4088d0:	fa00 f40e 	lsl.w	r4, r0, lr
  4088d4:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  4088d8:	0c25      	lsrs	r5, r4, #16
  4088da:	fbbc f8fa 	udiv	r8, ip, sl
  4088de:	fa1f f987 	uxth.w	r9, r7
  4088e2:	fb0a cc18 	mls	ip, sl, r8, ip
  4088e6:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  4088ea:	fb08 f309 	mul.w	r3, r8, r9
  4088ee:	42ab      	cmp	r3, r5
  4088f0:	d90a      	bls.n	408908 <__udivmoddi4+0x6c>
  4088f2:	19ed      	adds	r5, r5, r7
  4088f4:	f108 32ff 	add.w	r2, r8, #4294967295
  4088f8:	f080 8123 	bcs.w	408b42 <__udivmoddi4+0x2a6>
  4088fc:	42ab      	cmp	r3, r5
  4088fe:	f240 8120 	bls.w	408b42 <__udivmoddi4+0x2a6>
  408902:	f1a8 0802 	sub.w	r8, r8, #2
  408906:	443d      	add	r5, r7
  408908:	1aed      	subs	r5, r5, r3
  40890a:	b2a4      	uxth	r4, r4
  40890c:	fbb5 f0fa 	udiv	r0, r5, sl
  408910:	fb0a 5510 	mls	r5, sl, r0, r5
  408914:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  408918:	fb00 f909 	mul.w	r9, r0, r9
  40891c:	45a1      	cmp	r9, r4
  40891e:	d909      	bls.n	408934 <__udivmoddi4+0x98>
  408920:	19e4      	adds	r4, r4, r7
  408922:	f100 33ff 	add.w	r3, r0, #4294967295
  408926:	f080 810a 	bcs.w	408b3e <__udivmoddi4+0x2a2>
  40892a:	45a1      	cmp	r9, r4
  40892c:	f240 8107 	bls.w	408b3e <__udivmoddi4+0x2a2>
  408930:	3802      	subs	r0, #2
  408932:	443c      	add	r4, r7
  408934:	eba4 0409 	sub.w	r4, r4, r9
  408938:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40893c:	2100      	movs	r1, #0
  40893e:	2e00      	cmp	r6, #0
  408940:	d061      	beq.n	408a06 <__udivmoddi4+0x16a>
  408942:	fa24 f40e 	lsr.w	r4, r4, lr
  408946:	2300      	movs	r3, #0
  408948:	6034      	str	r4, [r6, #0]
  40894a:	6073      	str	r3, [r6, #4]
  40894c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  408950:	428b      	cmp	r3, r1
  408952:	d907      	bls.n	408964 <__udivmoddi4+0xc8>
  408954:	2e00      	cmp	r6, #0
  408956:	d054      	beq.n	408a02 <__udivmoddi4+0x166>
  408958:	2100      	movs	r1, #0
  40895a:	e886 0021 	stmia.w	r6, {r0, r5}
  40895e:	4608      	mov	r0, r1
  408960:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  408964:	fab3 f183 	clz	r1, r3
  408968:	2900      	cmp	r1, #0
  40896a:	f040 808e 	bne.w	408a8a <__udivmoddi4+0x1ee>
  40896e:	42ab      	cmp	r3, r5
  408970:	d302      	bcc.n	408978 <__udivmoddi4+0xdc>
  408972:	4282      	cmp	r2, r0
  408974:	f200 80fa 	bhi.w	408b6c <__udivmoddi4+0x2d0>
  408978:	1a84      	subs	r4, r0, r2
  40897a:	eb65 0503 	sbc.w	r5, r5, r3
  40897e:	2001      	movs	r0, #1
  408980:	46ac      	mov	ip, r5
  408982:	2e00      	cmp	r6, #0
  408984:	d03f      	beq.n	408a06 <__udivmoddi4+0x16a>
  408986:	e886 1010 	stmia.w	r6, {r4, ip}
  40898a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40898e:	b912      	cbnz	r2, 408996 <__udivmoddi4+0xfa>
  408990:	2701      	movs	r7, #1
  408992:	fbb7 f7f2 	udiv	r7, r7, r2
  408996:	fab7 fe87 	clz	lr, r7
  40899a:	f1be 0f00 	cmp.w	lr, #0
  40899e:	d134      	bne.n	408a0a <__udivmoddi4+0x16e>
  4089a0:	1beb      	subs	r3, r5, r7
  4089a2:	0c3a      	lsrs	r2, r7, #16
  4089a4:	fa1f fc87 	uxth.w	ip, r7
  4089a8:	2101      	movs	r1, #1
  4089aa:	fbb3 f8f2 	udiv	r8, r3, r2
  4089ae:	0c25      	lsrs	r5, r4, #16
  4089b0:	fb02 3318 	mls	r3, r2, r8, r3
  4089b4:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4089b8:	fb0c f308 	mul.w	r3, ip, r8
  4089bc:	42ab      	cmp	r3, r5
  4089be:	d907      	bls.n	4089d0 <__udivmoddi4+0x134>
  4089c0:	19ed      	adds	r5, r5, r7
  4089c2:	f108 30ff 	add.w	r0, r8, #4294967295
  4089c6:	d202      	bcs.n	4089ce <__udivmoddi4+0x132>
  4089c8:	42ab      	cmp	r3, r5
  4089ca:	f200 80d1 	bhi.w	408b70 <__udivmoddi4+0x2d4>
  4089ce:	4680      	mov	r8, r0
  4089d0:	1aed      	subs	r5, r5, r3
  4089d2:	b2a3      	uxth	r3, r4
  4089d4:	fbb5 f0f2 	udiv	r0, r5, r2
  4089d8:	fb02 5510 	mls	r5, r2, r0, r5
  4089dc:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  4089e0:	fb0c fc00 	mul.w	ip, ip, r0
  4089e4:	45a4      	cmp	ip, r4
  4089e6:	d907      	bls.n	4089f8 <__udivmoddi4+0x15c>
  4089e8:	19e4      	adds	r4, r4, r7
  4089ea:	f100 33ff 	add.w	r3, r0, #4294967295
  4089ee:	d202      	bcs.n	4089f6 <__udivmoddi4+0x15a>
  4089f0:	45a4      	cmp	ip, r4
  4089f2:	f200 80b8 	bhi.w	408b66 <__udivmoddi4+0x2ca>
  4089f6:	4618      	mov	r0, r3
  4089f8:	eba4 040c 	sub.w	r4, r4, ip
  4089fc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  408a00:	e79d      	b.n	40893e <__udivmoddi4+0xa2>
  408a02:	4631      	mov	r1, r6
  408a04:	4630      	mov	r0, r6
  408a06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  408a0a:	f1ce 0420 	rsb	r4, lr, #32
  408a0e:	fa05 f30e 	lsl.w	r3, r5, lr
  408a12:	fa07 f70e 	lsl.w	r7, r7, lr
  408a16:	fa20 f804 	lsr.w	r8, r0, r4
  408a1a:	0c3a      	lsrs	r2, r7, #16
  408a1c:	fa25 f404 	lsr.w	r4, r5, r4
  408a20:	ea48 0803 	orr.w	r8, r8, r3
  408a24:	fbb4 f1f2 	udiv	r1, r4, r2
  408a28:	ea4f 4518 	mov.w	r5, r8, lsr #16
  408a2c:	fb02 4411 	mls	r4, r2, r1, r4
  408a30:	fa1f fc87 	uxth.w	ip, r7
  408a34:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  408a38:	fb01 f30c 	mul.w	r3, r1, ip
  408a3c:	42ab      	cmp	r3, r5
  408a3e:	fa00 f40e 	lsl.w	r4, r0, lr
  408a42:	d909      	bls.n	408a58 <__udivmoddi4+0x1bc>
  408a44:	19ed      	adds	r5, r5, r7
  408a46:	f101 30ff 	add.w	r0, r1, #4294967295
  408a4a:	f080 808a 	bcs.w	408b62 <__udivmoddi4+0x2c6>
  408a4e:	42ab      	cmp	r3, r5
  408a50:	f240 8087 	bls.w	408b62 <__udivmoddi4+0x2c6>
  408a54:	3902      	subs	r1, #2
  408a56:	443d      	add	r5, r7
  408a58:	1aeb      	subs	r3, r5, r3
  408a5a:	fa1f f588 	uxth.w	r5, r8
  408a5e:	fbb3 f0f2 	udiv	r0, r3, r2
  408a62:	fb02 3310 	mls	r3, r2, r0, r3
  408a66:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  408a6a:	fb00 f30c 	mul.w	r3, r0, ip
  408a6e:	42ab      	cmp	r3, r5
  408a70:	d907      	bls.n	408a82 <__udivmoddi4+0x1e6>
  408a72:	19ed      	adds	r5, r5, r7
  408a74:	f100 38ff 	add.w	r8, r0, #4294967295
  408a78:	d26f      	bcs.n	408b5a <__udivmoddi4+0x2be>
  408a7a:	42ab      	cmp	r3, r5
  408a7c:	d96d      	bls.n	408b5a <__udivmoddi4+0x2be>
  408a7e:	3802      	subs	r0, #2
  408a80:	443d      	add	r5, r7
  408a82:	1aeb      	subs	r3, r5, r3
  408a84:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  408a88:	e78f      	b.n	4089aa <__udivmoddi4+0x10e>
  408a8a:	f1c1 0720 	rsb	r7, r1, #32
  408a8e:	fa22 f807 	lsr.w	r8, r2, r7
  408a92:	408b      	lsls	r3, r1
  408a94:	fa05 f401 	lsl.w	r4, r5, r1
  408a98:	ea48 0303 	orr.w	r3, r8, r3
  408a9c:	fa20 fe07 	lsr.w	lr, r0, r7
  408aa0:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  408aa4:	40fd      	lsrs	r5, r7
  408aa6:	ea4e 0e04 	orr.w	lr, lr, r4
  408aaa:	fbb5 f9fc 	udiv	r9, r5, ip
  408aae:	ea4f 441e 	mov.w	r4, lr, lsr #16
  408ab2:	fb0c 5519 	mls	r5, ip, r9, r5
  408ab6:	fa1f f883 	uxth.w	r8, r3
  408aba:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  408abe:	fb09 f408 	mul.w	r4, r9, r8
  408ac2:	42ac      	cmp	r4, r5
  408ac4:	fa02 f201 	lsl.w	r2, r2, r1
  408ac8:	fa00 fa01 	lsl.w	sl, r0, r1
  408acc:	d908      	bls.n	408ae0 <__udivmoddi4+0x244>
  408ace:	18ed      	adds	r5, r5, r3
  408ad0:	f109 30ff 	add.w	r0, r9, #4294967295
  408ad4:	d243      	bcs.n	408b5e <__udivmoddi4+0x2c2>
  408ad6:	42ac      	cmp	r4, r5
  408ad8:	d941      	bls.n	408b5e <__udivmoddi4+0x2c2>
  408ada:	f1a9 0902 	sub.w	r9, r9, #2
  408ade:	441d      	add	r5, r3
  408ae0:	1b2d      	subs	r5, r5, r4
  408ae2:	fa1f fe8e 	uxth.w	lr, lr
  408ae6:	fbb5 f0fc 	udiv	r0, r5, ip
  408aea:	fb0c 5510 	mls	r5, ip, r0, r5
  408aee:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  408af2:	fb00 f808 	mul.w	r8, r0, r8
  408af6:	45a0      	cmp	r8, r4
  408af8:	d907      	bls.n	408b0a <__udivmoddi4+0x26e>
  408afa:	18e4      	adds	r4, r4, r3
  408afc:	f100 35ff 	add.w	r5, r0, #4294967295
  408b00:	d229      	bcs.n	408b56 <__udivmoddi4+0x2ba>
  408b02:	45a0      	cmp	r8, r4
  408b04:	d927      	bls.n	408b56 <__udivmoddi4+0x2ba>
  408b06:	3802      	subs	r0, #2
  408b08:	441c      	add	r4, r3
  408b0a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  408b0e:	eba4 0408 	sub.w	r4, r4, r8
  408b12:	fba0 8902 	umull	r8, r9, r0, r2
  408b16:	454c      	cmp	r4, r9
  408b18:	46c6      	mov	lr, r8
  408b1a:	464d      	mov	r5, r9
  408b1c:	d315      	bcc.n	408b4a <__udivmoddi4+0x2ae>
  408b1e:	d012      	beq.n	408b46 <__udivmoddi4+0x2aa>
  408b20:	b156      	cbz	r6, 408b38 <__udivmoddi4+0x29c>
  408b22:	ebba 030e 	subs.w	r3, sl, lr
  408b26:	eb64 0405 	sbc.w	r4, r4, r5
  408b2a:	fa04 f707 	lsl.w	r7, r4, r7
  408b2e:	40cb      	lsrs	r3, r1
  408b30:	431f      	orrs	r7, r3
  408b32:	40cc      	lsrs	r4, r1
  408b34:	6037      	str	r7, [r6, #0]
  408b36:	6074      	str	r4, [r6, #4]
  408b38:	2100      	movs	r1, #0
  408b3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  408b3e:	4618      	mov	r0, r3
  408b40:	e6f8      	b.n	408934 <__udivmoddi4+0x98>
  408b42:	4690      	mov	r8, r2
  408b44:	e6e0      	b.n	408908 <__udivmoddi4+0x6c>
  408b46:	45c2      	cmp	sl, r8
  408b48:	d2ea      	bcs.n	408b20 <__udivmoddi4+0x284>
  408b4a:	ebb8 0e02 	subs.w	lr, r8, r2
  408b4e:	eb69 0503 	sbc.w	r5, r9, r3
  408b52:	3801      	subs	r0, #1
  408b54:	e7e4      	b.n	408b20 <__udivmoddi4+0x284>
  408b56:	4628      	mov	r0, r5
  408b58:	e7d7      	b.n	408b0a <__udivmoddi4+0x26e>
  408b5a:	4640      	mov	r0, r8
  408b5c:	e791      	b.n	408a82 <__udivmoddi4+0x1e6>
  408b5e:	4681      	mov	r9, r0
  408b60:	e7be      	b.n	408ae0 <__udivmoddi4+0x244>
  408b62:	4601      	mov	r1, r0
  408b64:	e778      	b.n	408a58 <__udivmoddi4+0x1bc>
  408b66:	3802      	subs	r0, #2
  408b68:	443c      	add	r4, r7
  408b6a:	e745      	b.n	4089f8 <__udivmoddi4+0x15c>
  408b6c:	4608      	mov	r0, r1
  408b6e:	e708      	b.n	408982 <__udivmoddi4+0xe6>
  408b70:	f1a8 0802 	sub.w	r8, r8, #2
  408b74:	443d      	add	r5, r7
  408b76:	e72b      	b.n	4089d0 <__udivmoddi4+0x134>

00408b78 <__aeabi_idiv0>:
  408b78:	4770      	bx	lr
  408b7a:	bf00      	nop

00408b7c <p_uc_charset10x14>:
	...
  408b98:	ccff ccff 0000 0000 0000 0000 0000 0000     ................
  408ba8:	00f0 00f0 0000 0000 00f0 00f0 0000 0000     ................
  408bb8:	c00c c00c fcff fcff c00c c00c fcff fcff     ................
  408bc8:	c00c c00c 600c 701e 303f 3033 fcff fcff     .....`.p?030....
  408bd8:	3033 f033 e039 c018 0060 0cf0 3cf0 f060     303.9...`....<`.
  408be8:	c003 000f 183c 3cf0 3cc0 1800 f03c f87f     ....<..<.<..<...
  408bf8:	1cc3 8cc7 cccf ecdc 7878 3030 fc00 cc00     ........xx00....
  408c08:	0000 0000 0000 0044 00ec 00f8 0070 0000     ......D.....p...
	...
  408c20:	c00f f03f 7878 1860 0cc0 0cc0 0000 0000     ..?.xx`.........
  408c30:	0000 0000 0cc0 0cc0 1860 7878 f03f c00f     ........`.xx?...
  408c40:	0000 0000 600c e00e c007 8003 f83f f83f     .....`......?.?.
  408c50:	8003 c007 e00e 600c 0003 0003 0003 0003     .......`........
  408c60:	f03f f03f 0003 0003 0003 0003 4400 ec00     ?.?..........D..
  408c70:	f800 7000 0000 0000 0000 0000 0000 0000     ...p............
  408c80:	0003 0003 0003 0003 0003 0003 0003 0003     ................
  408c90:	0003 0003 1800 3c00 3c00 1800 0000 0000     .......<.<......
	...
  408ca8:	0000 0c00 3c00 f000 c003 000f 003c 00f0     .....<......<...
  408cb8:	00c0 0000 f03f f87f fce0 ccc1 8cc3 0cc7     ....?...........
  408cc8:	0cce 1cfc f87f f03f 0000 0000 0c30 0c70     ......?.....0.p.
  408cd8:	fcff fcff 0c00 0c00 0000 0000 0c30 1c70     ............0.p.
  408ce8:	3ce0 7cc0 ecc0 ccc1 8cc3 0ce7 0c7e 0c3c     .<.|........~.<.
  408cf8:	3030 3870 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     00p8............
  408d08:	f87f f03c c003 c007 c00e c01c c038 c070     ..<.........8.p.
  408d18:	fcff fcff c000 c000 30fc 38fc 1ccc 0ccc     .........0.8....
  408d28:	0ccc 0ccc 0ccc 1cce f8c7 f0c3 f03f f87f     ............?...
  408d38:	1ce3 0cc3 0cc3 0cc3 0cc3 9ce3 f871 f030     ............q.0.
  408d48:	00c0 00c0 00c0 00c0 fcc3 fcc7 00ce 00dc     ................
  408d58:	00f8 00f0 f03c f87f 9ce7 0cc3 0cc3 0cc3     ....<...........
  408d68:	0cc3 9ce7 f87f f03c 003c 007e 0ce7 0cc3     ......<.<.~.....
  408d78:	1cc3 38c3 70c3 e0e7 c07f 803f 0000 0000     ...8.p....?.....
  408d88:	0000 6018 f03c f03c 6018 0000 0000 0000     ...`<.<..`......
  408d98:	0000 0000 0000 4418 ec3c f83c 7018 0000     .......D<.<..p..
  408da8:	0000 0000 0000 0003 8007 c00f e01c 7038     ..............8p
  408db8:	3870 1ce0 0cc0 0000 c00c c00c c00c c00c     p8..............
  408dc8:	c00c c00c c00c c00c c00c c00c 0000 0cc0     ................
  408dd8:	1ce0 3870 7038 e01c c00f 8007 0003 0000     ..p88p..........
  408de8:	0030 0070 00e0 00c0 ecc1 ecc3 00c3 00e6     0.p.............
  408df8:	007e 003c f030 f871 9ce3 0cc3 fcc3 fcc3     ~.<.0.q.........
  408e08:	0cc0 1ce0 f87f f03f fc3f fc7f c0e0 c0c0     ......?.?.......
  408e18:	c0c0 c0c0 c0c0 c0e0 fc7f fc3f fcff fcff     ..........?.....
  408e28:	0cc3 0cc3 0cc3 0cc3 0cc3 9ce7 f87f f03c     ..............<.
  408e38:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  408e48:	3870 3030 fcff fcff 0cc0 0cc0 0cc0 0cc0     p800............
  408e58:	0cc0 1ce0 f87f f03f fcff fcff 0cc3 0cc3     ......?.........
  408e68:	0cc3 0cc3 0cc3 0cc3 0cc0 0cc0 fcff fcff     ................
  408e78:	00c3 00c3 00c3 00c3 00c3 00c3 00c0 00c0     ................
  408e88:	f03f f87f 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     ?...............
  408e98:	f873 f033 fcff fcff 0003 0003 0003 0003     s.3.............
  408ea8:	0003 0003 fcff fcff 0000 0000 0cc0 0cc0     ................
  408eb8:	fcff fcff 0cc0 0cc0 0000 0000 3000 3800     .............0.8
  408ec8:	1cc0 0cc0 0cc0 1cc0 f8ff f0ff 00c0 00c0     ................
  408ed8:	fcff fcff 8007 8007 c00f e01c 7038 3870     ............8pp8
  408ee8:	1ce0 0cc0 fcff fcff 0c00 0c00 0c00 0c00     ................
  408ef8:	0c00 0c00 0c00 0c00 fcff fcff 0070 0038     ............p.8.
  408f08:	001f 001f 0038 0070 fcff fcff fcff fcff     ....8.p.........
  408f18:	001c 000e 0007 8003 c001 e000 fcff fcff     ................
  408f28:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  408f38:	f87f f03f fcff fcff 00c3 00c3 00c3 00c3     ..?.............
  408f48:	00c3 00e7 007e 003c f03f f87f 1ce0 0cc0     ....~.<.?.......
  408f58:	ccc0 ecc0 7cc0 38e0 fc7f ec3f fcff fcff     .....|.8..?.....
  408f68:	00c3 80c3 80c3 c0c3 c0c3 70e7 3c7e 1c3c     ...........p~<<.
  408f78:	183c 1c7e 0ce7 0cc3 0cc3 0cc3 0cc3 9cc3     <.~.............
  408f88:	f8e1 f060 00c0 00c0 00c0 00c0 fcff fcff     ..`.............
  408f98:	00c0 00c0 00c0 00c0 f0ff f8ff 1c00 0c00     ................
  408fa8:	0c00 0c00 0c00 1c00 f8ff f0ff c0ff e0ff     ................
  408fb8:	7000 3800 1c00 1c00 3800 7000 e0ff c0ff     .p.8.....8.p....
  408fc8:	f0ff f8ff 1c00 3c00 f800 f800 3c00 1c00     .......<.....<..
  408fd8:	f8ff f0ff 3cf0 7cf8 e01c c00f 8007 8007     .....<.|........
  408fe8:	c00f e01c 7cf8 3cf0 00fc 00fe 0007 8003     .....|.<........
  408ff8:	fc01 fc01 8003 0007 00fe 00fc 3cc0 7cc0     .............<.|
  409008:	ecc0 ccc1 8cc3 0cc7 0cce 0cdc 0cf8 0cf0     ................
  409018:	0000 0000 fcff fcff 0cc0 0cc0 0cc0 0000     ................
  409028:	0000 0000 0030 0030 000c 000c 0003 0003     ....0.0.........
  409038:	c000 c000 3000 3000 0000 0000 0cc0 0cc0     .....0.0........
  409048:	0cc0 fcff fcff 0000 0000 0000 000c 001c     ................
  409058:	0038 0070 00e0 00e0 0070 0038 001c 000c     8.p.....p.8.....
  409068:	0c00 0c00 0c00 0c00 0c00 0c00 0c00 0c00     ................
  409078:	0c00 0c00 0000 0000 00c0 00e0 0070 0038     ............p.8.
  409088:	0018 0000 0000 0000 3000 7806 fc0e cc0c     .........0.x....
  409098:	cc0c cc0c cc0c cc0e fc07 f803 fcff fcff     ................
  4090a8:	0c03 0c03 0c03 0c03 0c03 9c03 f801 f000     ................
  4090b8:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  4090c8:	3807 3003 f000 f801 9c03 0c03 0c03 0c03     .8.0............
  4090d8:	0c03 0c03 fcff fcff f003 f807 dc0e cc0c     ................
  4090e8:	cc0c cc0c cc0c dc0e d807 9003 0000 0003     ................
  4090f8:	fc3f fc7f 00e3 00e3 0070 0030 0000 0000     ?.......p.0.....
  409108:	1803 9c07 cc0f cc0c cc0c cc0c cc0c dc0c     ................
  409118:	f80f f007 fcff fcff 0003 0003 0003 0003     ................
  409128:	8003 fc01 fc00 0000 0000 0000 0000 0000     ................
  409138:	fc1b fc1b 0000 0000 0000 0000 0000 3000     ...............0
  409148:	3800 1c00 0c00 0c00 1c00 f8cf f0cf 0000     .8..............
  409158:	0000 fcff fcff e000 e001 f003 3807 1c0e     .............8..
  409168:	0c0c 0000 0000 0000 0cc0 0cc0 fcff fcff     ................
  409178:	0c00 0c00 0000 0000 fc0f fc0f 000e 0007     ................
  409188:	c003 c003 0007 000e fc0f fc0f fc0f fc0f     ................
  409198:	0003 0007 000e 000c 000c 000e fc07 fc03     ................
  4091a8:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  4091b8:	f807 f003 fc0f fc0f c00c c00c c00c c00c     ................
  4091c8:	c00c c00f 8007 0003 0003 8007 c00f c00c     ................
  4091d8:	c00c c00c c00c c00c fc0f fc0f fc0f fc0f     ................
  4091e8:	8003 0007 000e 000c 000c 000e 0007 0003     ................
  4091f8:	1803 9c07 cc0f cc0c cc0c cc0c cc0c fc0c     ................
  409208:	780e 3006 0000 000c 000c f0ff f8ff 1c0c     .x.0............
  409218:	1c0c 380c 300c 0000 f00f f80f 1c00 0c00     ...8.0..........
  409228:	0c00 0c00 0c00 1c00 f80f f00f c00f e00f     ................
  409238:	7000 3800 1c00 1c00 3800 7000 e00f c00f     .p.8.....8.p....
  409248:	f00f f80f 1c00 1c00 f800 f800 1c00 1c00     ................
  409258:	f80f f00f 0c0c 1c0e 3807 f003 e001 e001     .........8......
  409268:	f003 3807 1c0e 0c0c 000c 000e 0c07 9c03     ...8............
  409278:	f801 f001 8003 0007 000e 000c 0c0c 1c0c     ................
  409288:	3c0c 7c0c ec0c cc0d 8c0f 0c0f 0c0e 0c0c     .<.|............
  409298:	0000 0003 8007 f03f f87c 1ce0 0cc0 0cc0     ......?.|.......
  4092a8:	0cc0 0000 0c03 0c03 fc3f fc7f 0ce3 0cc3     ........?.......
  4092b8:	0cc0 0ce0 0c70 0c30 0000 0cc0 0cc0 0cc0     ....p.0.........
  4092c8:	1ce0 f87c f03f 8007 0003 0000 00c0 00c0     ..|.?...........
  4092d8:	00c0 00c0 00c0 00c0 00c0 00c0 00c0 00c0     ................
  4092e8:	fcff fcff fcff fcff fcff fcff fcff fcff     ................
  4092f8:	fcff fcff 000d 0a05 004b 0000 1932 0000     ........K...2...
  409308:	008b 0e00 0008 3280 0205 030a 2003 0f02     .......2..... ..
  409318:	0a0f 0000 0000 1818 2020 0000 0000 0a00     ........  ......
  409328:	0000 0202 0000 1818 0000 0003 0000 0000     ................
  409338:	0002 1801 1e1e 1e1e 1e1e 1e1e 1e1e 1e1e     ................
  409348:	1e1e 0000 0000 0000 0000 0000 0000 0000     ................
  409358:	0000 0000                                   ....

0040935c <image_data_play>:
  40935c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40936c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40937c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40938c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40939c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4093ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4093bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4093cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4093dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4093ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4093fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40940c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40941c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40942c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40943c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40944c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40945c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40946c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40947c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40948c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40949c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4094ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4094bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4094cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4094dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4094ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4094fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40950c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40951c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40952c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40953c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40954c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40955c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40956c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40957c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40958c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40959c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4095ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4095bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4095cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4095dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4095ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4095fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40960c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40961c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40962c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40963c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40964c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40965c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40966c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40967c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40968c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40969c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4096ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4096bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4096cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4096dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4096ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4096fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40970c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40971c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40972c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40973c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40974c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40975c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40976c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40977c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40978c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40979c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4097ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4097bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4097cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4097dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4097ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4097fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40980c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40981c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40982c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40983c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40984c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40985c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40986c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40987c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40988c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40989c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4098ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4098bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4098cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4098dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4098ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4098fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40990c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40991c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40992c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40993c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40994c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40995c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40996c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40997c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40998c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40999c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4099ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4099bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4099cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4099dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4099ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4099fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409a9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409aac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409abc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409acc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409adc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409aec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409afc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409b9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409bac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409bbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409bcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409bdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409bec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409bfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409c9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409cac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409cbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409ccc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409cdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409cec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409cfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409d9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409dac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409dbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409dcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409ddc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409dec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409dfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409e9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409eac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409ebc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409ecc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409edc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409eec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409efc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409f9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409fac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409fbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409fcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409fdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409fec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  409ffc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a00c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a01c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a02c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a03c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a04c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a05c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a06c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a07c:	0000 0000 0000 ffff ffff ffff ffff ffff     ................
  40a08c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a09c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a0ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a0bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a0cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a0dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a0ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a0fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a10c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a11c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a12c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a13c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a14c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a15c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a16c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a17c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a18c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a19c:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
  40a1ac:	0000 0000 ff00 ffff ffff ffff ffff ffff     ................
  40a1bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a1cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a1dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a1ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a1fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a20c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a21c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a22c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a23c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a24c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a25c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a26c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a27c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a28c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a29c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a2ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a2bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a2cc:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
  40a2dc:	0000 0000 0000 ff00 ffff ffff ffff ffff     ................
  40a2ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a2fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a30c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a31c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a32c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a33c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a34c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a35c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a36c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a37c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a38c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a39c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a3ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a3bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a3cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a3dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a3ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a3fc:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40a414:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40a424:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a434:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a444:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a454:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a464:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a474:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a484:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a494:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a4a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a4b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a4c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a4d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a4e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a4f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a504:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a514:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a524:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40a544:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a554:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a564:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a574:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a584:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a594:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a5a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a5b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a5c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a5d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a5e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a5f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a604:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a614:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a624:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a634:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a644:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a654:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40a674:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40a684:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a694:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a6a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a6b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a6c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a6d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a6e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a6f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a704:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a714:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a724:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a734:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a744:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a754:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a764:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a774:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40a7a8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a7b8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a7c8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a7d8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a7e8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a7f8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a808:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a818:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a828:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a838:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a848:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a858:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a868:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a878:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a888:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a898:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a8a8:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40a8d8:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40a8e8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a8f8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a908:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a918:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a928:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a938:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a948:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a958:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a968:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a978:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a988:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a998:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a9a8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a9b8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a9c8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40a9d8:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40aa08:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40aa18:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aa28:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aa38:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aa48:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aa58:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aa68:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aa78:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aa88:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aa98:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aaa8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aab8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aac8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aad8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aae8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aaf8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40ab38:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40ab48:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ab58:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ab68:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ab78:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ab88:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ab98:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aba8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40abb8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40abc8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40abd8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40abe8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40abf8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ac08:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ac18:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ac28:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40ac6c:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40ac7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ac8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ac9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40acac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40acbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40accc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40acdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40acec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40acfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ad0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ad1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ad2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ad3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ad4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ad5c:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40ad9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40adac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40adbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40adcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40addc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40adec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40adfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ae0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ae1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ae2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ae3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ae4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ae5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ae6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ae7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40aecc:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40aedc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aeec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40aefc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40af9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40afac:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40b000:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b010:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b020:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b030:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b040:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b050:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b060:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b070:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b080:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b090:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b0a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b0b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b0c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b0d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b0e0:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40b12c:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40b13c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b14c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b15c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b16c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b17c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b18c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b19c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b1ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b1bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b1cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b1dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b1ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b1fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b20c:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40b260:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40b270:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b280:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b290:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b2a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b2b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b2c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b2d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b2e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b2f0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b300:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b310:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b320:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b330:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40b390:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40b3a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b3b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b3c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b3d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b3e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b3f0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b400:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b410:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b420:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b430:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b440:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b450:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b460:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40b4c4:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40b4d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b4e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b4f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b504:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b514:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b524:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b534:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b544:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b554:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b564:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b574:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b584:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40b5f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b604:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b614:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b624:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b634:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b644:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b654:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b664:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b674:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b684:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b694:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b6a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b6b4:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40b724:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40b734:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b744:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b754:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b764:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b774:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b784:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b794:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b7a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b7b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b7c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b7d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b7e4:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40b858:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b868:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b878:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b888:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b898:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b8a8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b8b8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b8c8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b8d8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b8e8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b8f8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b908:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40b984:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40b994:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b9a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b9b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b9c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b9d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b9e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40b9f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ba04:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ba14:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ba24:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ba34:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40bab8:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40bac8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bad8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bae8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40baf8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bb08:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bb18:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bb28:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bb38:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bb48:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bb58:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bb68:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40bbe8:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40bbf8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc08:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc18:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc28:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc38:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc48:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc58:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc68:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc78:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc88:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bc98:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40bd18:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40bd28:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bd38:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bd48:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bd58:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bd68:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bd78:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bd88:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bd98:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bda8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bdb8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40be4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40be5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40be6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40be7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40be8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40be9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40beac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bebc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40becc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bedc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40beec:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40bf7c:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40bf8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bf9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bfac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bfbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bfcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bfdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bfec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40bffc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c00c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c01c:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40c0b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c0c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c0d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c0e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c0f0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c100:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c110:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c120:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c130:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c140:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40c1dc:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40c1ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c1fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c20c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c21c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c22c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c23c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c24c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c25c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c26c:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40c310:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40c320:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c330:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c340:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c350:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c360:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c370:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c380:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c390:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c3a0:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40c440:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40c450:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c460:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c470:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c480:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c490:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c4a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c4b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c4c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40c570:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40c580:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c590:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c5a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c5b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c5c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c5d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c5e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c5f0:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40c6a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c6b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c6c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c6d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c6e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c6f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c704:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c714:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c724:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40c7d4:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40c7e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c7f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c804:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c814:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c824:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c834:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c844:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40c904:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40c914:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c924:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c934:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c944:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c954:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c964:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40c974:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40ca34:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40ca44:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ca54:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ca64:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ca74:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ca84:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ca94:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40caa4:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40cb68:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40cb78:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cb88:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cb98:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cba8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cbb8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cbc8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40cc98:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40cca8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ccb8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ccc8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ccd8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cce8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ccf8:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40cdc8:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40cdd8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cde8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cdf8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ce08:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ce18:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ce28:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40cef0:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40cf00:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cf10:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cf20:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cf30:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cf40:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40cf50:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40d018:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40d028:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d038:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d048:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d058:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d068:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d078:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40d140:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40d150:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d160:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d170:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d180:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d190:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d1a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d1b0:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40d268:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d278:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d288:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d298:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d2a8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d2b8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d2c8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d2d8:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40d38c:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40d39c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d3ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d3bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d3cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d3dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d3ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d3fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40d4b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d4c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d4d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d4e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d4f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d504:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d514:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d524:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d534:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40d5dc:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40d5ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d5fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d60c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d61c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d62c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d63c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d64c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d65c:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40d700:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40d710:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d720:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d730:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d740:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d750:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d760:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d770:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d780:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40d828:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40d838:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d848:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d858:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d868:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d878:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d888:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d898:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d8a8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d8b8:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40d950:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40d960:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d970:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d980:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d990:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d9a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d9b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d9c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d9d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40d9e0:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40da78:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40da88:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40da98:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40daa8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dab8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dac8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dad8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dae8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40daf8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40db08:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40db9c:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40dbac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dbbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dbcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dbdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dbec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dbfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dc0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dc1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dc2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dc3c:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40dcc4:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40dcd4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dce4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dcf4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dd04:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dd14:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dd24:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dd34:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dd44:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dd54:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dd64:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40ddec:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40ddfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40de8c:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40df10:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40df20:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40df30:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40df40:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40df50:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40df60:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40df70:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40df80:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40df90:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dfa0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dfb0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40dfc0:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40e038:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40e048:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e058:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e068:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e078:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e088:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e098:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e0a8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e0b8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e0c8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e0d8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e0e8:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40e160:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40e170:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e180:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e190:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e1a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e1b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e1c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e1d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e1e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e1f0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e200:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e210:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40e288:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e298:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e2a8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e2b8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e2c8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e2d8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e2e8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e2f8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e308:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e318:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e328:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e338:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40e3ac:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40e3bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e3cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e3dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e3ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e3fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e40c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e41c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e42c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e43c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e44c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e45c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e46c:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40e4d4:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40e4e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e4f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e504:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e514:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e524:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e534:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e544:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e554:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e564:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e574:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e584:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e594:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40e5fc:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40e60c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e61c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e62c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e63c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e64c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e65c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e66c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e67c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e68c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e69c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e6ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e6bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40e720:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40e730:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e740:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e750:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e760:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e770:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e780:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e790:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e7a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e7b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e7c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e7d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e7e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e7f0:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40e84c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e85c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e86c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e87c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e88c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e89c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e8ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e8bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e8cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e8dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e8ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e8fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e90c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e91c:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40e970:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40e980:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e990:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e9a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e9b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e9c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e9d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e9e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40e9f0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ea00:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ea10:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ea20:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ea30:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ea40:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40ea98:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eaa8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eab8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eac8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ead8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eae8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eaf8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eb08:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eb18:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eb28:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eb38:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eb48:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eb58:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eb68:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eb78:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40ebbc:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40ebcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ebdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ebec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ebfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ec9c:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40ece4:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40ecf4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed04:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed14:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed24:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed34:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed44:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed54:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed64:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed74:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed84:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ed94:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eda4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40edb4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40edc4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
	...
  40ee0c:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40ee1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ee2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ee3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ee4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ee5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ee6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ee7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ee8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ee9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eeac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eebc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eecc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eedc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eeec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eefc:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40ef30:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40ef40:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ef50:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ef60:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ef70:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ef80:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ef90:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40efa0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40efb0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40efc0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40efd0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40efe0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40eff0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f000:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f010:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f020:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40f05c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f06c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f07c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f08c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f09c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f0ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f0bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f0cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f0dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f0ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f0fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f10c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f11c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f12c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f13c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f14c:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40f180:	0000 ffff ffff ffff ffff ffff ffff ffff     ................
  40f190:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f1a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f1b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f1c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f1d0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f1e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f1f0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f200:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f210:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f220:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f230:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f240:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f250:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f260:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f270:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f280:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40f2a8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f2b8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f2c8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f2d8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f2e8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f2f8:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f308:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f318:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f328:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f338:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f348:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f358:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f368:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f378:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f388:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f398:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f3a8:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
	...
  40f3d0:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40f3e0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f3f0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f400:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f410:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f420:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f430:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f440:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f450:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f460:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f470:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f480:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f490:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f4a0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f4b0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f4c0:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f4d0:	ffff ffff ffff ffff ffff ffff 0000 0000     ................
	...
  40f4f4:	0000 ff00 ffff ffff ffff ffff ffff ffff     ................
  40f504:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f514:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f524:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f534:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f544:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f554:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f564:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f574:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f584:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f594:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f5a4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f5b4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f5c4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f5d4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f5e4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f5f4:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f604:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
	...
  40f61c:	ff00 ffff ffff ffff ffff ffff ffff ffff     ................
  40f62c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f63c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f64c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f65c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f66c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f67c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f68c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f69c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f6ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f6bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f6cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f6dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f6ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f6fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f70c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f71c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f72c:	ffff ffff ffff ffff 0000 0000 0000 0000     ................
  40f73c:	0000 0000 0000 ff00 ffff ffff ffff ffff     ................
  40f74c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f75c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f76c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f77c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f78c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f79c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f7ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f7bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f7cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f7dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f7ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f7fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f80c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f81c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f82c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f83c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f84c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f85c:	ffff ffff 0000 0000 0000 0000 0000 0000     ................
  40f86c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f87c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f88c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f89c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f8ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f8bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f8cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f8dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f8ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f8fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f90c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f91c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f92c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f93c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f94c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f95c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f96c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f97c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f98c:	0000 0000 0000 ffff ffff ffff ffff ffff     ................
  40f99c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f9ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f9bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f9cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f9dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f9ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40f9fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fa9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40faac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fabc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40facc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fadc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40faec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fafc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fb9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fbac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fbbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fbcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fbdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fbec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fbfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fc9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fcac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fcbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fccc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fcdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fcec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fcfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fd9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fdac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fdbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fdcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fddc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fdec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fdfc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fe9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40feac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40febc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fecc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fedc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40feec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fefc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff0c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff1c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff2c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff3c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff4c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff5c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff6c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff7c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff8c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ff9c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ffac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ffbc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ffcc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ffdc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40ffec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  40fffc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41000c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41001c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41002c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41003c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41004c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41005c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41006c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41007c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41008c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41009c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4100ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4100bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4100cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4100dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4100ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4100fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41010c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41011c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41012c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41013c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41014c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41015c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41016c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41017c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41018c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41019c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4101ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4101bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4101cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4101dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4101ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4101fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41020c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41021c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41022c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41023c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41024c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41025c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41026c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41027c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41028c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41029c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4102ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4102bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4102cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4102dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4102ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4102fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41030c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41031c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41032c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41033c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41034c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41035c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41036c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41037c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41038c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41039c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4103ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4103bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4103cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4103dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4103ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4103fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41040c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41041c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41042c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41043c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41044c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41045c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41046c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41047c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41048c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41049c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4104ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4104bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4104cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4104dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4104ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4104fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41050c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41051c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41052c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41053c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41054c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41055c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41056c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41057c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41058c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41059c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4105ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4105bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4105cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4105dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4105ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4105fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41060c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41061c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41062c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41063c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41064c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41065c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41066c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41067c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41068c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41069c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4106ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4106bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4106cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4106dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4106ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4106fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41070c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41071c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41072c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41073c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41074c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41075c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41076c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41077c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41078c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41079c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4107ac:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4107bc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4107cc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4107dc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4107ec:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  4107fc:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41080c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41081c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41082c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41083c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41084c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41085c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41086c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41087c:	ffff ffff ffff ffff ffff ffff ffff ffff     ................
  41088c:	0d0a 616d 5458 756f 6863 6420 7461 2061     ..maXTouch data 
  41089c:	5355 5241 2054 7274 6e61 6d73 7469 6574     USART transmitte
  4108ac:	0a72 000d 6550 6173 6164 0000 6944 2061     r...Pesada..Dia 
  4108bc:	2061 6944 0061 0000 6152 6970 6164 0000     a Dia...Rapida..
  4108cc:	3a58 3325 2064 3a59 3325 2064 000a 0000     X:%3d Y:%3d ....
  4108dc:	6172 6970 6164 0061                         rapidaa.

004108e4 <play>:
  4108e4:	935c 0040 0064 0064 0008 0000 6e65 7274     \.@.d.d.....entr
  4108f4:	756f 6e20 206f 6f74 6375 0068               ou no touch.

00410900 <_global_impure_ptr>:
  410900:	0018 2040 4e49 0046 6e69 0066 414e 004e     ..@ INF.inf.NAN.
  410910:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  410920:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  410930:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  410940:	296c 0000 0030 0000                         l)..0...

00410948 <blanks.7223>:
  410948:	2020 2020 2020 2020 2020 2020 2020 2020                     

00410958 <zeroes.7224>:
  410958:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000

00410968 <blanks.7217>:
  410968:	2020 2020 2020 2020 2020 2020 2020 2020                     

00410978 <zeroes.7218>:
  410978:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  410988:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  410998:	0043 0000 4f50 4953 0058 0000 002e 0000     C...POSIX.......

004109a8 <__mprec_bigtens>:
  4109a8:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  4109b8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4109c8:	bf3c 7f73 4fdd 7515                         <.s..O.u

004109d0 <__mprec_tens>:
  4109d0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4109e0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4109f0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  410a00:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  410a10:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  410a20:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  410a30:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  410a40:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  410a50:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  410a60:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  410a70:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  410a80:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  410a90:	9db4 79d9 7843 44ea                         ...yCx.D

00410a98 <p05.6055>:
  410a98:	0005 0000 0019 0000 007d 0000               ........}...

00410aa4 <_ctype_>:
  410aa4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  410ab4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  410ac4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  410ad4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  410ae4:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  410af4:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  410b04:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  410b14:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  410b24:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00410ba8 <_init>:
  410ba8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  410baa:	bf00      	nop
  410bac:	bcf8      	pop	{r3, r4, r5, r6, r7}
  410bae:	bc08      	pop	{r3}
  410bb0:	469e      	mov	lr, r3
  410bb2:	4770      	bx	lr

00410bb4 <__init_array_start>:
  410bb4:	00405395 	.word	0x00405395

00410bb8 <__frame_dummy_init_array_entry>:
  410bb8:	0040018d                                ..@.

00410bbc <_fini>:
  410bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  410bbe:	bf00      	nop
  410bc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  410bc2:	bc08      	pop	{r3}
  410bc4:	469e      	mov	lr, r3
  410bc6:	4770      	bx	lr

00410bc8 <__fini_array_start>:
  410bc8:	00400169 	.word	0x00400169

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr

2040000a <g_interrupt_enabled>:
2040000a:	0001                                        ..

2040000c <SystemCoreClock>:
2040000c:	0900 003d                                   ..=.

20400010 <_impure_ptr>:
20400010:	0018 2040 0000 0000                         ..@ ....

20400018 <impure_data>:
20400018:	0000 0000 0304 2040 036c 2040 03d4 2040     ......@ l.@ ..@ 
	...
204000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400440 <__malloc_av_>:
	...
20400448:	0440 2040 0440 2040 0448 2040 0448 2040     @.@ @.@ H.@ H.@ 
20400458:	0450 2040 0450 2040 0458 2040 0458 2040     P.@ P.@ X.@ X.@ 
20400468:	0460 2040 0460 2040 0468 2040 0468 2040     `.@ `.@ h.@ h.@ 
20400478:	0470 2040 0470 2040 0478 2040 0478 2040     p.@ p.@ x.@ x.@ 
20400488:	0480 2040 0480 2040 0488 2040 0488 2040     ..@ ..@ ..@ ..@ 
20400498:	0490 2040 0490 2040 0498 2040 0498 2040     ..@ ..@ ..@ ..@ 
204004a8:	04a0 2040 04a0 2040 04a8 2040 04a8 2040     ..@ ..@ ..@ ..@ 
204004b8:	04b0 2040 04b0 2040 04b8 2040 04b8 2040     ..@ ..@ ..@ ..@ 
204004c8:	04c0 2040 04c0 2040 04c8 2040 04c8 2040     ..@ ..@ ..@ ..@ 
204004d8:	04d0 2040 04d0 2040 04d8 2040 04d8 2040     ..@ ..@ ..@ ..@ 
204004e8:	04e0 2040 04e0 2040 04e8 2040 04e8 2040     ..@ ..@ ..@ ..@ 
204004f8:	04f0 2040 04f0 2040 04f8 2040 04f8 2040     ..@ ..@ ..@ ..@ 
20400508:	0500 2040 0500 2040 0508 2040 0508 2040     ..@ ..@ ..@ ..@ 
20400518:	0510 2040 0510 2040 0518 2040 0518 2040     ..@ ..@ ..@ ..@ 
20400528:	0520 2040 0520 2040 0528 2040 0528 2040      .@  .@ (.@ (.@ 
20400538:	0530 2040 0530 2040 0538 2040 0538 2040     0.@ 0.@ 8.@ 8.@ 
20400548:	0540 2040 0540 2040 0548 2040 0548 2040     @.@ @.@ H.@ H.@ 
20400558:	0550 2040 0550 2040 0558 2040 0558 2040     P.@ P.@ X.@ X.@ 
20400568:	0560 2040 0560 2040 0568 2040 0568 2040     `.@ `.@ h.@ h.@ 
20400578:	0570 2040 0570 2040 0578 2040 0578 2040     p.@ p.@ x.@ x.@ 
20400588:	0580 2040 0580 2040 0588 2040 0588 2040     ..@ ..@ ..@ ..@ 
20400598:	0590 2040 0590 2040 0598 2040 0598 2040     ..@ ..@ ..@ ..@ 
204005a8:	05a0 2040 05a0 2040 05a8 2040 05a8 2040     ..@ ..@ ..@ ..@ 
204005b8:	05b0 2040 05b0 2040 05b8 2040 05b8 2040     ..@ ..@ ..@ ..@ 
204005c8:	05c0 2040 05c0 2040 05c8 2040 05c8 2040     ..@ ..@ ..@ ..@ 
204005d8:	05d0 2040 05d0 2040 05d8 2040 05d8 2040     ..@ ..@ ..@ ..@ 
204005e8:	05e0 2040 05e0 2040 05e8 2040 05e8 2040     ..@ ..@ ..@ ..@ 
204005f8:	05f0 2040 05f0 2040 05f8 2040 05f8 2040     ..@ ..@ ..@ ..@ 
20400608:	0600 2040 0600 2040 0608 2040 0608 2040     ..@ ..@ ..@ ..@ 
20400618:	0610 2040 0610 2040 0618 2040 0618 2040     ..@ ..@ ..@ ..@ 
20400628:	0620 2040 0620 2040 0628 2040 0628 2040      .@  .@ (.@ (.@ 
20400638:	0630 2040 0630 2040 0638 2040 0638 2040     0.@ 0.@ 8.@ 8.@ 
20400648:	0640 2040 0640 2040 0648 2040 0648 2040     @.@ @.@ H.@ H.@ 
20400658:	0650 2040 0650 2040 0658 2040 0658 2040     P.@ P.@ X.@ X.@ 
20400668:	0660 2040 0660 2040 0668 2040 0668 2040     `.@ `.@ h.@ h.@ 
20400678:	0670 2040 0670 2040 0678 2040 0678 2040     p.@ p.@ x.@ x.@ 
20400688:	0680 2040 0680 2040 0688 2040 0688 2040     ..@ ..@ ..@ ..@ 
20400698:	0690 2040 0690 2040 0698 2040 0698 2040     ..@ ..@ ..@ ..@ 
204006a8:	06a0 2040 06a0 2040 06a8 2040 06a8 2040     ..@ ..@ ..@ ..@ 
204006b8:	06b0 2040 06b0 2040 06b8 2040 06b8 2040     ..@ ..@ ..@ ..@ 
204006c8:	06c0 2040 06c0 2040 06c8 2040 06c8 2040     ..@ ..@ ..@ ..@ 
204006d8:	06d0 2040 06d0 2040 06d8 2040 06d8 2040     ..@ ..@ ..@ ..@ 
204006e8:	06e0 2040 06e0 2040 06e8 2040 06e8 2040     ..@ ..@ ..@ ..@ 
204006f8:	06f0 2040 06f0 2040 06f8 2040 06f8 2040     ..@ ..@ ..@ ..@ 
20400708:	0700 2040 0700 2040 0708 2040 0708 2040     ..@ ..@ ..@ ..@ 
20400718:	0710 2040 0710 2040 0718 2040 0718 2040     ..@ ..@ ..@ ..@ 
20400728:	0720 2040 0720 2040 0728 2040 0728 2040      .@  .@ (.@ (.@ 
20400738:	0730 2040 0730 2040 0738 2040 0738 2040     0.@ 0.@ 8.@ 8.@ 
20400748:	0740 2040 0740 2040 0748 2040 0748 2040     @.@ @.@ H.@ H.@ 
20400758:	0750 2040 0750 2040 0758 2040 0758 2040     P.@ P.@ X.@ X.@ 
20400768:	0760 2040 0760 2040 0768 2040 0768 2040     `.@ `.@ h.@ h.@ 
20400778:	0770 2040 0770 2040 0778 2040 0778 2040     p.@ p.@ x.@ x.@ 
20400788:	0780 2040 0780 2040 0788 2040 0788 2040     ..@ ..@ ..@ ..@ 
20400798:	0790 2040 0790 2040 0798 2040 0798 2040     ..@ ..@ ..@ ..@ 
204007a8:	07a0 2040 07a0 2040 07a8 2040 07a8 2040     ..@ ..@ ..@ ..@ 
204007b8:	07b0 2040 07b0 2040 07b8 2040 07b8 2040     ..@ ..@ ..@ ..@ 
204007c8:	07c0 2040 07c0 2040 07c8 2040 07c8 2040     ..@ ..@ ..@ ..@ 
204007d8:	07d0 2040 07d0 2040 07d8 2040 07d8 2040     ..@ ..@ ..@ ..@ 
204007e8:	07e0 2040 07e0 2040 07e8 2040 07e8 2040     ..@ ..@ ..@ ..@ 
204007f8:	07f0 2040 07f0 2040 07f8 2040 07f8 2040     ..@ ..@ ..@ ..@ 
20400808:	0800 2040 0800 2040 0808 2040 0808 2040     ..@ ..@ ..@ ..@ 
20400818:	0810 2040 0810 2040 0818 2040 0818 2040     ..@ ..@ ..@ ..@ 
20400828:	0820 2040 0820 2040 0828 2040 0828 2040      .@  .@ (.@ (.@ 
20400838:	0830 2040 0830 2040 0838 2040 0838 2040     0.@ 0.@ 8.@ 8.@ 

20400848 <__malloc_sbrk_base>:
20400848:	ffff ffff                                   ....

2040084c <__malloc_trim_threshold>:
2040084c:	0000 0002                                   ....

20400850 <__atexit_recursive_mutex>:
20400850:	1044 2040                                   D.@ 

20400854 <__global_locale>:
20400854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400934:	7c55 0040 6db9 0040 0000 0000 0aa4 0041     U|@..m@.......A.
20400944:	09a4 0041 0924 0041 0924 0041 0924 0041     ..A.$.A.$.A.$.A.
20400954:	0924 0041 0924 0041 0924 0041 0924 0041     $.A.$.A.$.A.$.A.
20400964:	0924 0041 0924 0041 ffff ffff ffff ffff     $.A.$.A.........
20400974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2040099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
