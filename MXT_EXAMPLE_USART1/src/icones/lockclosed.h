
/*******************************************************************************
* image
* filename: C:/Users/manucirne/Desktop/Insper/Sem5/Embarcados/APS2/lockclosed.xml
* name: lockclose
*
* preset name: Color R8G8B8
* data block size: 32 bit(s), uint32_t
* RLE compression enabled: no
* conversion type: Color, not_used not_used
* bits per pixel: 24
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

/*
 typedef struct {
     const uint32_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     } tImage;
*/
#include <stdint.h>



static const uint32_t image_data_lockclosed[768] = {
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffff1f1, 0xf1a6a6a6, 0x64646435, 0x35351515, 0x15050505, 0x05050515, 0x15153535, 0x35656565, 0xa7a7a7f2, 0xf2f2ffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xd9d9d962, 0x62620a0a, 0x0a000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000a, 0x0a0a6363, 0x63dadada, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffff6f6, 0xf6737373, 0x04040400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00050505, 0x757575f7, 0xf7f7ffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffda, 0xdada2c2c, 0x2c000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000038, 0x3838e6e6, 0xe6ffffff, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xcecece15, 0x15150000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00001c1c, 0x1cd1d1d1, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffdadada, 0x15151500, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x001c1c1c, 0xe7e7e7ff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xfffff6f6, 0xf62c2c2c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000c, 0x0c0c5f5f, 0x5f8f8f8f, 0x8f8f8f5e, 0x5e5e0c0c, 0x0c000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x383838f8, 0xf8f8ffff, 0xffffffff, 
    0xffffffff, 0xffff7373, 0x73000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x474747e9, 0xe9e9ffff, 0xffffffff, 0xffffffff, 0xffffe8e8, 0xe8464646, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007e, 0x7e7effff, 0xffffffff, 
    0xffffffd9, 0xd9d90404, 0x04000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x003a3a3a, 0xf9f9f9ff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff8f8f8, 0x39393900, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000c, 0x0c0ce7e7, 0xe7ffffff, 
    0xffffff62, 0x62620000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00cdcdcd, 0xffffffff, 0xffffb2b2, 0xb2414141, 0x414141b4, 0xb4b4ffff, 0xffffffff, 0xcccccc00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00006969, 0x69ffffff, 
    0xf1f1f10a, 0x0a0a0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00002525, 0x25ffffff, 0xffffffcd, 0xcdcd0303, 0x03000000, 0x00000004, 0x0404cfcf, 0xcfffffff, 0xffffff24, 0x24240000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000b0b, 0x0bf3f3f3, 
    0xa6a6a600, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00004747, 0x47ffffff, 0xffffff83, 0x83830000, 0x00000000, 0x00000000, 0x00008383, 0x83ffffff, 0xffffff47, 0x47470000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00a8a8a8, 
    0x64646400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00004d4d, 0x4dffffff, 0xffffff77, 0x77770000, 0x00000000, 0x00000000, 0x00007777, 0x77ffffff, 0xffffff4d, 0x4d4d0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00666666, 
    0x35353500, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00004d4d, 0x4dffffff, 0xffffff77, 0x77770000, 0x00000000, 0x00000000, 0x00007777, 0x77ffffff, 0xffffff4d, 0x4d4d0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00383838, 
    0x14141400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000009, 0x09099999, 0x99ffffff, 0xffffffc8, 0xc8c89999, 0x99999999, 0x99999999, 0x9999c8c8, 0xc8ffffff, 0xffffff98, 0x98980808, 0x08000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00161616, 
    0x06060600, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000095, 0x9595ffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff9494, 0x94000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00070707, 
    0x06060600, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000ca, 0xcacaffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffc9c9, 0xc9000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00070707, 
    0x14141400, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000cb, 0xcbcbffff, 0xffffffff, 0xffffffff, 0xffffe8e8, 0xe85a5a5a, 0x5b5b5be8, 0xe8e8ffff, 0xffffffff, 0xffffffff, 0xffffcbcb, 0xcb000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00161616, 
    0x35353500, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000cb, 0xcbcbffff, 0xffffffff, 0xffffffff, 0xffff6d6d, 0x6d000000, 0x0000006e, 0x6e6effff, 0xffffffff, 0xffffffff, 0xffffcbcb, 0xcb000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00383838, 
    0x65656500, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000cb, 0xcbcbffff, 0xffffffff, 0xffffffff, 0xffff8686, 0x86000000, 0x00000088, 0x8888ffff, 0xffffffff, 0xffffffff, 0xffffcbcb, 0xcb000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00676767, 
    0xa7a7a700, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000cb, 0xcbcbffff, 0xffffffff, 0xffffffff, 0xfffffcfc, 0xfc212121, 0x212121fc, 0xfcfcffff, 0xffffffff, 0xffffffff, 0xffffcbcb, 0xcb000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00aaaaaa, 
    0xf3f3f30b, 0x0b0b0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000cb, 0xcbcbffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff2c2c2c, 0x2c2c2cff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffcbcb, 0xcb000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000b0b, 0x0bf3f3f3, 
    0xffffff63, 0x63630000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x000000c0, 0xc0c0ffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffd5d5d5, 0xd5d5d5ff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffc0c0, 0xc0000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00006565, 0x65ffffff, 
    0xffffffda, 0xdada0505, 0x05000000, 0x00000000, 0x00000000, 0x00000000, 0x00000056, 0x5656fafa, 0xfaffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffffffa, 0xfafa5555, 0x55000000, 0x00000000, 0x00000000, 0x00000000, 0x00000006, 0x0606dddd, 0xddffffff, 
    0xffffffff, 0xffff7575, 0x75000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00001919, 0x19333333, 0x33333333, 0x33333333, 0x33333333, 0x33333333, 0x33333333, 0x33333333, 0x33333318, 0x18180000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000078, 0x7878ffff, 0xffffffff, 
    0xffffffff, 0xfffff7f7, 0xf7383838, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x393939f8, 0xf8f8ffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffe7e7e7, 0x1d1d1d00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x001a1a1a, 0xe4e4e4ff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xd1d1d11c, 0x1c1c0000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00001d1d, 0x1dd2d2d2, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffea, 0xeaea3e3e, 0x3e000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000039, 0x3939e7e7, 0xe7ffffff, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffff8f8, 0xf87e7e7e, 0x0b0b0b00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00060606, 0x797979f8, 0xf8f8ffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xe7e7e769, 0x69690b0b, 0x0b000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000b, 0x0b0b6666, 0x66dddddd, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffff3f3, 0xf3a8a8a8, 0x67676737, 0x37371616, 0x16060606, 0x06060616, 0x16163737, 0x37686868, 0xa9a9a9f3, 0xf3f3ffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff
};
const tImage lockclosed = { image_data_lockclosed, 32, 32,
    32 };

